etl_container  | Started etl pipeline for transforming the MIMIC dataset.
etl_container  | Populating staging area...
etl_container  | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container  | CREATE SCHEMA stage_omopcdm;
etl_container  | CREATE VIEW stage_omopcdm.admissions AS 
etl_container  | SELECT * FROM  mimiciv_hosp.admissions;
etl_container  | CREATE VIEW stage_omopcdm.patients AS 
etl_container  | SELECT * FROM  mimiciv_hosp.patients;
etl_container  | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container  | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container  | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container  | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container  | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container  | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container  | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container  | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container  | CREATE VIEW stage_omopcdm.labevents AS 
etl_container  | SELECT * FROM  mimiciv_hosp.labevents;
etl_container  | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container  | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container  | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container  | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container  | CREATE VIEW stage_omopcdm.transfers AS 
etl_container  | SELECT * FROM  mimiciv_hosp.transfers;
etl_container  | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container  | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container  | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container  | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container  | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container  | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container  | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container  | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container  | CREATE VIEW stage_omopcdm.emar AS 
etl_container  | SELECT * FROM  mimiciv_hosp.emar;
etl_container  | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container  | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container  | CREATE VIEW stage_omopcdm.omr AS 
etl_container  | SELECT * FROM  mimiciv_hosp.omr;
etl_container  | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container  | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container  | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container  | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container  | CREATE VIEW stage_omopcdm.poe AS 
etl_container  | SELECT * FROM  mimiciv_hosp.poe;
etl_container  | CREATE VIEW stage_omopcdm.provider AS 
etl_container  | SELECT * FROM  mimiciv_hosp.provider;
etl_container  | CREATE VIEW stage_omopcdm.services AS 
etl_container  | SELECT * FROM  mimiciv_hosp.services;
etl_container  | CREATE VIEW stage_omopcdm.icustays AS 
etl_container  | SELECT * FROM  mimiciv_icu.icustays;
etl_container  | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.chartevents;
etl_container  | CREATE VIEW stage_omopcdm.d_items AS 
etl_container  | SELECT * FROM  mimiciv_icu.d_items;
etl_container  | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container  | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.inputevents;
etl_container  | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.outputevents;
etl_container  | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container  | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container  | SELECT * FROM  mimiciv_icu.caregiver;
etl_container  | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container  | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container  | CREATE VIEW stage_omopcdm.concept AS 
etl_container  | SELECT * FROM  vocabulary.concept;
etl_container  | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container  | SELECT * FROM  vocabulary.vocabulary;
etl_container  | CREATE VIEW stage_omopcdm.domain AS 
etl_container  | SELECT * FROM  vocabulary.domain;
etl_container  | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container  | SELECT * FROM  vocabulary.concept_class;
etl_container  | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container  | SELECT * FROM  vocabulary.concept_relationship;
etl_container  | CREATE VIEW stage_omopcdm.relationship AS 
etl_container  | SELECT * FROM  vocabulary.relationship;
etl_container  | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container  | SELECT * FROM  vocabulary.concept_synonym;
etl_container  | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container  | SELECT * FROM  vocabulary.concept_ancestor;
etl_container  | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container  | SELECT * FROM  vocabulary.drug_strength;
etl_container  | Building MIMIC...
etl_container  | SET search_path TO stage_omopcdm;
etl_container  | CREATE TABLE cdm_cohort_definition (
etl_container  |   cohort_definition_id            INTEGER       NOT NULL,
etl_container  |   cohort_definition_name          text      NOT NULL,
etl_container  |   cohort_definition_description   text              ,
etl_container  |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container  |   cohort_definition_syntax        text              ,
etl_container  |   subject_concept_id              INTEGER       NOT NULL,
etl_container  |   cohort_initiation_date          DATE
etl_container  | )
etl_container  | ;
etl_container  | CREATE TABLE cdm_attribute_definition (
etl_container  |   attribute_definition_id     INTEGER       NOT NULL,
etl_container  |   attribute_name              text      NOT NULL,
etl_container  |   attribute_description       text              ,
etl_container  |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container  |   attribute_syntax            text
etl_container  | )
etl_container  | ;
etl_container  | CREATE TABLE cdm_cdm_source
etl_container  | (
etl_container  |   cdm_source_name                 text        NOT NULL ,
etl_container  |   cdm_source_abbreviation         text             ,
etl_container  |   cdm_holder                      text             ,
etl_container  |   source_description              text             ,
etl_container  |   source_documentation_reference  text             ,
etl_container  |   cdm_etl_reference               text             ,
etl_container  |   source_release_date             DATE               ,
etl_container  |   cdm_release_date                DATE               ,
etl_container  |   cdm_version                     text             ,
etl_container  |   vocabulary_version              text
etl_container  | )
etl_container  | ;
etl_container  | CREATE TABLE cdm_metadata
etl_container  | (
etl_container  |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container  |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container  |   NAME                      text      NOT NULL ,
etl_container  |   value_as_text           text               ,
etl_container  |   value_as_concept_id       INTEGER                ,
etl_container  |   metadata_date             DATE                 ,
etl_container  |   metadata_datetime         TIMESTAMP
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_person
etl_container  | (
etl_container  |   person_id                   INTEGER     NOT NULL ,
etl_container  |   gender_concept_id           INTEGER     NOT NULL ,
etl_container  |   year_of_birth               INTEGER     NOT NULL ,
etl_container  |   month_of_birth              INTEGER              ,
etl_container  |   day_of_birth                INTEGER              ,
etl_container  |   birth_datetime              TIMESTAMP           ,
etl_container  |   race_concept_id             INTEGER     NOT NULL,
etl_container  |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container  |   location_id                 INTEGER              ,
etl_container  |   provider_id                 INTEGER              ,
etl_container  |   care_site_id                INTEGER              ,
etl_container  |   person_source_value         text             ,
etl_container  |   gender_source_value         text             ,
etl_container  |   gender_source_concept_id    INTEGER              ,
etl_container  |   race_source_value           text             ,
etl_container  |   race_source_concept_id      INTEGER              ,
etl_container  |   ethnicity_source_value      text             ,
etl_container  |   ethnicity_source_concept_id INTEGER
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_observation_period
etl_container  | (
etl_container  |   observation_period_id             INTEGER   NOT NULL ,
etl_container  |   person_id                         INTEGER   NOT NULL ,
etl_container  |   observation_period_start_date     DATE    NOT NULL ,
etl_container  |   observation_period_end_date       DATE    NOT NULL ,
etl_container  |   period_type_concept_id            INTEGER   NOT NULL
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_specimen
etl_container  | (
etl_container  |   specimen_id                 INTEGER     NOT NULL ,
etl_container  |   person_id                   INTEGER     NOT NULL ,
etl_container  |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container  |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container  |   specimen_date               DATE      NOT NULL ,
etl_container  |   specimen_datetime           TIMESTAMP           ,
etl_container  |   quantity                    NUMERIC            ,
etl_container  |   unit_concept_id             INTEGER              ,
etl_container  |   anatomic_site_concept_id    INTEGER              ,
etl_container  |   disease_status_concept_id   INTEGER              ,
etl_container  |   specimen_source_id          text             ,
etl_container  |   specimen_source_value       text             ,
etl_container  |   unit_source_value           text             ,
etl_container  |   anatomic_site_source_value  text             ,
etl_container  |   disease_status_source_value text
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_death
etl_container  | (
etl_container  |   person_id               INTEGER     NOT NULL ,
etl_container  |   death_date              DATE      NOT NULL ,
etl_container  |   death_datetime          TIMESTAMP           ,
etl_container  |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container  |   cause_concept_id        INTEGER              ,
etl_container  |   cause_source_value      text             ,
etl_container  |   cause_source_concept_id INTEGER
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_visit_occurrence
etl_container  | (
etl_container  |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container  |   person_id                     INTEGER     NOT NULL ,
etl_container  |   visit_concept_id              INTEGER     NOT NULL ,
etl_container  |   visit_start_date              DATE      NOT NULL ,
etl_container  |   visit_start_datetime          TIMESTAMP           ,
etl_container  |   visit_end_date                DATE      NOT NULL ,
etl_container  |   visit_end_datetime            TIMESTAMP           ,
etl_container  |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container  |   provider_id                   INTEGER              ,
etl_container  |   care_site_id                  INTEGER              ,
etl_container  |   visit_source_value            text             ,
etl_container  |   visit_source_concept_id       INTEGER              ,
etl_container  |   admitting_source_concept_id   INTEGER              ,
etl_container  |   admitting_source_value        text             ,
etl_container  |   discharge_to_concept_id       INTEGER              ,
etl_container  |   discharge_to_source_value     text             ,
etl_container  |   preceding_visit_occurrence_id INTEGER
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_visit_detail
etl_container  | (
etl_container  |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container  |   person_id                          INTEGER     NOT NULL ,
etl_container  |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container  |   visit_detail_start_date            DATE      NOT NULL ,
etl_container  |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container  |   visit_detail_end_date              DATE      NOT NULL ,
etl_container  |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container  |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container  |   provider_id                        INTEGER              ,
etl_container  |   care_site_id                       INTEGER              ,
etl_container  |   admitting_source_concept_id        INTEGER              ,
etl_container  |   discharge_to_concept_id            INTEGER              ,
etl_container  |   preceding_visit_detail_id          INTEGER              ,
etl_container  |   visit_detail_source_value          text             ,
etl_container  |   visit_detail_source_concept_id     INTEGER              ,
etl_container  |   admitting_source_value             text             ,
etl_container  |   discharge_to_source_value          text             ,
etl_container  |   visit_detail_parent_id             INTEGER              ,
etl_container  |   visit_occurrence_id                INTEGER     NOT NULL
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_procedure_occurrence
etl_container  | (
etl_container  |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container  |   person_id                   INTEGER     NOT NULL ,
etl_container  |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container  |   procedure_date              DATE      NOT NULL ,
etl_container  |   procedure_datetime          TIMESTAMP           ,
etl_container  |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container  |   modifier_concept_id         INTEGER              ,
etl_container  |   quantity                    INTEGER              ,
etl_container  |   provider_id                 INTEGER              ,
etl_container  |   visit_occurrence_id         INTEGER              ,
etl_container  |   visit_detail_id             INTEGER              ,
etl_container  |   procedure_source_value      text             ,
etl_container  |   procedure_source_concept_id INTEGER              ,
etl_container  |   modifier_source_value      text
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_drug_exposure
etl_container  | (
etl_container  |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container  |   person_id                     INTEGER       NOT NULL ,
etl_container  |   drug_concept_id               INTEGER       NOT NULL ,
etl_container  |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container  |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container  |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container  |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container  |   verbatim_end_date             DATE                 ,
etl_container  |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container  |   stop_reason                   text               ,
etl_container  |   refills                       INTEGER                ,
etl_container  |   quantity                      NUMERIC              ,
etl_container  |   days_supply                   INTEGER                ,
etl_container  |   sig                           text               ,
etl_container  |   route_concept_id              INTEGER                ,
etl_container  |   lot_number                    text               ,
etl_container  |   provider_id                   INTEGER                ,
etl_container  |   visit_occurrence_id           INTEGER                ,
etl_container  |   visit_detail_id               INTEGER                ,
etl_container  |   drug_source_value             text               ,
etl_container  |   drug_source_concept_id        INTEGER                ,
etl_container  |   route_source_value            text               ,
etl_container  |   dose_unit_source_value        text
etl_container  | )
etl_container  | ;
etl_container  | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container  | CREATE TABLE cdm_device_exposure
etl_container  | (
etl_container  |   device_exposure_id              INTEGER       NOT NULL ,
etl_container  |   person_id                       INTEGER       NOT NULL ,
etl_container  |   device_concept_id               INTEGER       NOT NULL ,
etl_container  |   device_exposure_start_date      DATE        NOT NULL ,
etl_container  |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container  |   device_exposure_end_date        DATE                 ,
etl_container  |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container  |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container  |   unique_device_id                text               ,
etl_container  |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-04 11:08:47.898 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-04 11:08:47.898 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-04 11:08:47.898 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-04 11:08:47.959 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-04 11:08:47.992 UTC [28] LOG:  database system was shut down at 2024-11-03 22:41:09 UTC
postgres_container  | 2024-11-04 11:08:48.052 UTC [1] LOG:  database system is ready to accept connections
postgres_container  | 2024-11-04 11:09:15.844 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 11:09:15.844 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 11:09:15.844 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:13:45.513 UTC [26] LOG:  checkpoint complete: wrote 10178 buffers (62.1%); 0 WAL file(s) added, 0 removed, 33 recycled; write=269.133 s, sync=0.064 s, total=269.669 s; sync files=266, longest=0.014 s, average=0.001 s; distance=540640 kB, estimate=540640 kB; lsn=C/B939A638, redo lsn=C/A13FFDA0
postgres_container  | 2024-11-04 11:31:31.013 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:31:55.620 UTC [26] LOG:  checkpoint complete: wrote 11521 buffers (70.3%); 0 WAL file(s) added, 0 removed, 33 recycled; write=21.325 s, sync=1.494 s, total=24.607 s; sync files=248, longest=1.135 s, average=0.007 s; distance=536804 kB, estimate=540256 kB; lsn=C/E0A6DB18, redo lsn=C/C2038E08
postgres_container  | 2024-11-04 11:31:55.621 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 11:31:55.621 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 11:31:55.621 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:36:25.584 UTC [26] LOG:  checkpoint complete: wrote 7307 buffers (44.6%); 0 WAL file(s) added, 0 removed, 34 recycled; write=269.307 s, sync=0.039 s, total=269.964 s; sync files=121, longest=0.011 s, average=0.001 s; distance=558870 kB, estimate=558870 kB; lsn=C/F229AF80, redo lsn=C/E41FE9A0
postgres_container  | 2024-11-04 11:40:08.444 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:40:33.262 UTC [26] LOG:  checkpoint complete: wrote 10276 buffers (62.7%); 0 WAL file(s) added, 1 removed, 32 recycled; write=19.857 s, sync=2.312 s, total=24.818 s; sync files=245, longest=1.369 s, average=0.010 s; distance=538984 kB, estimate=556882 kB; lsn=D/2427A280, redo lsn=D/5058C98
postgres_container  | 2024-11-04 11:40:33.263 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 11:40:33.263 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 11:40:33.263 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:45:03.660 UTC [26] LOG:  checkpoint complete: wrote 3900 buffers (23.8%); 0 WAL file(s) added, 0 removed, 35 recycled; write=269.753 s, sync=0.036 s, total=270.398 s; sync files=73, longest=0.016 s, average=0.001 s; distance=576531 kB, estimate=576531 kB; lsn=D/2B180368, redo lsn=D/2835D950
postgres_container  | 2024-11-04 11:51:48.355 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 11:54:51.065 UTC [26] LOG:  checkpoint complete: wrote 9729 buffers (59.4%); 0 WAL file(s) added, 0 removed, 33 recycled; write=182.057 s, sync=0.061 s, total=182.710 s; sync files=275, longest=0.015 s, average=0.001 s; distance=541348 kB, estimate=573012 kB; lsn=D/64015420, redo lsn=D/49406CB0
postgres_container  | 2024-11-04 12:01:00.011 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:01:26.555 UTC [26] LOG:  checkpoint complete: wrote 5134 buffers (31.3%); 0 WAL file(s) added, 0 removed, 33 recycled; write=22.062 s, sync=3.036 s, total=26.545 s; sync files=235, longest=2.290 s, average=0.013 s; distance=538769 kB, estimate=569588 kB; lsn=D/88F3E450, redo lsn=D/6A22B2B8
postgres_container  | 2024-11-04 12:01:26.556 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 12:01:26.556 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:01:26.556 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:05:17.818 UTC [26] LOG:  checkpoint complete: wrote 6274 buffers (38.3%); 0 WAL file(s) added, 8 removed, 25 recycled; write=225.416 s, sync=4.300 s, total=231.262 s; sync files=262, longest=0.688 s, average=0.017 s; distance=548860 kB, estimate=567515 kB; lsn=D/B1401780, redo lsn=D/8BA2A300
postgres_container  | 2024-11-04 12:05:17.824 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:05:44.656 UTC [26] LOG:  checkpoint complete: wrote 10274 buffers (62.7%); 0 WAL file(s) added, 8 removed, 32 recycled; write=21.674 s, sync=3.792 s, total=26.832 s; sync files=136, longest=2.762 s, average=0.028 s; distance=654466 kB, estimate=654466 kB; lsn=D/D2402AB0, redo lsn=D/B394AC80
postgres_container  | 2024-11-04 12:05:44.656 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 12:05:44.656 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:05:44.657 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:10:14.617 UTC [26] LOG:  checkpoint complete: wrote 6103 buffers (37.2%); 0 WAL file(s) added, 0 removed, 34 recycled; write=269.347 s, sync=0.040 s, total=269.961 s; sync files=63, longest=0.020 s, average=0.001 s; distance=550085 kB, estimate=644028 kB; lsn=D/D5DA54B0, redo lsn=D/D527C2E8
postgres_container  | 2024-11-04 12:12:53.632 UTC [874] LOG:  skipping analyze of "labevents" --- lock not available
postgres_container  | 2024-11-04 12:13:14.866 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:16:57.979 UTC [26] LOG:  checkpoint complete: wrote 7502 buffers (45.8%); 0 WAL file(s) added, 0 removed, 33 recycled; write=222.489 s, sync=0.063 s, total=223.114 s; sync files=279, longest=0.016 s, average=0.001 s; distance=542220 kB, estimate=633847 kB; lsn=E/EC57238, redo lsn=D/F63FF6B0
postgres_container  | 2024-11-04 12:17:18.150 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:17:43.665 UTC [26] LOG:  checkpoint complete: wrote 11157 buffers (68.1%); 0 WAL file(s) added, 0 removed, 33 recycled; write=21.435 s, sync=2.651 s, total=25.516 s; sync files=242, longest=2.537 s, average=0.011 s; distance=537222 kB, estimate=624185 kB; lsn=E/35665B10, redo lsn=E/170A0EB0
postgres_container  | 2024-11-04 12:17:43.666 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 12:17:43.666 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:17:43.666 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:21:59.932 UTC [26] LOG:  checkpoint complete: wrote 2418 buffers (14.8%); 0 WAL file(s) added, 0 removed, 33 recycled; write=255.734 s, sync=0.036 s, total=256.267 s; sync files=98, longest=0.013 s, average=0.001 s; distance=546578 kB, estimate=616424 kB; lsn=E/47D485C8, redo lsn=E/38665A58
postgres_container  | 2024-11-04 12:26:24.902 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:26:48.850 UTC [26] LOG:  checkpoint complete: wrote 11236 buffers (68.6%); 0 WAL file(s) added, 1 removed, 32 recycled; write=17.690 s, sync=3.484 s, total=23.948 s; sync files=244, longest=1.886 s, average=0.015 s; distance=536196 kB, estimate=608401 kB; lsn=E/78C111A8, redo lsn=E/59206B88
postgres_container  | 2024-11-04 12:26:48.855 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 12:26:48.855 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:26:48.855 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:31:18.677 UTC [26] LOG:  checkpoint complete: wrote 3525 buffers (21.5%); 0 WAL file(s) added, 0 removed, 35 recycled; write=269.100 s, sync=0.039 s, total=269.823 s; sync files=73, longest=0.019 s, average=0.001 s; distance=572952 kB, estimate=604856 kB; lsn=E/80C12A48, redo lsn=E/7C18CCF8
postgres_container  | 2024-11-04 12:34:53.398 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:36:27.419 UTC [26] LOG:  checkpoint complete: wrote 10293 buffers (62.8%); 0 WAL file(s) added, 0 removed, 33 recycled; write=91.951 s, sync=0.818 s, total=94.023 s; sync files=277, longest=0.668 s, average=0.003 s; distance=539238 kB, estimate=598294 kB; lsn=E/B9A53628, redo lsn=E/9D0267C0
postgres_container  | 2024-11-04 12:39:18.921 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:39:46.456 UTC [26] LOG:  checkpoint complete: wrote 5080 buffers (31.0%); 0 WAL file(s) added, 0 removed, 33 recycled; write=24.075 s, sync=1.921 s, total=27.536 s; sync files=235, longest=1.636 s, average=0.009 s; distance=544608 kB, estimate=592926 kB; lsn=E/DC6D49A8, redo lsn=E/BE3FEAE8
postgres_container  | 2024-11-04 12:39:46.555 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 12:39:46.555 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:39:46.555 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:43:41.521 UTC [26] LOG:  checkpoint complete: wrote 6460 buffers (39.4%); 0 WAL file(s) added, 2 removed, 31 recycled; write=231.740 s, sync=1.914 s, total=234.967 s; sync files=262, longest=0.267 s, average=0.008 s; distance=540190 kB, estimate=587652 kB; lsn=E/FF1B7450, redo lsn=E/DF386520
postgres_container  | 2024-11-04 12:43:41.522 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:44:06.329 UTC [26] LOG:  checkpoint complete: wrote 11503 buffers (70.2%); 0 WAL file(s) added, 3 removed, 32 recycled; write=21.257 s, sync=2.104 s, total=24.808 s; sync files=158, longest=0.558 s, average=0.014 s; distance=573086 kB, estimate=586196 kB; lsn=F/21B86F00, redo lsn=F/232DF10
postgres_container  | 2024-11-04 12:44:06.330 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 12:44:06.330 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:44:06.330 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:47:27.788 UTC [26] LOG:  checkpoint complete: wrote 7143 buffers (43.6%); 0 WAL file(s) added, 2 removed, 32 recycled; write=196.862 s, sync=2.533 s, total=201.459 s; sync files=233, longest=1.655 s, average=0.011 s; distance=563255 kB, estimate=583901 kB; lsn=F/436BA940, redo lsn=F/2493BB10
postgres_container  | 2024-11-04 12:47:27.790 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:47:49.876 UTC [26] LOG:  checkpoint complete: wrote 9552 buffers (58.3%); 0 WAL file(s) added, 0 removed, 33 recycled; write=18.676 s, sync=2.890 s, total=22.087 s; sync files=131, longest=2.802 s, average=0.023 s; distance=541343 kB, estimate=579646 kB; lsn=F/63C4EA50, redo lsn=F/459E39D8
postgres_container  | 2024-11-04 12:50:52.643 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:51:18.948 UTC [26] LOG:  checkpoint complete: wrote 5382 buffers (32.8%); 0 WAL file(s) added, 0 removed, 33 recycled; write=24.740 s, sync=0.459 s, total=26.305 s; sync files=268, longest=0.320 s, average=0.002 s; distance=531759 kB, estimate=574857 kB; lsn=F/84326468, redo lsn=F/6612F5E0
postgres_container  | 2024-11-04 12:51:19.466 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 12:51:19.466 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:51:19.467 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:54:16.552 UTC [26] LOG:  checkpoint complete: wrote 5696 buffers (34.8%); 0 WAL file(s) added, 0 removed, 33 recycled; write=175.731 s, sync=0.242 s, total=177.086 s; sync files=199, longest=0.078 s, average=0.002 s; distance=543714 kB, estimate=571743 kB; lsn=F/A5139598, redo lsn=F/87428140
postgres_container  | 2024-11-04 12:54:20.888 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:54:43.063 UTC [26] LOG:  checkpoint complete: wrote 10767 buffers (65.7%); 0 WAL file(s) added, 0 removed, 33 recycled; write=18.353 s, sync=2.470 s, total=22.175 s; sync files=203, longest=2.304 s, average=0.013 s; distance=537222 kB, estimate=568291 kB; lsn=F/C6796948, redo lsn=F/A80C9BC0
postgres_container  | 2024-11-04 12:54:43.064 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 12:54:43.064 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 12:54:43.064 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:57:04.576 UTC [26] LOG:  checkpoint complete: wrote 2821 buffers (17.2%); 0 WAL file(s) added, 7 removed, 27 recycled; write=134.671 s, sync=5.428 s, total=141.513 s; sync files=242, longest=1.534 s, average=0.023 s; distance=559840 kB, estimate=567446 kB; lsn=F/EEF7DE50, redo lsn=F/CA381F80
postgres_container  | 2024-11-04 12:57:04.577 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 12:57:26.362 UTC [26] LOG:  checkpoint complete: wrote 10242 buffers (62.5%); 0 WAL file(s) added, 5 removed, 33 recycled; write=19.466 s, sync=1.625 s, total=21.786 s; sync files=163, longest=1.459 s, average=0.010 s; distance=627922 kB, estimate=627922 kB; lsn=10/E8DCCA8, redo lsn=F/F08B6AE0
postgres_container  | 2024-11-04 13:00:13.127 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:00:46.463 UTC [26] LOG:  checkpoint complete: wrote 5656 buffers (34.5%); 0 WAL file(s) added, 0 removed, 33 recycled; write=27.737 s, sync=1.808 s, total=33.336 s; sync files=232, longest=1.674 s, average=0.008 s; distance=535753 kB, estimate=618705 kB; lsn=10/2F63BE28, redo lsn=10/113E8FA8
postgres_container  | 2024-11-04 13:00:46.464 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:02:32.989 UTC [26] LOG:  checkpoint complete: wrote 6711 buffers (41.0%); 0 WAL file(s) added, 1 removed, 33 recycled; write=104.048 s, sync=0.562 s, total=106.526 s; sync files=211, longest=0.176 s, average=0.003 s; distance=560892 kB, estimate=612924 kB; lsn=10/51531798, redo lsn=10/337A7FE0
postgres_container  | 2024-11-04 13:02:33.442 UTC [2239] LOG:  skipping analyze of "concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 13:02:35.023 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:02:56.099 UTC [26] LOG:  checkpoint complete: wrote 11127 buffers (67.9%); 0 WAL file(s) added, 1 removed, 32 recycled; write=16.519 s, sync=2.535 s, total=21.076 s; sync files=192, longest=2.253 s, average=0.014 s; distance=536949 kB, estimate=605327 kB; lsn=10/732A5050, redo lsn=10/54405750
postgres_container  | 2024-11-04 13:02:56.099 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 13:02:56.099 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 13:02:56.100 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:06:44.196 UTC [26] LOG:  checkpoint complete: wrote 1732 buffers (10.6%); 0 WAL file(s) added, 1 removed, 33 recycled; write=225.166 s, sync=1.229 s, total=228.097 s; sync files=230, longest=1.035 s, average=0.006 s; distance=555848 kB, estimate=600379 kB; lsn=10/94AC8F78, redo lsn=10/762D7AC0
postgres_container  | 2024-11-04 13:06:44.197 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:07:10.409 UTC [26] LOG:  checkpoint complete: wrote 10591 buffers (64.6%); 0 WAL file(s) added, 1 removed, 32 recycled; write=22.393 s, sync=1.834 s, total=26.213 s; sync files=161, longest=1.238 s, average=0.012 s; distance=543967 kB, estimate=594738 kB; lsn=10/B6691F58, redo lsn=10/9760F880
postgres_container  | 2024-11-04 13:07:10.410 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 13:07:10.410 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 13:07:10.410 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:11:40.704 UTC [26] LOG:  checkpoint complete: wrote 6931 buffers (42.3%); 0 WAL file(s) added, 0 removed, 34 recycled; write=269.571 s, sync=0.045 s, total=270.295 s; sync files=122, longest=0.020 s, average=0.001 s; distance=565605 kB, estimate=591824 kB; lsn=10/BA72A130, redo lsn=10/B9E69078
postgres_container  | 2024-11-04 13:17:10.804 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:21:40.071 UTC [26] LOG:  checkpoint complete: wrote 4567 buffers (27.9%); 0 WAL file(s) added, 0 removed, 1 recycled; write=269.155 s, sync=0.031 s, total=269.267 s; sync files=25, longest=0.014 s, average=0.002 s; distance=8983 kB, estimate=533540 kB; lsn=10/BA7309F0, redo lsn=10/BA72EDA8
postgres_container  | 2024-11-04 13:27:10.176 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:27:10.565 UTC [26] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.309 s, sync=0.022 s, total=0.390 s; sync files=4, longest=0.013 s, average=0.006 s; distance=9 kB, estimate=480187 kB; lsn=10/BA7314A8, redo lsn=10/BA731450
postgres_container  | 2024-11-04 13:32:10.632 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:32:11.049 UTC [26] LOG:  checkpoint complete: wrote 4 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.324 s, sync=0.026 s, total=0.418 s; sync files=4, longest=0.019 s, average=0.007 s; distance=8 kB, estimate=432169 kB; lsn=10/BA733708, redo lsn=10/BA7336B0
postgres_container  | 2024-11-04 13:37:10.104 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:37:11.008 UTC [26] LOG:  checkpoint complete: wrote 9 buffers (0.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.815 s, sync=0.033 s, total=0.905 s; sync files=8, longest=0.019 s, average=0.005 s; distance=39 kB, estimate=388956 kB; lsn=10/BA73D588, redo lsn=10/BA73D530
postgres_container  | 2024-11-04 13:42:10.440 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:42:35.081 UTC [26] LOG:  checkpoint complete: wrote 9590 buffers (58.5%); 0 WAL file(s) added, 8 removed, 0 recycled; write=21.921 s, sync=2.404 s, total=24.642 s; sync files=231, longest=2.259 s, average=0.011 s; distance=126526 kB, estimate=362713 kB; lsn=10/E076C6C8, redo lsn=10/C22CD020
postgres_container  | 2024-11-04 13:42:36.163 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 13:42:36.163 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 13:42:36.163 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:45:02.311 UTC [26] LOG:  checkpoint complete: wrote 2531 buffers (15.4%); 0 WAL file(s) added, 0 removed, 33 recycled; write=145.546 s, sync=0.034 s, total=146.148 s; sync files=106, longest=0.015 s, average=0.001 s; distance=541835 kB, estimate=541835 kB; lsn=10/F36D6668, redo lsn=10/E33EFC48
postgres_container  | 2024-11-04 13:45:35.149 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:45:58.647 UTC [26] LOG:  checkpoint complete: wrote 11530 buffers (70.4%); 0 WAL file(s) added, 1 removed, 32 recycled; write=18.664 s, sync=3.065 s, total=23.498 s; sync files=248, longest=1.543 s, average=0.013 s; distance=540736 kB, estimate=541725 kB; lsn=11/2310E438, redo lsn=11/43FFDB8
postgres_container  | 2024-11-04 13:45:58.720 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 13:45:58.720 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 13:45:58.720 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:46:52.574 UTC [2843] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:46:52.574 UTC [2843] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:46:54.179 UTC [2869] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:46:54.179 UTC [2869] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:46:56.036 UTC [2897] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:46:56.036 UTC [2897] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:46:58.492 UTC [2913] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:46:58.492 UTC [2913] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:00.771 UTC [2925] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:47:00.771 UTC [2925] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:03.611 UTC [2927] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:47:03.611 UTC [2927] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:08.126 UTC [2952] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:47:08.126 UTC [2952] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:08.518 UTC [2868] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 13:47:08.518 UTC [2868] CONTEXT:  while scanning block 39742 of relation "vocabulary.concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.vocabulary.concept_ancestor"
postgres_container  | 2024-11-04 13:47:17.980 UTC [2964] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:47:17.980 UTC [2964] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:19.021 UTC [26] LOG:  checkpoint complete: wrote 2687 buffers (16.4%); 0 WAL file(s) added, 1 removed, 32 recycled; write=75.643 s, sync=2.923 s, total=80.302 s; sync files=560, longest=1.390 s, average=0.006 s; distance=539388 kB, estimate=541491 kB; lsn=11/44DA4F70, redo lsn=11/252BEE60
postgres_container  | 2024-11-04 13:47:19.022 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:47:33.298 UTC [2966] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:47:33.298 UTC [2966] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:47:39.370 UTC [26] LOG:  checkpoint complete: wrote 9862 buffers (60.2%); 0 WAL file(s) added, 0 removed, 33 recycled; write=17.974 s, sync=1.850 s, total=20.349 s; sync files=231, longest=1.436 s, average=0.009 s; distance=549336 kB, estimate=549336 kB; lsn=11/64AE2BB0, redo lsn=11/46B350D0
postgres_container  | 2024-11-04 13:48:00.065 UTC [2969] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:48:00.065 UTC [2969] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:48:52.142 UTC [2971] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:48:52.142 UTC [2971] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:49:53.062 UTC [2974] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:49:53.062 UTC [2974] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:50:53.879 UTC [2977] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:50:53.879 UTC [2977] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:51:54.746 UTC [2981] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:51:54.746 UTC [2981] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:52:19.244 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 13:52:55.591 UTC [2984] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:52:55.591 UTC [2984] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:53:56.421 UTC [2987] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:53:56.421 UTC [2987] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:54:57.216 UTC [2990] ERROR:  syntax error at or near "OFFSET" at character 247
postgres_container  | 2024-11-04 13:54:57.216 UTC [2990] STATEMENT:  CREATE TABLE cdm_note_nlp
postgres_container  | 	(
postgres_container  | 	  note_nlp_id                 INTEGER                ,
postgres_container  | 	  note_id                     INTEGER                ,
postgres_container  | 	  section_concept_id          INTEGER                ,
postgres_container  | 	  snippet                     text               ,
postgres_container  | 	  OFFSET                      text               ,
postgres_container  | 	  lexical_variant             text      NOT NULL ,
postgres_container  | 	  note_nlp_concept_id         INTEGER                ,
postgres_container  | 	  note_nlp_source_concept_id  INTEGER                ,
postgres_container  | 	  nlp_system                  text               ,
postgres_container  | 	  nlp_date                    DATE        NOT NULL ,
postgres_container  | 	  nlp_datetime                TIMESTAMP             ,
postgres_container  | 	  term_exists                 text               ,
postgres_container  | 	  term_temporal               text               ,
postgres_container  | 	  term_modifiers              text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:28.093 UTC [3006] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:28.093 UTC [3006] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:29.693 UTC [3032] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:29.693 UTC [3032] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:31.363 UTC [3061] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:31.363 UTC [3061] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:33.220 UTC [3084] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:33.220 UTC [3084] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:35.166 UTC [3091] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:35.166 UTC [3091] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:38.123 UTC [3104] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:38.123 UTC [3104] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:42.691 UTC [3129] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:42.691 UTC [3129] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:53.100 UTC [3134] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:55:53.100 UTC [3134] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:55:54.663 UTC [26] LOG:  checkpoint complete: wrote 10997 buffers (67.1%); 0 WAL file(s) added, 0 removed, 31 recycled; write=212.316 s, sync=2.173 s, total=215.419 s; sync files=1165, longest=0.668 s, average=0.002 s; distance=503713 kB, estimate=544774 kB; lsn=11/84945E78, redo lsn=11/6571D5D8
postgres_container  | 2024-11-04 13:55:54.664 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:56:08.272 UTC [3137] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:08.272 UTC [3137] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:25.256 UTC [3159] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:25.256 UTC [3159] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:26.821 UTC [3188] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:26.821 UTC [3188] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:28.524 UTC [3209] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:28.524 UTC [3209] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:30.669 UTC [3233] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:30.669 UTC [3233] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:30.851 UTC [26] LOG:  checkpoint complete: wrote 9541 buffers (58.2%); 0 WAL file(s) added, 0 removed, 33 recycled; write=34.777 s, sync=0.545 s, total=36.188 s; sync files=557, longest=0.074 s, average=0.001 s; distance=541527 kB, estimate=544449 kB; lsn=11/A4DD4290, redo lsn=11/867F34A8
postgres_container  | 2024-11-04 13:56:32.601 UTC [3239] ERROR:  relation "patients_mimic" does not exist at character 562
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 2024-11-04 13:56:32.601 UTC [3239] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:35.561 UTC [3251] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:35.561 UTC [3251] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:35.849 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:56:41.008 UTC [3276] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:41.008 UTC [3276] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:49.938 UTC [3281] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:56:49.938 UTC [3281] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:56:59.805 UTC [26] LOG:  checkpoint complete: wrote 9403 buffers (57.4%); 0 WAL file(s) added, 0 removed, 33 recycled; write=20.923 s, sync=1.546 s, total=23.957 s; sync files=590, longest=1.378 s, average=0.003 s; distance=532891 kB, estimate=543293 kB; lsn=11/C556A300, redo lsn=11/A705A2F8
postgres_container  | 2024-11-04 13:57:00.004 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 13:57:00.004 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 13:57:00.004 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 13:57:04.270 UTC [3285] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:57:04.270 UTC [3285] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:57:30.955 UTC [3288] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:57:30.955 UTC [3288] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:58:23.293 UTC [3292] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:58:23.293 UTC [3292] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 13:59:24.208 UTC [3296] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 13:59:24.208 UTC [3296] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:00:25.205 UTC [3300] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:00:25.205 UTC [3300] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:01:26.220 UTC [3304] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:01:26.220 UTC [3304] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:01:29.778 UTC [26] LOG:  checkpoint complete: wrote 6508 buffers (39.7%); 0 WAL file(s) added, 0 removed, 33 recycled; write=268.926 s, sync=0.114 s, total=269.775 s; sync files=602, longest=0.017 s, average=0.001 s; distance=540826 kB, estimate=543047 kB; lsn=11/D79D7AE0, redo lsn=11/C8080EE0
postgres_container  | 2024-11-04 14:01:59.794 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:02:27.120 UTC [3308] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:02:27.120 UTC [3308] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:03:28.043 UTC [3312] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:03:28.043 UTC [3312] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:04:28.947 UTC [3316] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:04:28.947 UTC [3316] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:05:29.920 UTC [3320] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:05:29.920 UTC [3320] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:06:29.444 UTC [26] LOG:  checkpoint complete: wrote 8684 buffers (53.0%); 0 WAL file(s) added, 0 removed, 15 recycled; write=269.268 s, sync=0.089 s, total=269.650 s; sync files=409, longest=0.018 s, average=0.001 s; distance=255372 kB, estimate=514279 kB; lsn=11/D7C81898, redo lsn=11/D79E40A8
postgres_container  | 2024-11-04 14:06:30.878 UTC [3324] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:06:30.878 UTC [3324] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:06:59.474 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:07:21.613 UTC [26] LOG:  checkpoint complete: wrote 221 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=22.048 s, sync=0.044 s, total=22.140 s; sync files=116, longest=0.014 s, average=0.001 s; distance=3182 kB, estimate=463169 kB; lsn=11/D7CFFA58, redo lsn=11/D7CFF9C8
postgres_container  | 2024-11-04 14:07:31.800 UTC [3328] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:07:31.800 UTC [3328] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:08:32.645 UTC [3332] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:08:32.645 UTC [3332] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:09:33.519 UTC [3336] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:09:33.519 UTC [3336] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:10:34.337 UTC [3340] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:10:34.337 UTC [3340] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:11:35.209 UTC [3344] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:11:35.209 UTC [3344] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:11:59.698 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:12:21.137 UTC [26] LOG:  checkpoint complete: wrote 213 buffers (1.3%); 0 WAL file(s) added, 1 removed, 0 recycled; write=21.278 s, sync=0.082 s, total=21.440 s; sync files=423, longest=0.015 s, average=0.001 s; distance=3219 kB, estimate=417174 kB; lsn=11/D80249D0, redo lsn=11/D8024940
postgres_container  | 2024-11-04 14:12:36.152 UTC [3348] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:12:36.152 UTC [3348] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:13:37.266 UTC [3352] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:13:37.266 UTC [3352] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:14:38.157 UTC [3356] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:14:38.157 UTC [3356] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:15:39.024 UTC [3360] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:15:39.024 UTC [3360] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:16:39.934 UTC [3364] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:16:39.934 UTC [3364] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:16:59.224 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:17:20.626 UTC [26] LOG:  checkpoint complete: wrote 213 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.251 s, sync=0.085 s, total=21.403 s; sync files=423, longest=0.013 s, average=0.001 s; distance=3164 kB, estimate=375773 kB; lsn=11/D833BD18, redo lsn=11/D833BC88
postgres_container  | 2024-11-04 14:17:40.810 UTC [3368] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:17:40.810 UTC [3368] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:18:41.636 UTC [3372] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:18:41.636 UTC [3372] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:19:42.514 UTC [3376] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:19:42.514 UTC [3376] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:20:43.397 UTC [3380] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:20:43.397 UTC [3380] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:21:44.258 UTC [3384] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:21:44.258 UTC [3384] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:21:59.724 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:22:21.401 UTC [26] LOG:  checkpoint complete: wrote 216 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.545 s, sync=0.081 s, total=21.677 s; sync files=423, longest=0.011 s, average=0.001 s; distance=3239 kB, estimate=338520 kB; lsn=11/D8665C38, redo lsn=11/D8665BA8
postgres_container  | 2024-11-04 14:22:45.136 UTC [3388] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:22:45.136 UTC [3388] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:23:46.019 UTC [3392] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:23:46.019 UTC [3392] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:24:46.926 UTC [3396] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:24:46.926 UTC [3396] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:25:47.888 UTC [3400] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:25:47.888 UTC [3400] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:26:48.813 UTC [3404] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:26:48.813 UTC [3404] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:26:59.500 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:27:21.815 UTC [26] LOG:  checkpoint complete: wrote 222 buffers (1.4%); 0 WAL file(s) added, 0 removed, 0 recycled; write=22.154 s, sync=0.084 s, total=22.315 s; sync files=426, longest=0.015 s, average=0.001 s; distance=3210 kB, estimate=304989 kB; lsn=11/D8988808, redo lsn=11/D8988778
postgres_container  | 2024-11-04 14:27:49.834 UTC [3408] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:27:49.834 UTC [3408] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:28:50.794 UTC [3412] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:28:50.794 UTC [3412] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:29:51.704 UTC [3416] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:29:51.704 UTC [3416] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:30:52.662 UTC [3420] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:30:52.662 UTC [3420] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:31:53.556 UTC [3424] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:31:53.556 UTC [3424] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:31:59.908 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:32:21.183 UTC [26] LOG:  checkpoint complete: wrote 212 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.153 s, sync=0.072 s, total=21.275 s; sync files=422, longest=0.013 s, average=0.001 s; distance=3219 kB, estimate=274812 kB; lsn=11/D8CAD7C8, redo lsn=11/D8CAD738
postgres_container  | 2024-11-04 14:32:54.436 UTC [3428] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:32:54.436 UTC [3428] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:33:55.295 UTC [3433] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:33:55.295 UTC [3433] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:34:56.190 UTC [3437] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:34:56.190 UTC [3437] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:35:57.051 UTC [3441] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:35:57.051 UTC [3441] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:36:57.919 UTC [3445] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:36:57.919 UTC [3445] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:36:59.262 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:37:20.251 UTC [26] LOG:  checkpoint complete: wrote 209 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=20.848 s, sync=0.080 s, total=20.989 s; sync files=422, longest=0.010 s, average=0.001 s; distance=3127 kB, estimate=247644 kB; lsn=11/D8FBB798, redo lsn=11/D8FBB708
postgres_container  | 2024-11-04 14:37:59.699 UTC [3449] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:37:59.699 UTC [3449] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:39:00.717 UTC [3453] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:39:00.717 UTC [3453] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:40:01.729 UTC [3457] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:40:01.729 UTC [3457] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:41:02.675 UTC [3461] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:41:02.675 UTC [3461] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:41:59.300 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:42:03.669 UTC [3465] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:42:03.669 UTC [3465] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:42:20.815 UTC [26] LOG:  checkpoint complete: wrote 213 buffers (1.3%); 0 WAL file(s) added, 1 removed, 0 recycled; write=21.248 s, sync=0.196 s, total=21.515 s; sync files=423, longest=0.130 s, average=0.001 s; distance=2758 kB, estimate=223155 kB; lsn=11/D9339080, redo lsn=11/D926CF90
postgres_container  | 2024-11-04 14:43:04.530 UTC [3469] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:43:04.530 UTC [3469] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:44:05.412 UTC [3473] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:44:05.412 UTC [3473] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:45:06.265 UTC [3477] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:45:06.265 UTC [3477] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:46:07.137 UTC [3481] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:46:07.137 UTC [3481] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:46:59.912 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:47:07.992 UTC [3485] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:47:07.992 UTC [3485] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:47:21.619 UTC [26] LOG:  checkpoint complete: wrote 216 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.554 s, sync=0.100 s, total=21.708 s; sync files=423, longest=0.032 s, average=0.001 s; distance=3259 kB, estimate=201165 kB; lsn=11/D9663C38, redo lsn=11/D959BC58
postgres_container  | 2024-11-04 14:48:08.892 UTC [3489] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:48:08.892 UTC [3489] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:49:09.751 UTC [3493] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:49:09.751 UTC [3493] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:50:10.589 UTC [3497] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:50:10.589 UTC [3497] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:51:11.442 UTC [3501] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:51:11.442 UTC [3501] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:51:59.697 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:52:12.322 UTC [3505] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:52:12.322 UTC [3505] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:52:21.523 UTC [26] LOG:  checkpoint complete: wrote 217 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.648 s, sync=0.079 s, total=21.827 s; sync files=423, longest=0.014 s, average=0.001 s; distance=3201 kB, estimate=181369 kB; lsn=11/D99814F0, redo lsn=11/D98BC218
postgres_container  | 2024-11-04 14:53:13.256 UTC [3509] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:53:13.256 UTC [3509] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:54:14.137 UTC [3513] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:54:14.137 UTC [3513] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:55:15.062 UTC [3517] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:55:15.062 UTC [3517] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:56:16.012 UTC [3521] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:56:16.012 UTC [3521] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:56:59.576 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 14:57:16.993 UTC [3525] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:57:16.993 UTC [3525] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:57:20.850 UTC [26] LOG:  checkpoint complete: wrote 212 buffers (1.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=21.148 s, sync=0.080 s, total=21.275 s; sync files=422, longest=0.012 s, average=0.001 s; distance=3236 kB, estimate=163556 kB; lsn=11/D9CA5DC0, redo lsn=11/D9BE53B8
postgres_container  | 2024-11-04 14:58:17.875 UTC [3529] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:58:17.875 UTC [3529] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 14:59:18.769 UTC [3533] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 14:59:18.769 UTC [3533] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:00:19.679 UTC [3537] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:00:19.679 UTC [3537] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:01:20.526 UTC [3541] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:01:20.526 UTC [3541] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:01:59.935 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:02:21.416 UTC [3545] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:02:21.416 UTC [3545] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:02:24.028 UTC [26] LOG:  checkpoint complete: wrote 240 buffers (1.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=23.955 s, sync=0.088 s, total=24.094 s; sync files=425, longest=0.012 s, average=0.001 s; distance=3233 kB, estimate=147523 kB; lsn=11/D9FD83C0, redo lsn=11/D9F0DA30
postgres_container  | 2024-11-04 15:03:22.293 UTC [3549] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:03:22.293 UTC [3549] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:04:23.211 UTC [3553] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:04:23.211 UTC [3553] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:05:24.054 UTC [3557] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:05:24.054 UTC [3557] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:06:24.913 UTC [3561] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:06:24.913 UTC [3561] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:06:59.038 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:07:20.863 UTC [26] LOG:  checkpoint complete: wrote 217 buffers (1.3%); 0 WAL file(s) added, 1 removed, 0 recycled; write=21.658 s, sync=0.079 s, total=21.826 s; sync files=347, longest=0.018 s, average=0.001 s; distance=3249 kB, estimate=133096 kB; lsn=11/DA23A130, redo lsn=11/DA23A0A0
postgres_container  | 2024-11-04 15:07:25.777 UTC [3565] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:07:25.777 UTC [3565] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:07:40.120 UTC [3582] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:40.120 UTC [3582] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:41.807 UTC [3613] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:41.807 UTC [3613] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:43.501 UTC [3639] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:43.501 UTC [3639] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:45.328 UTC [3655] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:45.328 UTC [3655] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:47.322 UTC [3671] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:47.322 UTC [3671] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:50.250 UTC [3685] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:50.250 UTC [3685] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:07:54.942 UTC [3711] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:07:54.942 UTC [3711] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:08:03.728 UTC [3718] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:08:03.728 UTC [3718] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:08:08.236 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 15:08:20.319 UTC [3722] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:08:20.319 UTC [3722] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:08:46.854 UTC [3726] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:08:46.854 UTC [3726] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:09:40.080 UTC [3731] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:09:40.080 UTC [3731] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:10:40.950 UTC [3736] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:10:40.950 UTC [3736] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:11:41.860 UTC [3741] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:11:41.860 UTC [3741] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:12:38.676 UTC [26] LOG:  checkpoint complete: wrote 10334 buffers (63.1%); 0 WAL file(s) added, 0 removed, 33 recycled; write=269.791 s, sync=0.218 s, total=270.440 s; sync files=1358, longest=0.026 s, average=0.001 s; distance=542503 kB, estimate=542503 kB; lsn=12/1394D800, redo lsn=11/FB403EB8
postgres_container  | 2024-11-04 15:12:42.766 UTC [3746] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:12:42.766 UTC [3746] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:13:08.688 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:13:43.638 UTC [3751] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:13:43.638 UTC [3751] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:14:44.770 UTC [3756] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:14:44.770 UTC [3756] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:15:45.701 UTC [3761] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:15:45.701 UTC [3761] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:16:46.589 UTC [3766] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:16:46.589 UTC [3766] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:17:38.461 UTC [26] LOG:  checkpoint complete: wrote 8055 buffers (49.2%); 0 WAL file(s) added, 0 removed, 24 recycled; write=269.367 s, sync=0.090 s, total=269.773 s; sync files=454, longest=0.011 s, average=0.001 s; distance=399185 kB, estimate=528171 kB; lsn=12/13C93878, redo lsn=12/139D8540
postgres_container  | 2024-11-04 15:17:47.450 UTC [3771] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:17:47.450 UTC [3771] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:18:08.486 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:18:32.430 UTC [26] LOG:  checkpoint complete: wrote 239 buffers (1.5%); 0 WAL file(s) added, 0 removed, 0 recycled; write=23.855 s, sync=0.039 s, total=23.944 s; sync files=121, longest=0.011 s, average=0.001 s; distance=3309 kB, estimate=475685 kB; lsn=12/13D13C58, redo lsn=12/13D13BC8
postgres_container  | 2024-11-04 15:18:48.387 UTC [3783] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:18:48.387 UTC [3783] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:19:49.257 UTC [3797] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:19:49.257 UTC [3797] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:20:50.133 UTC [3802] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:20:50.133 UTC [3802] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:21:51.029 UTC [3807] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:21:51.029 UTC [3807] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:22:51.970 UTC [3812] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:22:51.970 UTC [3812] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:23:08.528 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:23:32.659 UTC [26] LOG:  checkpoint complete: wrote 240 buffers (1.5%); 0 WAL file(s) added, 1 removed, 0 recycled; write=23.956 s, sync=0.084 s, total=24.132 s; sync files=429, longest=0.010 s, average=0.001 s; distance=3421 kB, estimate=428459 kB; lsn=12/1406B180, redo lsn=12/1406B0F0
postgres_container  | 2024-11-04 15:23:52.852 UTC [3817] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:23:52.852 UTC [3817] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:24:53.737 UTC [3822] ERROR:  relation "admissions" already exists
postgres_container  | 2024-11-04 15:24:53.737 UTC [3822] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 15:24:59.811 UTC [3846] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:24:59.811 UTC [3846] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:01.769 UTC [3883] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:01.769 UTC [3883] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:03.375 UTC [3900] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:03.375 UTC [3900] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:05.095 UTC [3926] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:05.095 UTC [3926] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:07.214 UTC [3934] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:07.214 UTC [3934] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
postgres_container  | 2024-11-04 15:25:10.124 UTC [3948] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:10.124 UTC [3948] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:14.996 UTC [3974] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:14.996 UTC [3974] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:24.620 UTC [3981] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:24.620 UTC [3981] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:25:27.657 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 15:25:40.382 UTC [3986] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:25:40.382 UTC [3986] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:26:07.336 UTC [3992] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:26:07.336 UTC [3992] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:26:59.622 UTC [3998] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:26:59.622 UTC [3998] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:28:00.675 UTC [4004] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:28:00.675 UTC [4004] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:29:01.621 UTC [4010] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:29:01.621 UTC [4010] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:29:57.633 UTC [26] LOG:  checkpoint complete: wrote 9579 buffers (58.5%); 0 WAL file(s) added, 0 removed, 33 recycled; write=269.322 s, sync=0.187 s, total=269.977 s; sync files=1436, longest=0.015 s, average=0.001 s; distance=544359 kB, estimate=544359 kB; lsn=12/4DC32350, redo lsn=12/35405058
postgres_container  | 2024-11-04 15:30:02.552 UTC [4016] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:30:02.552 UTC [4016] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:30:27.644 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:31:03.577 UTC [4022] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:31:03.577 UTC [4022] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:32:04.564 UTC [4028] ERROR:  relation "vocabulary.concept_recommended" does not exist at character 66
postgres_container  | 2024-11-04 15:32:04.564 UTC [4028] STATEMENT:  CREATE VIEW stage_omopcdm.concept_recommended AS 
postgres_container  | 	SELECT * FROM  vocabulary.concept_recommended;
postgres_container  | 2024-11-04 15:32:27.316 UTC [4053] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:27.316 UTC [4053] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:29.063 UTC [4089] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:29.063 UTC [4089] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:30.876 UTC [4109] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:30.876 UTC [4109] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:33.396 UTC [4138] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:33.396 UTC [4138] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:35.671 UTC [4145] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:35.671 UTC [4145] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:38.767 UTC [4166] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:38.767 UTC [4166] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:43.744 UTC [4187] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:43.744 UTC [4187] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:52.126 UTC [4195] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:32:52.126 UTC [4195] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:32:55.489 UTC [26] LOG:  checkpoint complete: wrote 6574 buffers (40.1%); 0 WAL file(s) added, 0 removed, 24 recycled; write=144.251 s, sync=2.788 s, total=147.845 s; sync files=1118, longest=1.164 s, average=0.003 s; distance=402316 kB, estimate=530155 kB; lsn=12/6D73A788, redo lsn=12/4DCE82C0
postgres_container  | 2024-11-04 15:32:55.490 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 15:33:09.247 UTC [4202] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:33:09.247 UTC [4202] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:33:36.025 UTC [4208] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:33:36.025 UTC [4208] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:34:28.526 UTC [4215] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:34:28.526 UTC [4215] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:35:29.581 UTC [4222] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:35:29.581 UTC [4222] STATEMENT:  CREATE TABLE cdm_cohort_definition (
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:36:30.531 UTC [4229] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:36:30.531 UTC [4229] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:37:25.497 UTC [26] LOG:  checkpoint complete: wrote 9875 buffers (60.3%); 0 WAL file(s) added, 0 removed, 33 recycled; write=269.475 s, sync=0.098 s, total=270.008 s; sync files=561, longest=0.012 s, average=0.001 s; distance=542378 kB, estimate=542378 kB; lsn=12/87988B80, redo lsn=12/6EE92E78
postgres_container  | 2024-11-04 15:37:31.674 UTC [4236] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:37:31.674 UTC [4236] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:37:55.524 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:38:32.708 UTC [4243] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:38:32.708 UTC [4243] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:39:33.662 UTC [4250] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:39:33.662 UTC [4250] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:40:34.626 UTC [4257] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:40:34.626 UTC [4257] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:41:35.630 UTC [4264] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:41:35.630 UTC [4264] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:42:25.451 UTC [26] LOG:  checkpoint complete: wrote 8218 buffers (50.2%); 0 WAL file(s) added, 0 removed, 25 recycled; write=269.471 s, sync=0.094 s, total=269.928 s; sync files=509, longest=0.018 s, average=0.001 s; distance=405195 kB, estimate=528660 kB; lsn=12/87E97208, redo lsn=12/87A45C10
postgres_container  | 2024-11-04 15:42:36.660 UTC [4271] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:42:36.660 UTC [4271] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:42:55.481 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:43:27.643 UTC [26] LOG:  checkpoint complete: wrote 321 buffers (2.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=32.071 s, sync=0.054 s, total=32.163 s; sync files=127, longest=0.024 s, average=0.001 s; distance=5179 kB, estimate=476312 kB; lsn=12/87FA8148, redo lsn=12/87F54920
postgres_container  | 2024-11-04 15:43:37.659 UTC [4278] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:43:37.659 UTC [4278] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:44:38.650 UTC [4285] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:44:38.650 UTC [4285] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:45:39.654 UTC [4292] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:45:39.654 UTC [4292] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:46:40.654 UTC [4299] ERROR:  relation "cdm_cohort_definition" already exists
postgres_container  | 2024-11-04 15:46:40.654 UTC [4299] STATEMENT:  CREATE TABLE cdm_cohort_definition (
postgres_container  | 	  cohort_definition_id            INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_name          text      NOT NULL,
postgres_container  | 	  cohort_definition_description   text              ,
postgres_container  | 	  definition_type_concept_id      INTEGER       NOT NULL,
postgres_container  | 	  cohort_definition_syntax        text              ,
postgres_container  | 	  subject_concept_id              INTEGER       NOT NULL,
postgres_container  | 	  cohort_initiation_date          DATE
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:36.554 UTC [4329] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:36.554 UTC [4329] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:38.322 UTC [4362] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:38.322 UTC [4362] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:40.448 UTC [4383] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:40.448 UTC [4383] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:43.183 UTC [4413] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:43.183 UTC [4413] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:45.419 UTC [4421] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:45.419 UTC [4421] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:48.371 UTC [4443] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:48.371 UTC [4443] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:53.345 UTC [4465] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:47:53.345 UTC [4465] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:47:55.575 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:48:02.463 UTC [4475] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:48:02.463 UTC [4475] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:48:20.050 UTC [4482] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:48:20.050 UTC [4482] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:48:22.164 UTC [26] LOG:  checkpoint complete: wrote 10139 buffers (61.9%); 0 WAL file(s) added, 0 removed, 22 recycled; write=22.082 s, sync=2.380 s, total=26.589 s; sync files=1426, longest=0.991 s, average=0.002 s; distance=359704 kB, estimate=464651 kB; lsn=12/BD582BB0, redo lsn=12/9DE9A920
postgres_container  | 2024-11-04 15:48:22.164 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 15:48:22.164 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 15:48:22.164 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 15:48:46.812 UTC [4489] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:48:46.812 UTC [4489] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:49:40.132 UTC [4497] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:49:40.132 UTC [4497] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:50:41.140 UTC [4505] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:50:41.140 UTC [4505] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:51:42.140 UTC [4513] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:51:42.140 UTC [4513] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:52:43.169 UTC [4521] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:52:43.169 UTC [4521] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:52:52.513 UTC [26] LOG:  checkpoint complete: wrote 5236 buffers (32.0%); 0 WAL file(s) added, 0 removed, 35 recycled; write=269.773 s, sync=0.133 s, total=270.350 s; sync files=749, longest=0.016 s, average=0.001 s; distance=572571 kB, estimate=572571 kB; lsn=12/C21D3C10, redo lsn=12/C0DC18F8
postgres_container  | 2024-11-04 15:53:22.532 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:53:44.151 UTC [4529] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:53:44.151 UTC [4529] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:54:45.125 UTC [4537] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:54:45.125 UTC [4537] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:55:46.113 UTC [4545] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:55:46.113 UTC [4545] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:56:47.102 UTC [4553] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:56:47.102 UTC [4553] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:57:48.088 UTC [4561] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:57:48.088 UTC [4561] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:57:52.187 UTC [26] LOG:  checkpoint complete: wrote 4000 buffers (24.4%); 0 WAL file(s) added, 0 removed, 2 recycled; write=269.442 s, sync=0.105 s, total=269.656 s; sync files=592, longest=0.011 s, average=0.001 s; distance=20621 kB, estimate=517376 kB; lsn=12/C27895A8, redo lsn=12/C21E4F18
postgres_container  | 2024-11-04 15:58:22.217 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 15:58:49.041 UTC [4569] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:58:49.041 UTC [4569] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 15:58:53.371 UTC [26] LOG:  checkpoint complete: wrote 311 buffers (1.9%); 0 WAL file(s) added, 0 removed, 0 recycled; write=31.069 s, sync=0.040 s, total=31.154 s; sync files=154, longest=0.011 s, average=0.001 s; distance=5831 kB, estimate=466222 kB; lsn=12/C2925850, redo lsn=12/C2796BA0
postgres_container  | 2024-11-04 15:59:50.037 UTC [4577] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 15:59:50.037 UTC [4577] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:00:51.454 UTC [4585] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:00:51.454 UTC [4585] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:01:52.578 UTC [4593] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:01:52.578 UTC [4593] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:02:53.759 UTC [4601] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:02:53.759 UTC [4601] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:03:22.386 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:03:53.178 UTC [26] LOG:  checkpoint complete: wrote 307 buffers (1.9%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.670 s, sync=0.075 s, total=30.793 s; sync files=468, longest=0.011 s, average=0.001 s; distance=5879 kB, estimate=420188 kB; lsn=12/C2D54910, redo lsn=12/C2D54880
postgres_container  | 2024-11-04 16:03:54.857 UTC [4609] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:03:54.857 UTC [4609] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:04:55.949 UTC [4617] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:04:55.949 UTC [4617] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:05:57.121 UTC [4625] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:05:57.121 UTC [4625] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:06:58.270 UTC [4634] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:06:58.270 UTC [4634] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:07:59.319 UTC [4642] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:07:59.319 UTC [4642] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:08:22.208 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:08:53.040 UTC [26] LOG:  checkpoint complete: wrote 307 buffers (1.9%); 0 WAL file(s) added, 1 removed, 0 recycled; write=30.667 s, sync=0.097 s, total=30.832 s; sync files=572, longest=0.009 s, average=0.001 s; distance=5765 kB, estimate=378745 kB; lsn=12/C32F5D18, redo lsn=12/C32F5C88
postgres_container  | 2024-11-04 16:09:00.434 UTC [4650] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:09:00.434 UTC [4650] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:10:01.546 UTC [4658] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:10:01.546 UTC [4658] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:11:02.625 UTC [4666] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:11:02.625 UTC [4666] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:12:03.733 UTC [4674] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:12:03.733 UTC [4674] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:13:04.797 UTC [4682] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:13:04.797 UTC [4682] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:13:22.133 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:13:52.360 UTC [26] LOG:  checkpoint complete: wrote 301 buffers (1.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.075 s, sync=0.099 s, total=30.228 s; sync files=570, longest=0.012 s, average=0.001 s; distance=5945 kB, estimate=341465 kB; lsn=12/C38C43F0, redo lsn=12/C38C4360
postgres_container  | 2024-11-04 16:14:05.881 UTC [4690] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:14:05.881 UTC [4690] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:15:06.946 UTC [4698] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:15:06.946 UTC [4698] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:16:12.481 UTC [4706] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:16:12.481 UTC [4706] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:17:13.435 UTC [4714] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:17:13.435 UTC [4714] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:18:14.387 UTC [4722] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:18:14.387 UTC [4722] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:18:22.460 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:18:53.395 UTC [26] LOG:  checkpoint complete: wrote 308 buffers (1.9%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.769 s, sync=0.115 s, total=30.935 s; sync files=574, longest=0.015 s, average=0.001 s; distance=5947 kB, estimate=307913 kB; lsn=12/C3E933C8, redo lsn=12/C3E93338
postgres_container  | 2024-11-04 16:19:15.389 UTC [4730] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:19:15.389 UTC [4730] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:20:16.438 UTC [4738] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:20:16.438 UTC [4738] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:21:20.319 UTC [4746] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:21:20.319 UTC [4746] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:22:24.044 UTC [4754] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:22:24.044 UTC [4754] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:23:22.493 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:23:25.132 UTC [4762] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:23:25.132 UTC [4762] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:23:52.751 UTC [26] LOG:  checkpoint complete: wrote 301 buffers (1.8%); 0 WAL file(s) added, 1 removed, 0 recycled; write=30.068 s, sync=0.101 s, total=30.259 s; sync files=569, longest=0.027 s, average=0.001 s; distance=5001 kB, estimate=277622 kB; lsn=12/C4502670, redo lsn=12/C4375950
postgres_container  | 2024-11-04 16:24:26.115 UTC [4770] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:24:26.115 UTC [4770] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:25:27.477 UTC [4778] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:25:27.477 UTC [4778] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:26:28.471 UTC [4786] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:26:28.471 UTC [4786] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:27:30.238 UTC [4794] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:27:30.238 UTC [4794] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:28:22.849 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:28:31.412 UTC [4802] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:28:31.412 UTC [4802] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:28:53.188 UTC [26] LOG:  checkpoint complete: wrote 303 buffers (1.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.169 s, sync=0.094 s, total=30.339 s; sync files=571, longest=0.011 s, average=0.001 s; distance=5893 kB, estimate=250449 kB; lsn=12/C4AB37E8, redo lsn=12/C4936D88
postgres_container  | 2024-11-04 16:29:32.423 UTC [4810] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:29:32.423 UTC [4810] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:30:33.508 UTC [4818] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:30:33.508 UTC [4818] STATEMENT:  CREATE TABLE src_patients AS
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:31:34.540 UTC [4826] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:31:34.540 UTC [4826] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:32:35.504 UTC [4834] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:32:35.504 UTC [4834] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:33:22.272 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:33:36.582 UTC [4842] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:33:36.582 UTC [4842] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:33:52.705 UTC [26] LOG:  checkpoint complete: wrote 303 buffers (1.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.273 s, sync=0.096 s, total=30.433 s; sync files=571, longest=0.017 s, average=0.001 s; distance=5811 kB, estimate=225985 kB; lsn=12/C506B928, redo lsn=12/C4EE3D68
postgres_container  | 2024-11-04 16:34:37.631 UTC [4850] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:34:37.631 UTC [4850] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:35:38.634 UTC [4858] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:35:38.634 UTC [4858] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:36:39.651 UTC [4866] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:36:39.651 UTC [4866] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:37:40.753 UTC [4874] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:37:40.753 UTC [4874] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:38:22.804 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:38:41.735 UTC [4882] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:38:41.735 UTC [4882] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:38:53.184 UTC [26] LOG:  checkpoint complete: wrote 302 buffers (1.8%); 0 WAL file(s) added, 1 removed, 0 recycled; write=30.171 s, sync=0.106 s, total=30.381 s; sync files=571, longest=0.018 s, average=0.001 s; distance=5924 kB, estimate=203979 kB; lsn=12/C562BF58, redo lsn=12/C54ACDD8
postgres_container  | 2024-11-04 16:39:42.710 UTC [4890] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:39:42.710 UTC [4890] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:40:43.748 UTC [4898] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:40:43.748 UTC [4898] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:41:44.801 UTC [4906] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:41:44.801 UTC [4906] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:42:45.846 UTC [4914] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:42:45.846 UTC [4914] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:43:22.232 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:43:46.876 UTC [4922] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:43:46.876 UTC [4922] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:43:52.667 UTC [26] LOG:  checkpoint complete: wrote 303 buffers (1.8%); 0 WAL file(s) added, 0 removed, 0 recycled; write=30.276 s, sync=0.091 s, total=30.435 s; sync files=572, longest=0.012 s, average=0.001 s; distance=5837 kB, estimate=184165 kB; lsn=12/C5BE8778, redo lsn=12/C5A60430
postgres_container  | 2024-11-04 16:44:47.890 UTC [4930] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:44:47.890 UTC [4930] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:45:48.912 UTC [4938] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:45:48.912 UTC [4938] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
postgres_container  | 	;
postgres_container  | 2024-11-04 16:46:51.545 UTC [4946] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:46:51.545 UTC [4946] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:33.060 UTC [4977] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:33.060 UTC [4977] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:34.841 UTC [5012] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:34.841 UTC [5012] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:37.335 UTC [5031] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:37.335 UTC [5031] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:39.997 UTC [5062] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:39.997 UTC [5062] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:42.203 UTC [5069] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:42.203 UTC [5069] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:45.347 UTC [5092] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:45.347 UTC [5092] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:50.353 UTC [5114] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:50.353 UTC [5114] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:47:58.409 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 16:47:59.000 UTC [5124] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:47:59.000 UTC [5124] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:48:14.581 UTC [5131] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:48:14.581 UTC [5131] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:48:41.273 UTC [5138] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:48:41.273 UTC [5138] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:49:33.724 UTC [5146] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:49:33.724 UTC [5146] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:35.077 UTC [5154] ERROR:  relation "patients_mimic" does not exist at character 562
postgres_container  | 2024-11-04 16:50:35.077 UTC [5154] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM patients_mimic
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:48.249 UTC [5183] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:50:48.249 UTC [5183] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:50:48.249 UTC [5183] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:50.048 UTC [5216] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:50:50.048 UTC [5216] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:50:50.048 UTC [5216] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:52.133 UTC [5237] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:50:52.133 UTC [5237] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:50:52.133 UTC [5237] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:54.651 UTC [5266] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:50:54.651 UTC [5266] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:50:54.651 UTC [5266] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:56.337 UTC [26] LOG:  checkpoint complete: wrote 9756 buffers (59.5%); 0 WAL file(s) added, 3 removed, 30 recycled; write=172.555 s, sync=4.215 s, total=177.929 s; sync files=2090, longest=0.310 s, average=0.003 s; distance=533800 kB, estimate=533800 kB; lsn=13/74785C8, redo lsn=12/E63AA530
postgres_container  | 2024-11-04 16:50:56.338 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 16:50:56.878 UTC [5275] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:50:56.878 UTC [5275] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:50:56.878 UTC [5275] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:50:59.384 UTC [5284] LOG:  skipping vacuum of "d_icd_diagnoses" --- lock not available
postgres_container  | 2024-11-04 16:51:00.183 UTC [5292] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:51:00.183 UTC [5292] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:51:00.183 UTC [5292] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:51:05.303 UTC [5320] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:51:05.303 UTC [5320] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:51:05.303 UTC [5320] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:51:14.823 UTC [5329] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:51:14.823 UTC [5329] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:51:14.823 UTC [5329] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:51:23.824 UTC [26] LOG:  checkpoint complete: wrote 11331 buffers (69.2%); 0 WAL file(s) added, 1 removed, 32 recycled; write=24.341 s, sync=1.818 s, total=27.487 s; sync files=888, longest=1.567 s, average=0.003 s; distance=548579 kB, estimate=548579 kB; lsn=13/26382630, redo lsn=13/7B63150
postgres_container  | 2024-11-04 16:51:23.877 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 16:51:23.877 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 16:51:23.877 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 16:51:30.603 UTC [5336] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:51:30.603 UTC [5336] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:51:30.603 UTC [5336] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:51:57.293 UTC [5343] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:51:57.293 UTC [5343] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:51:57.293 UTC [5343] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:52:49.597 UTC [5351] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:52:49.597 UTC [5351] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:52:49.597 UTC [5351] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:53:50.678 UTC [5359] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:53:50.678 UTC [5359] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:53:50.678 UTC [5359] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:54:14.791 UTC [26] LOG:  checkpoint complete: wrote 1082 buffers (6.6%); 0 WAL file(s) added, 0 removed, 33 recycled; write=170.366 s, sync=0.096 s, total=170.915 s; sync files=532, longest=0.012 s, average=0.001 s; distance=533107 kB, estimate=547031 kB; lsn=13/39B3D318, redo lsn=13/28400098
postgres_container  | 2024-11-04 16:54:51.706 UTC [5367] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:54:51.706 UTC [5367] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:54:51.706 UTC [5367] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:55:52.753 UTC [5375] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:55:52.753 UTC [5375] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:55:52.753 UTC [5375] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:56:23.891 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 16:56:53.798 UTC [5383] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:56:53.798 UTC [5383] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:56:53.798 UTC [5383] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:57:54.870 UTC [5391] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:57:54.870 UTC [5391] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:57:54.870 UTC [5391] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:58:55.899 UTC [5399] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:58:55.899 UTC [5399] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:58:55.899 UTC [5399] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 16:59:56.932 UTC [5407] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 16:59:56.932 UTC [5407] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 16:59:56.932 UTC [5407] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:00:53.425 UTC [26] LOG:  checkpoint complete: wrote 7756 buffers (47.3%); 0 WAL file(s) added, 0 removed, 17 recycled; write=269.168 s, sync=0.105 s, total=269.534 s; sync files=708, longest=0.010 s, average=0.001 s; distance=288190 kB, estimate=521147 kB; lsn=13/3A2DEFB8, redo lsn=13/39D6FA30
postgres_container  | 2024-11-04 17:00:58.024 UTC [5415] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:00:58.024 UTC [5415] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:00:58.024 UTC [5415] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:01:23.452 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:01:57.652 UTC [26] LOG:  checkpoint complete: wrote 341 buffers (2.1%); 0 WAL file(s) added, 1 removed, 0 recycled; write=34.073 s, sync=0.044 s, total=34.200 s; sync files=157, longest=0.012 s, average=0.001 s; distance=6696 kB, estimate=469702 kB; lsn=13/3A3F9D98, redo lsn=13/3A3F9D08
postgres_container  | 2024-11-04 17:01:59.106 UTC [5424] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:01:59.106 UTC [5424] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:01:59.106 UTC [5424] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:00.141 UTC [5432] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:00.141 UTC [5432] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:00.141 UTC [5432] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:45.985 UTC [5461] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:45.985 UTC [5461] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:45.985 UTC [5461] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:47.857 UTC [5494] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:47.857 UTC [5494] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:47.857 UTC [5494] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:50.490 UTC [5515] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:50.490 UTC [5515] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:50.490 UTC [5515] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:53.187 UTC [5546] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:53.187 UTC [5546] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:53.187 UTC [5546] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:55.462 UTC [5554] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:55.462 UTC [5554] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:55.462 UTC [5554] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:03:58.738 UTC [5577] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:03:58.738 UTC [5577] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:03:58.738 UTC [5577] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:04:03.967 UTC [5599] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:04:03.967 UTC [5599] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:04:03.967 UTC [5599] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:04:13.755 UTC [5608] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:04:13.755 UTC [5608] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:04:13.755 UTC [5608] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:04:16.043 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:04:28.792 UTC [5615] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:04:28.792 UTC [5615] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:04:28.792 UTC [5615] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:04:55.500 UTC [5622] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:04:55.500 UTC [5622] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:04:55.500 UTC [5622] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:05:47.739 UTC [5630] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:05:47.739 UTC [5630] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:05:47.739 UTC [5630] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:06:48.770 UTC [5638] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:06:48.770 UTC [5638] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:06:48.770 UTC [5638] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:07:49.811 UTC [5646] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:07:49.811 UTC [5646] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:07:49.811 UTC [5646] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:08:38.529 UTC [26] LOG:  checkpoint complete: wrote 9186 buffers (56.1%); 0 WAL file(s) added, 0 removed, 33 recycled; write=261.736 s, sync=0.283 s, total=262.486 s; sync files=1873, longest=0.010 s, average=0.001 s; distance=538968 kB, estimate=538968 kB; lsn=13/7455DFF0, redo lsn=13/5B24FDB0
postgres_container  | 2024-11-04 17:08:50.804 UTC [5654] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:08:50.804 UTC [5654] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:08:50.804 UTC [5654] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
postgres_container  | 2024-11-04 17:09:16.564 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:09:51.848 UTC [5662] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:09:51.848 UTC [5662] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:09:51.848 UTC [5662] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:10:52.939 UTC [5670] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:10:52.939 UTC [5670] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:10:52.939 UTC [5670] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:11:54.148 UTC [5678] ERROR:  function uuid_nil() does not exist at character 400
postgres_container  | 2024-11-04 17:11:54.148 UTC [5678] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:11:54.148 UTC [5678] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_hash(uuid_nil()) AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:26.418 UTC [5708] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:26.418 UTC [5708] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:26.418 UTC [5708] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:28.230 UTC [5743] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:28.230 UTC [5743] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:28.230 UTC [5743] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:30.150 UTC [5762] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:30.150 UTC [5762] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:30.150 UTC [5762] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:32.418 UTC [5792] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:32.418 UTC [5792] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:32.418 UTC [5792] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:34.788 UTC [5800] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:34.788 UTC [5800] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:34.788 UTC [5800] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:37.929 UTC [5823] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:37.929 UTC [5823] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:37.929 UTC [5823] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:42.921 UTC [5845] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:42.921 UTC [5845] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:42.921 UTC [5845] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:12:52.320 UTC [26] LOG:  checkpoint complete: wrote 5500 buffers (33.6%); 0 WAL file(s) added, 0 removed, 25 recycled; write=212.303 s, sync=2.602 s, total=215.756 s; sync files=1404, longest=1.289 s, average=0.002 s; distance=413857 kB, estimate=526457 kB; lsn=13/93F98CB8, redo lsn=13/746784B0
postgres_container  | 2024-11-04 17:12:52.421 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:12:52.532 UTC [5854] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:12:52.532 UTC [5854] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:12:52.532 UTC [5854] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:13:07.326 UTC [5862] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:13:07.326 UTC [5862] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:13:07.326 UTC [5862] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:13:34.229 UTC [5869] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:13:34.229 UTC [5869] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:13:34.229 UTC [5869] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:14:26.474 UTC [5877] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:14:26.474 UTC [5877] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:14:26.474 UTC [5877] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:15:27.453 UTC [5885] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:15:27.453 UTC [5885] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:15:27.453 UTC [5885] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:16:28.488 UTC [5893] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:16:28.488 UTC [5893] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:16:28.488 UTC [5893] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:17:07.834 UTC [26] LOG:  checkpoint complete: wrote 9253 buffers (56.5%); 0 WAL file(s) added, 0 removed, 33 recycled; write=254.815 s, sync=0.137 s, total=255.414 s; sync files=812, longest=0.011 s, average=0.001 s; distance=535442 kB, estimate=535442 kB; lsn=13/AE94E0F0, redo lsn=13/9515CDD8
postgres_container  | 2024-11-04 17:17:29.583 UTC [5901] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:17:29.583 UTC [5901] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:17:29.583 UTC [5901] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:17:52.872 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:18:30.580 UTC [5909] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:18:30.580 UTC [5909] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:18:30.580 UTC [5909] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:19:31.586 UTC [5917] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:19:31.586 UTC [5917] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:19:31.586 UTC [5917] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:20:32.645 UTC [5925] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:20:32.645 UTC [5925] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:20:32.645 UTC [5925] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
etl_container       |         -- json_object(
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:21:33.701 UTC [5933] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:21:33.701 UTC [5933] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:21:33.701 UTC [5933] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:22:22.436 UTC [26] LOG:  checkpoint complete: wrote 10166 buffers (62.0%); 0 WAL file(s) added, 0 removed, 25 recycled; write=269.111 s, sync=0.132 s, total=269.564 s; sync files=676, longest=0.010 s, average=0.001 s; distance=418789 kB, estimate=523777 kB; lsn=13/AF002770, redo lsn=13/AEA564A8
postgres_container  | 2024-11-04 17:22:34.709 UTC [5941] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:22:34.709 UTC [5941] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:22:34.709 UTC [5941] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:22:52.466 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:23:26.448 UTC [26] LOG:  checkpoint complete: wrote 339 buffers (2.1%); 0 WAL file(s) added, 1 removed, 0 recycled; write=33.877 s, sync=0.037 s, total=33.982 s; sync files=156, longest=0.011 s, average=0.001 s; distance=6865 kB, estimate=472085 kB; lsn=13/AF1B6B50, redo lsn=13/AF10AB08
postgres_container  | 2024-11-04 17:23:35.707 UTC [5949] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:23:35.707 UTC [5949] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:23:35.707 UTC [5949] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:24:36.759 UTC [5957] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:24:36.759 UTC [5957] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:24:36.759 UTC [5957] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:25:37.778 UTC [5965] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:25:37.778 UTC [5965] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:25:37.778 UTC [5965] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:26:38.793 UTC [5973] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:26:38.793 UTC [5973] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:26:38.793 UTC [5973] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:27:39.921 UTC [5981] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:27:39.921 UTC [5981] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:27:39.921 UTC [5981] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:27:52.547 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:28:27.584 UTC [26] LOG:  checkpoint complete: wrote 349 buffers (2.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=34.885 s, sync=0.104 s, total=35.037 s; sync files=579, longest=0.014 s, average=0.001 s; distance=6900 kB, estimate=425567 kB; lsn=13/AF876830, redo lsn=13/AF7C7DA0
postgres_container  | 2024-11-04 17:28:40.960 UTC [5989] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:28:40.960 UTC [5989] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:28:40.960 UTC [5989] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:29:41.998 UTC [5997] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:29:41.998 UTC [5997] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:29:41.998 UTC [5997] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:30:43.069 UTC [6005] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:30:43.069 UTC [6005] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:30:43.069 UTC [6005] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:31:44.123 UTC [6013] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:31:44.123 UTC [6013] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:31:44.123 UTC [6013] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:32:45.169 UTC [6021] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:32:45.169 UTC [6021] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:32:45.169 UTC [6021] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:32:52.684 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:33:27.217 UTC [26] LOG:  checkpoint complete: wrote 344 buffers (2.1%); 0 WAL file(s) added, 0 removed, 0 recycled; write=34.371 s, sync=0.103 s, total=34.533 s; sync files=575, longest=0.012 s, average=0.001 s; distance=6825 kB, estimate=383693 kB; lsn=13/AFF2CEF8, redo lsn=13/AFE72328
postgres_container  | 2024-11-04 17:33:46.272 UTC [6029] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:33:46.272 UTC [6029] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:33:46.272 UTC [6029] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:34:47.396 UTC [6037] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:34:47.396 UTC [6037] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:34:47.396 UTC [6037] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:35:48.405 UTC [6045] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:35:48.405 UTC [6045] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:35:48.405 UTC [6045] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:36:49.434 UTC [6053] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:36:49.434 UTC [6053] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:36:49.434 UTC [6053] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:37:50.512 UTC [6061] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:37:50.512 UTC [6061] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:37:50.512 UTC [6061] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:37:52.316 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:38:27.156 UTC [26] LOG:  checkpoint complete: wrote 347 buffers (2.1%); 0 WAL file(s) added, 1 removed, 0 recycled; write=34.684 s, sync=0.092 s, total=34.840 s; sync files=573, longest=0.014 s, average=0.001 s; distance=6890 kB, estimate=346012 kB; lsn=13/B05D16E0, redo lsn=13/B052CBC8
postgres_container  | 2024-11-04 17:38:51.586 UTC [6069] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:38:51.586 UTC [6069] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:38:51.586 UTC [6069] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:39:52.587 UTC [6077] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:39:52.587 UTC [6077] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:39:52.587 UTC [6077] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:40:53.631 UTC [6085] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:40:53.631 UTC [6085] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:40:53.631 UTC [6085] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:41:54.753 UTC [6093] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:41:54.753 UTC [6093] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:41:54.753 UTC [6093] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:17.480 UTC [6121] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:17.480 UTC [6121] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:17.480 UTC [6121] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:19.294 UTC [6158] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:19.294 UTC [6158] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:19.294 UTC [6158] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:21.026 UTC [6177] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:21.026 UTC [6177] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:21.026 UTC [6177] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:23.075 UTC [6206] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:23.075 UTC [6206] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:23.075 UTC [6206] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:25.348 UTC [6215] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:25.348 UTC [6215] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:25.348 UTC [6215] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:28.398 UTC [6236] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:28.398 UTC [6236] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:28.398 UTC [6236] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:33.353 UTC [6259] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:33.353 UTC [6259] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:33.353 UTC [6259] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:42.341 UTC [6268] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:42.341 UTC [6268] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:42.341 UTC [6268] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:42:45.105 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:42:57.733 UTC [6275] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:42:57.733 UTC [6275] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:42:57.733 UTC [6275] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:43:24.529 UTC [6283] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:43:24.529 UTC [6283] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:43:24.529 UTC [6283] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:44:16.873 UTC [6291] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:44:16.873 UTC [6291] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:44:16.873 UTC [6291] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:45:17.903 UTC [6299] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:45:17.903 UTC [6299] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:45:17.903 UTC [6299] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:46:18.960 UTC [6307] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:46:18.960 UTC [6307] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:46:18.960 UTC [6307] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:47:03.204 UTC [26] LOG:  checkpoint complete: wrote 9169 buffers (56.0%); 0 WAL file(s) added, 0 removed, 33 recycled; write=257.342 s, sync=0.297 s, total=258.100 s; sync files=2072, longest=0.012 s, average=0.001 s; distance=539486 kB, estimate=539486 kB; lsn=13/EA960D88, redo lsn=13/D1404678
postgres_container  | 2024-11-04 17:47:20.155 UTC [6315] ERROR:  function uuid_generate_v4() does not exist at character 390
postgres_container  | 2024-11-04 17:47:20.155 UTC [6315] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:47:20.155 UTC [6315] STATEMENT:  CREATE TABLE src_patients AS
postgres_container  | 	SELECT subject_id                        AS subject_id,
postgres_container  | 	       anchor_year                       AS anchor_year,
postgres_container  | 	       anchor_age                        AS anchor_age,
postgres_container  | 	       anchor_year_group                 AS anchor_year_group,
postgres_container  | 	       gender                            AS gender,
postgres_container  | 	       --
postgres_container  | 	       'patients'                        AS load_table_id,
postgres_container  | 	       uuid_generate_v4() AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['subject_id'],
postgres_container  | 	               ARRAY[subject_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM mimiciv_hosp.patients
postgres_container  | 	;
postgres_container  | 2024-11-04 17:47:45.244 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 17:48:21.693 UTC [6349] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:21.693 UTC [6349] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:21.693 UTC [6349] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:23.767 UTC [6392] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:23.767 UTC [6392] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:23.767 UTC [6392] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:25.878 UTC [6420] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:25.878 UTC [6420] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:25.878 UTC [6420] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:27.808 UTC [6430] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:27.808 UTC [6430] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:27.808 UTC [6430] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:30.062 UTC [6446] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:30.062 UTC [6446] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:30.062 UTC [6446] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:33.134 UTC [6467] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:33.134 UTC [6467] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:33.134 UTC [6467] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:38.203 UTC [6484] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:38.203 UTC [6484] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:38.203 UTC [6484] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:48:46.909 UTC [26] LOG:  checkpoint complete: wrote 867 buffers (5.3%); 0 WAL file(s) added, 0 removed, 25 recycled; write=58.619 s, sync=2.006 s, total=61.666 s; sync files=1116, longest=1.503 s, average=0.002 s; distance=416144 kB, estimate=527152 kB; lsn=14/9794330, redo lsn=13/EAA68738
postgres_container  | 2024-11-04 17:48:47.232 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:48:47.573 UTC [6491] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:48:47.573 UTC [6491] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:48:47.573 UTC [6491] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:49:02.425 UTC [6499] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:49:02.425 UTC [6499] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:49:02.425 UTC [6499] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:49:29.370 UTC [6506] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:49:29.370 UTC [6506] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:49:29.370 UTC [6506] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:50:21.678 UTC [6514] ERROR:  function uuid_generate_v4() does not exist at character 890
postgres_container  | 2024-11-04 17:50:21.678 UTC [6514] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 17:50:21.678 UTC [6514] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_admissions
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_admissions AS
postgres_container  | 	SELECT hadm_id            AS hadm_id,   -- PK
postgres_container  | 	       subject_id         AS subject_id,
postgres_container  | 	       admittime          AS admittime,
postgres_container  | 	       dischtime          AS dischtime,
postgres_container  | 	       deathtime          AS deathtime,
postgres_container  | 	       admission_type     AS admission_type,
postgres_container  | 	       admission_location AS admission_location,
postgres_container  | 	       discharge_location AS discharge_location,
postgres_container  | 	       race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
postgres_container  | 	       edregtime          AS edregtime,
postgres_container  | 	       insurance          AS insurance,
postgres_container  | 	       marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
postgres_container  | 	       -- edouttime
postgres_container  | 	       -- hospital_expire_flag
postgres_container  | 	       --
postgres_container  | 	    'admissions' AS load_table_id,
postgres_container  | 	    uuid_generate_v4() AS load_row_id,
postgres_container  | 	    json_object(
postgres_container  | 	               ARRAY['subject_id','hadm_id'],
postgres_container  | 	               ARRAY[subject_id::text,hadm_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM
postgres_container  | 	    mimiciv_hosp.admissions
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:23.248 UTC [6547] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:23.248 UTC [6547] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:26.010 UTC [6581] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:26.010 UTC [6581] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:28.217 UTC [26] LOG:  checkpoint complete: wrote 9341 buffers (57.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=158.046 s, sync=1.418 s, total=160.985 s; sync files=905, longest=0.073 s, average=0.002 s; distance=532124 kB, estimate=532124 kB; lsn=14/2B26AD50, redo lsn=14/B20FA30
postgres_container  | 2024-11-04 17:51:28.219 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:51:29.294 UTC [6611] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:29.294 UTC [6611] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:31.900 UTC [6633] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:31.900 UTC [6633] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:35.632 UTC [6651] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:35.632 UTC [6651] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:39.840 UTC [6680] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:39.840 UTC [6680] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:46.748 UTC [6690] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:46.748 UTC [6690] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:51:52.488 UTC [26] LOG:  checkpoint complete: wrote 8440 buffers (51.5%); 0 WAL file(s) added, 0 removed, 33 recycled; write=21.825 s, sync=1.142 s, total=24.270 s; sync files=959, longest=0.872 s, average=0.002 s; distance=549618 kB, estimate=549618 kB; lsn=14/4AFD3D58, redo lsn=14/2CACC358
postgres_container  | 2024-11-04 17:51:52.489 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 17:51:52.489 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 17:51:52.489 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:51:56.157 UTC [6698] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:51:56.157 UTC [6698] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:52:11.955 UTC [6707] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:52:11.955 UTC [6707] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:52:24.680 UTC [26] LOG:  checkpoint complete: wrote 3536 buffers (21.6%); 0 WAL file(s) added, 0 removed, 33 recycled; write=30.103 s, sync=1.609 s, total=32.192 s; sync files=419, longest=0.988 s, average=0.004 s; distance=531150 kB, estimate=547771 kB; lsn=14/6A788968, redo lsn=14/4D17FCD0
postgres_container  | 2024-11-04 17:52:39.101 UTC [6715] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:52:39.101 UTC [6715] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:53:32.069 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 17:53:32.086 UTC [6724] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:53:32.086 UTC [6724] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:54:33.769 UTC [6733] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:54:33.769 UTC [6733] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:55:35.366 UTC [6742] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:55:35.366 UTC [6742] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:56:36.873 UTC [6751] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:56:36.873 UTC [6751] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:57:38.461 UTC [6760] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:57:38.461 UTC [6760] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:58:02.569 UTC [26] LOG:  checkpoint complete: wrote 6781 buffers (41.4%); 0 WAL file(s) added, 0 removed, 33 recycled; write=269.866 s, sync=0.203 s, total=270.500 s; sync files=1000, longest=0.015 s, average=0.001 s; distance=540729 kB, estimate=547067 kB; lsn=14/74EC6830, redo lsn=14/6E18E308
postgres_container  | 2024-11-04 17:58:40.025 UTC [6769] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:58:40.025 UTC [6769] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 17:59:41.520 UTC [6778] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 17:59:41.520 UTC [6778] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:00:43.050 UTC [6787] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:00:43.050 UTC [6787] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:01:44.641 UTC [6796] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:01:44.641 UTC [6796] STATEMENT:  -- -------------------------------------------------------------------
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:02:46.177 UTC [6805] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:02:46.177 UTC [6805] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:03:32.687 UTC [26] LOG:  checkpoint starting: time
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
postgres_container  | 2024-11-04 18:03:47.907 UTC [6814] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:03:47.907 UTC [6814] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:04:31.908 UTC [26] LOG:  checkpoint complete: wrote 546 buffers (3.3%); 0 WAL file(s) added, 0 removed, 15 recycled; write=58.824 s, sync=0.172 s, total=59.221 s; sync files=906, longest=0.021 s, average=0.001 s; distance=247347 kB, estimate=517095 kB; lsn=14/7EEAE600, redo lsn=14/7D31B1D8
postgres_container  | 2024-11-04 18:04:49.553 UTC [6823] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:04:49.553 UTC [6823] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:05:51.147 UTC [6832] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:05:51.147 UTC [6832] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:06:52.744 UTC [6841] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:06:52.744 UTC [6841] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:07:54.420 UTC [6850] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:07:54.420 UTC [6850] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:08:33.008 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 18:08:55.962 UTC [6859] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:08:55.962 UTC [6859] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:16.324 UTC [26] LOG:  checkpoint complete: wrote 387 buffers (2.4%); 0 WAL file(s) added, 1 removed, 7 recycled; write=43.014 s, sync=0.112 s, total=43.317 s; sync files=759, longest=0.001 s, average=0.001 s; distance=136739 kB, estimate=479059 kB; lsn=14/87436C18, redo lsn=14/858A4178
postgres_container  | 2024-11-04 18:09:19.666 UTC [6891] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:19.666 UTC [6891] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:22.660 UTC [6939] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:22.660 UTC [6939] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:25.351 UTC [6968] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:25.351 UTC [6968] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:27.665 UTC [6979] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:27.665 UTC [6979] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:31.078 UTC [6996] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:31.078 UTC [6996] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:35.239 UTC [7027] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:35.239 UTC [7027] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:39.844 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:09:42.149 UTC [7037] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:42.149 UTC [7037] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:09:52.197 UTC [7045] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:09:52.197 UTC [7045] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:10:02.551 UTC [26] LOG:  checkpoint complete: wrote 8728 buffers (53.3%); 0 WAL file(s) added, 1 removed, 32 recycled; write=18.473 s, sync=2.804 s, total=22.714 s; sync files=1383, longest=0.975 s, average=0.003 s; distance=531904 kB, estimate=531904 kB; lsn=14/C55DEBD0, redo lsn=14/A60144E0
postgres_container  | 2024-11-04 18:10:02.552 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 18:10:02.552 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:10:02.552 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:10:08.167 UTC [7054] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:10:08.167 UTC [7054] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:10:35.585 UTC [7062] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:10:35.585 UTC [7062] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:11:28.320 UTC [7071] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:11:28.320 UTC [7071] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:12:29.829 UTC [7080] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:12:29.829 UTC [7080] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:13:31.427 UTC [7089] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:13:31.427 UTC [7089] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:14:33.237 UTC [7098] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:14:33.237 UTC [7098] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:14:33.240 UTC [26] LOG:  checkpoint complete: wrote 2126 buffers (13.0%); 0 WAL file(s) added, 0 removed, 34 recycled; write=269.415 s, sync=0.153 s, total=270.688 s; sync files=831, longest=0.024 s, average=0.001 s; distance=561471 kB, estimate=561471 kB; lsn=14/D44500D8, redo lsn=14/C8464320
postgres_container  | 2024-11-04 18:15:02.269 UTC [26] LOG:  checkpoint starting: time
postgres_container  | 2024-11-04 18:15:34.719 UTC [7107] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:15:34.719 UTC [7107] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:16:36.272 UTC [7116] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:16:36.272 UTC [7116] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:17:37.784 UTC [7125] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:17:37.784 UTC [7125] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:18:39.350 UTC [7134] ERROR:  could not identify an equality operator for type json at character 1210
postgres_container  | 2024-11-04 18:18:39.350 UTC [7134] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	-- CREATE TABLE src_d_micro AS
postgres_container  | 	-- SELECT
postgres_container  | 	--     itemid                      AS itemid, -- numeric ID
postgres_container  | 	--     label                       AS label, -- source_code for custom mapping
postgres_container  | 	--     category                    AS category, 
postgres_container  | 	--     --
postgres_container  | 	--     'd_micro'                   AS load_table_id,
postgres_container  | 	--     uuid_hash(uuid_nil())   AS load_row_id,
postgres_container  | 	--     to_json(struct(
postgres_container  | 	--         itemid AS itemid
postgres_container  | 	--     ))                                  AS trace_id
postgres_container  | 	-- FROM
postgres_container  | 	--     d_micro_mimic
postgres_container  | 	-- ;
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- src_d_micro
postgres_container  | 	-- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE src_d_micro AS
postgres_container  | 	WITH d_micro AS (
postgres_container  | 	
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        ab_itemid                   AS itemid, -- numeric ID
postgres_container  | 	        ab_name                     AS label, -- source_code for custom mapping
postgres_container  | 	        'ANTIBIOTIC'                AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['ab_itemid', ab_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        ab_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        test_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        test_name                   AS label, -- source_code for custom mapping
postgres_container  | 	        'MICROTEST'                 AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['test_itemid', test_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        test_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        org_itemid                  AS itemid, -- numeric ID
postgres_container  | 	        org_name                    AS label, -- source_code for custom mapping
postgres_container  | 	        'ORGANISM'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        json_object(
postgres_container  | 	               ARRAY['field_name','itemid'],
postgres_container  | 	               ARRAY['org_itemid', org_itemid::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        org_itemid IS NOT NULL
postgres_container  | 	    UNION ALL
postgres_container  | 	    SELECT DISTINCT
postgres_container  | 	        spec_itemid                 AS itemid, -- numeric ID
postgres_container  | 	        spec_type_desc              AS label, -- source_code for custom mapping
postgres_container  | 	        'SPECIMEN'                  AS category, 
postgres_container  | 	        --
postgres_container  | 	        -- json_object(
postgres_container  | 	        --        ARRAY['field_name','itemid'],
postgres_container  | 	        --        ARRAY['spec_itemid', spec_itemid::text]
postgres_container  | 	        --    )          AS trace_id
postgres_container  | 	        jsonb_build_object(
postgres_container  | 	               'field_name', 'org_itemid',
postgres_container  | 	               'itemid', org_itemid::text
postgres_container  | 	           ) AS trace_id
postgres_container  | 	    FROM
postgres_container  | 	        mimiciv_hosp.microbiologyevents
postgres_container  | 	    WHERE
postgres_container  | 	        spec_itemid IS NOT NULL
postgres_container  | 	)
postgres_container  | 	SELECT itemid               AS itemid, -- numeric ID
postgres_container  | 	       label                AS label,  -- source_code for custom mapping
postgres_container  | 	       category             AS category,
postgres_container  | 	       --
postgres_container  | 	       'microbiologyevents' AS load_table_id,
postgres_container  | 	       gen_random_uuid()         AS load_row_id,
postgres_container  | 	       trace_id             AS trace_id
postgres_container  | 	FROM d_micro
postgres_container  | 	;
postgres_container  | 2024-11-04 18:19:26.388 UTC [7167] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:19:26.388 UTC [7167] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:19:29.391 UTC [7217] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:19:29.391 UTC [7217] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:19:34.720 UTC [26] LOG:  checkpoint complete: wrote 5141 buffers (31.4%); 0 WAL file(s) added, 0 removed, 13 recycled; write=269.707 s, sync=2.308 s, total=272.451 s; sync files=1354, longest=0.182 s, average=0.002 s; distance=223644 kB, estimate=527688 kB; lsn=14/ECFF02E8, redo lsn=14/D5ECB438
postgres_container  | 2024-11-04 18:19:35.916 UTC [7251] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:19:35.916 UTC [7251] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:19:40.896 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:19:44.766 UTC [7291] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:19:44.766 UTC [7291] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:19:58.527 UTC [26] LOG:  checkpoint complete: wrote 8896 buffers (54.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=13.190 s, sync=2.934 s, total=17.632 s; sync files=564, longest=1.962 s, average=0.006 s; distance=529618 kB, estimate=529618 kB; lsn=15/16093E60, redo lsn=14/F63FFCA0
postgres_container  | 2024-11-04 18:19:58.528 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 18:19:58.528 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:19:58.528 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:19:59.114 UTC [7303] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:19:59.114 UTC [7303] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:20:12.835 UTC [7314] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:20:12.835 UTC [7314] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:20:23.361 UTC [26] LOG:  checkpoint complete: wrote 2991 buffers (18.3%); 0 WAL file(s) added, 7 removed, 28 recycled; write=19.564 s, sync=3.946 s, total=24.834 s; sync files=419, longest=1.403 s, average=0.010 s; distance=579822 kB, estimate=579822 kB; lsn=15/3C2EDDE8, redo lsn=15/19A3B558
postgres_container  | 2024-11-04 18:20:23.361 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 18:20:23.361 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:20:23.409 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:20:27.474 UTC [7324] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:20:27.474 UTC [7324] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:20:42.123 UTC [7334] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:20:42.123 UTC [7334] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:20:44.399 UTC [26] LOG:  checkpoint complete: wrote 5687 buffers (34.7%); 0 WAL file(s) added, 6 removed, 33 recycled; write=16.990 s, sync=2.752 s, total=21.038 s; sync files=309, longest=1.322 s, average=0.009 s; distance=632465 kB, estimate=632465 kB; lsn=15/5EE54028, redo lsn=15/403DF988
postgres_container  | 2024-11-04 18:20:44.399 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:20:44.399 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:20:45.881 UTC [26] LOG:  checkpoints are occurring too frequently (1 second apart)
postgres_container  | 2024-11-04 18:20:45.881 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:20:45.882 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:20:48.880 UTC [7344] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:20:48.880 UTC [7344] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:20:55.009 UTC [7354] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:20:55.009 UTC [7354] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:21:02.273 UTC [7365] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:21:02.273 UTC [7365] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:21:04.241 UTC [26] LOG:  checkpoint complete: wrote 4392 buffers (26.8%); 0 WAL file(s) added, 3 removed, 30 recycled; write=14.045 s, sync=3.026 s, total=18.360 s; sync files=559, longest=0.903 s, average=0.006 s; distance=540804 kB, estimate=623298 kB; lsn=15/82E2BA60, redo lsn=15/614009C0
postgres_container  | 2024-11-04 18:21:04.241 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 18:21:04.241 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:21:04.241 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:21:09.325 UTC [7375] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:21:09.325 UTC [7375] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:21:16.450 UTC [7385] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:21:16.450 UTC [7385] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:21:28.731 UTC [26] LOG:  checkpoint complete: wrote 721 buffers (4.4%); 0 WAL file(s) added, 2 removed, 31 recycled; write=18.251 s, sync=4.532 s, total=24.490 s; sync files=548, longest=2.859 s, average=0.009 s; distance=551938 kB, estimate=616162 kB; lsn=15/A2402108, redo lsn=15/82F01408
postgres_container  | 2024-11-04 18:21:28.732 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 18:21:28.732 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:21:28.732 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:21:28.811 UTC [7395] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:21:28.811 UTC [7395] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:21:41.573 UTC [7405] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:21:41.573 UTC [7405] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:22:00.666 UTC [7416] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:22:00.666 UTC [7416] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:22:32.440 UTC [7426] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:22:32.440 UTC [7426] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE
postgres_container  | 	TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:22:32.618 UTC [26] LOG:  checkpoint complete: wrote 383 buffers (2.3%); 0 WAL file(s) added, 7 removed, 29 recycled; write=60.679 s, sync=2.081 s, total=63.886 s; sync files=539, longest=0.698 s, average=0.004 s; distance=589266 kB, estimate=613473 kB; lsn=15/C8614F20, redo lsn=15/A6E75E78
postgres_container  | 2024-11-04 18:22:32.618 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:23:01.166 UTC [7427] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 18:23:01.167 UTC [7427] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 18:23:01.847 UTC [7467] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:01.847 UTC [7467] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:23:04.825 UTC [7509] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:04.825 UTC [7509] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:23:12.235 UTC [7543] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:12.235 UTC [7543] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:23:22.212 UTC [7576] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:22.212 UTC [7576] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:23:23.292 UTC [26] LOG:  checkpoint complete: wrote 2976 buffers (18.2%); 0 WAL file(s) added, 9 removed, 28 recycled; write=46.115 s, sync=3.212 s, total=50.674 s; sync files=840, longest=0.945 s, average=0.004 s; distance=594082 kB, estimate=611534 kB; lsn=15/EE4BDED8, redo lsn=15/CB29E938
postgres_container  | 2024-11-04 18:23:23.304 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:23:35.479 UTC [7596] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:35.479 UTC [7596] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:23:43.756 UTC [26] LOG:  checkpoint complete: wrote 6973 buffers (42.6%); 0 WAL file(s) added, 6 removed, 31 recycled; write=17.125 s, sync=1.988 s, total=20.453 s; sync files=475, longest=0.729 s, average=0.005 s; distance=608665 kB, estimate=611247 kB; lsn=16/10A2D4F0, redo lsn=15/F0504D68
postgres_container  | 2024-11-04 18:23:43.757 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 18:23:43.757 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:23:43.757 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:23:48.805 UTC [7606] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:23:48.805 UTC [7606] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:02.940 UTC [7617] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:02.940 UTC [7617] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:03.303 UTC [26] LOG:  checkpoint complete: wrote 1130 buffers (6.9%); 0 WAL file(s) added, 6 removed, 30 recycled; write=14.436 s, sync=3.334 s, total=19.546 s; sync files=263, longest=0.757 s, average=0.013 s; distance=585887 kB, estimate=608711 kB; lsn=16/35406350, redo lsn=16/1412CBB8
postgres_container  | 2024-11-04 18:24:03.304 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 18:24:03.304 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:24:03.304 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:24:13.362 UTC [7627] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:13.362 UTC [7627] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:23.100 UTC [7637] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:23.100 UTC [7637] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:24.080 UTC [26] LOG:  checkpoint complete: wrote 2471 buffers (15.1%); 0 WAL file(s) added, 5 removed, 31 recycled; write=16.835 s, sync=1.755 s, total=20.776 s; sync files=429, longest=0.901 s, average=0.005 s; distance=602960 kB, estimate=608136 kB; lsn=16/584DD300, redo lsn=16/38E00DF0
postgres_container  | 2024-11-04 18:24:24.080 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:24:24.080 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:24:24.080 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:24:29.892 UTC [7647] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:29.892 UTC [7647] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:37.505 UTC [7657] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:37.505 UTC [7657] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:46.709 UTC [7667] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:46.709 UTC [7667] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:24:48.501 UTC [26] LOG:  checkpoint complete: wrote 6416 buffers (39.2%); 0 WAL file(s) added, 6 removed, 27 recycled; write=18.594 s, sync=4.541 s, total=24.422 s; sync files=619, longest=1.015 s, average=0.008 s; distance=533414 kB, estimate=600664 kB; lsn=16/7D80D608, redo lsn=16/596EA8F0
postgres_container  | 2024-11-04 18:24:48.501 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 18:24:48.501 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:24:48.501 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:24:55.422 UTC [7677] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:24:55.422 UTC [7677] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:25:06.904 UTC [7688] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:25:06.904 UTC [7688] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:25:28.943 UTC [7698] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:25:28.943 UTC [7698] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:25:29.612 UTC [26] LOG:  checkpoint complete: wrote 954 buffers (5.8%); 0 WAL file(s) added, 8 removed, 28 recycled; write=35.668 s, sync=4.153 s, total=41.111 s; sync files=553, longest=1.374 s, average=0.008 s; distance=591266 kB, estimate=599724 kB; lsn=16/A0671428, redo lsn=16/7D853148
postgres_container  | 2024-11-04 18:25:29.612 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:25:59.211 UTC [7708] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:25:59.211 UTC [7708] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:26:55.130 UTC [7719] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:26:55.130 UTC [7719] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:28:01.169 UTC [7731] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:28:01.169 UTC [7731] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:28:01.911 UTC [26] LOG:  checkpoint complete: wrote 3012 buffers (18.4%); 0 WAL file(s) added, 7 removed, 29 recycled; write=148.618 s, sync=2.143 s, total=152.300 s; sync files=553, longest=0.436 s, average=0.004 s; distance=594654 kB, estimate=599217 kB; lsn=16/C3E19618, redo lsn=16/A1D0AA58
postgres_container  | 2024-11-04 18:28:01.912 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:29:03.017 UTC [7732] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 18:29:03.017 UTC [7732] CONTEXT:  while scanning block 11282 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 18:29:06.918 UTC [7742] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:29:06.918 UTC [7742] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:30:11.681 UTC [7753] ERROR:  syntax error at or near "TABLE" at character 76
postgres_container  | 2024-11-04 18:30:11.681 UTC [7753] STATEMENT:  -- parsed codes to be targeted to table cdm_measurement
postgres_container  | 	
postgres_container  | 	CREATE OR REPLACE TABLE src_waveform_mx_3
postgres_container  | 	(
postgres_container  | 	    case_id                 text,  -- FK to the header
postgres_container  | 	    segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
postgres_container  | 	    mx_datetime             TIMESTAMP, -- time of measurement
postgres_container  | 	    source_code             text,   -- type of measurement
postgres_container  | 	    value_as_number         NUMERIC,
postgres_container  | 	    unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
postgres_container  | 	                                    -- map these labels and populate unit_concept_id
postgres_container  | 	    --
postgres_container  | 	    Visit_Detail___Source               text,
postgres_container  | 	    Visit_Detail___Start_from_minutes   INTEGER,
postgres_container  | 	    Visit_Detail___Report_minutes       INTEGER,
postgres_container  | 	    Visit_Detail___Sumarize_minutes     INTEGER,
postgres_container  | 	    Visit_Detail___Method               text,
postgres_container  | 	    --
postgres_container  | 	    load_table_id           text,
postgres_container  | 	    load_row_id             INTEGER,
postgres_container  | 	    trace_id                text
postgres_container  | 	);
postgres_container  | 2024-11-04 18:30:44.620 UTC [7785] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:30:44.620 UTC [7785] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:30:47.972 UTC [7835] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:30:47.972 UTC [7835] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:30:51.044 UTC [26] LOG:  checkpoint complete: wrote 1411 buffers (8.6%); 0 WAL file(s) added, 5 removed, 31 recycled; write=165.362 s, sync=1.870 s, total=169.133 s; sync files=773, longest=0.216 s, average=0.003 s; distance=592657 kB, estimate=598561 kB; lsn=16/E5D1F970, redo lsn=16/C5FCEFF0
postgres_container  | 2024-11-04 18:30:51.067 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:30:56.337 UTC [7869] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:30:56.337 UTC [7869] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:31:03.396 UTC [7886] LOG:  skipping vacuum of "emar" --- lock not available
postgres_container  | 2024-11-04 18:31:06.369 UTC [7909] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:31:06.369 UTC [7909] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:31:12.566 UTC [26] LOG:  checkpoint complete: wrote 4112 buffers (25.1%); 0 WAL file(s) added, 2 removed, 32 recycled; write=18.714 s, sync=0.908 s, total=21.521 s; sync files=597, longest=0.329 s, average=0.002 s; distance=545644 kB, estimate=593269 kB; lsn=17/6231758, redo lsn=16/E74AA098
postgres_container  | 2024-11-04 18:31:12.566 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:31:12.566 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:31:12.566 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:31:21.965 UTC [7922] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:31:21.965 UTC [7922] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:31:31.569 UTC [26] LOG:  checkpoint complete: wrote 8246 buffers (50.3%); 0 WAL file(s) added, 3 removed, 32 recycled; write=16.608 s, sync=1.174 s, total=19.003 s; sync files=471, longest=0.919 s, average=0.003 s; distance=581773 kB, estimate=592120 kB; lsn=17/297B2C98, redo lsn=17/ACCD868
postgres_container  | 2024-11-04 18:31:31.570 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 18:31:31.570 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:31:31.570 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:31:34.168 UTC [7932] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:31:34.168 UTC [7932] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:31:48.212 UTC [7942] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:31:48.212 UTC [7942] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:31:52.896 UTC [26] LOG:  checkpoint complete: wrote 489 buffers (3.0%); 0 WAL file(s) added, 4 removed, 30 recycled; write=16.367 s, sync=3.292 s, total=21.326 s; sync files=239, longest=1.057 s, average=0.014 s; distance=555363 kB, estimate=588444 kB; lsn=17/4D15CDE8, redo lsn=17/2CB26748
postgres_container  | 2024-11-04 18:31:52.896 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:31:52.896 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:31:52.896 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:31:59.842 UTC [7952] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:31:59.842 UTC [7952] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:11.205 UTC [7963] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:32:11.205 UTC [7963] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:21.474 UTC [26] LOG:  checkpoint complete: wrote 2534 buffers (15.5%); 0 WAL file(s) added, 6 removed, 29 recycled; write=23.465 s, sync=2.661 s, total=28.578 s; sync files=516, longest=0.573 s, average=0.006 s; distance=566916 kB, estimate=586291 kB; lsn=17/7150C068, redo lsn=17/4F4C79B0
postgres_container  | 2024-11-04 18:32:21.474 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 18:32:21.474 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:32:21.475 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:32:23.896 UTC [7973] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:32:23.896 UTC [7973] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:33.779 UTC [7983] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:32:33.779 UTC [7983] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:42.794 UTC [7993] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:32:42.794 UTC [7993] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:52.537 UTC [8003] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:32:52.537 UTC [8003] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:32:54.630 UTC [26] LOG:  checkpoint complete: wrote 2745 buffers (16.8%); 0 WAL file(s) added, 12 removed, 27 recycled; write=26.227 s, sync=3.273 s, total=33.156 s; sync files=594, longest=0.550 s, average=0.006 s; distance=638169 kB, estimate=638169 kB; lsn=17/9A9BAFC8, redo lsn=17/763FE158
postgres_container  | 2024-11-04 18:32:54.631 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:33:05.677 UTC [8014] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:33:05.677 UTC [8014] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:33:28.776 UTC [8024] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:33:28.776 UTC [8024] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:05.598 UTC [8035] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:05.598 UTC [8035] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:05.804 UTC [26] LOG:  checkpoint complete: wrote 468 buffers (2.9%); 0 WAL file(s) added, 9 removed, 29 recycled; write=67.293 s, sync=2.432 s, total=71.174 s; sync files=551, longest=0.437 s, average=0.005 s; distance=626507 kB, estimate=637003 kB; lsn=17/BE6A1580, redo lsn=17/9C7D0EC8
postgres_container  | 2024-11-04 18:34:05.805 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:34:11.327 UTC [8045] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:11.327 UTC [8045] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:17.065 UTC [8055] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:17.065 UTC [8055] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:23.950 UTC [8065] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:23.950 UTC [8065] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:24.193 UTC [26] LOG:  checkpoint complete: wrote 1043 buffers (6.4%); 0 WAL file(s) added, 7 removed, 29 recycled; write=15.256 s, sync=1.907 s, total=18.389 s; sync files=564, longest=0.375 s, average=0.004 s; distance=593523 kB, estimate=632655 kB; lsn=17/E25B78F8, redo lsn=17/C0B6DEC0
postgres_container  | 2024-11-04 18:34:24.194 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 18:34:24.194 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:34:24.194 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:34:29.458 UTC [8075] ERROR:  relation "wf_header_mimic" does not exist at character 1249
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
postgres_container  | 2024-11-04 18:34:29.458 UTC [8075] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:35.676 UTC [8085] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:35.676 UTC [8085] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:45.885 UTC [8095] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:45.885 UTC [8095] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:34:46.017 UTC [26] LOG:  checkpoint complete: wrote 384 buffers (2.3%); 0 WAL file(s) added, 7 removed, 29 recycled; write=18.121 s, sync=2.828 s, total=21.824 s; sync files=542, longest=1.318 s, average=0.006 s; distance=587989 kB, estimate=628189 kB; lsn=18/67B6910, redo lsn=17/E49A32D8
postgres_container  | 2024-11-04 18:34:46.017 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 18:34:46.017 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:34:46.017 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:34:57.117 UTC [8105] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:34:57.117 UTC [8105] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:35:14.629 UTC [8116] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:35:14.629 UTC [8116] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:35:47.013 UTC [8126] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:35:47.013 UTC [8126] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:35:47.019 UTC [26] LOG:  checkpoint complete: wrote 386 buffers (2.4%); 0 WAL file(s) added, 6 removed, 30 recycled; write=58.031 s, sync=1.966 s, total=61.002 s; sync files=541, longest=0.733 s, average=0.004 s; distance=587982 kB, estimate=624168 kB; lsn=18/2987CC90, redo lsn=18/87D6D00
postgres_container  | 2024-11-04 18:35:47.020 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:36:43.112 UTC [8137] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:36:43.112 UTC [8137] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:37:47.967 UTC [8148] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:37:47.967 UTC [8148] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:38:53.868 UTC [8159] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:38:53.868 UTC [8159] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:38:53.987 UTC [26] LOG:  checkpoint complete: wrote 1208 buffers (7.4%); 0 WAL file(s) added, 7 removed, 29 recycled; write=184.074 s, sync=1.992 s, total=186.968 s; sync files=561, longest=0.578 s, average=0.004 s; distance=591248 kB, estimate=620876 kB; lsn=18/4E6C85A8, redo lsn=18/2C93AF70
postgres_container  | 2024-11-04 18:38:53.988 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:39:58.813 UTC [8170] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:39:58.813 UTC [8170] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:41:03.477 UTC [8182] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:41:03.477 UTC [8182] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:16.995 UTC [8193] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:16.995 UTC [8193] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:18.913 UTC [26] LOG:  checkpoint complete: wrote 1367 buffers (8.3%); 0 WAL file(s) added, 10 removed, 26 recycled; write=196.204 s, sync=6.829 s, total=204.925 s; sync files=565, longest=0.829 s, average=0.013 s; distance=593809 kB, estimate=618169 kB; lsn=18/750CAF48, redo lsn=18/50D1F760
postgres_container  | 2024-11-04 18:42:20.167 UTC [26] LOG:  checkpoints are occurring too frequently (2 seconds apart)
postgres_container  | 2024-11-04 18:42:20.167 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:42:20.167 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:42:23.745 UTC [8203] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:23.745 UTC [8203] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:29.785 UTC [8213] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:29.785 UTC [8213] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:37.642 UTC [8223] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:37.642 UTC [8223] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:38.291 UTC [26] LOG:  checkpoint complete: wrote 1539 buffers (9.4%); 0 WAL file(s) added, 8 removed, 30 recycled; write=14.457 s, sync=2.261 s, total=18.125 s; sync files=551, longest=0.667 s, average=0.005 s; distance=613244 kB, estimate=617677 kB; lsn=18/977DCC10, redo lsn=18/763FEA98
postgres_container  | 2024-11-04 18:42:38.292 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 18:42:38.292 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:42:38.292 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:42:43.154 UTC [8233] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:43.154 UTC [8233] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | -- CREATE TABLE src_waveform_header_3
etl_container       | -- (       
etl_container       | --     reference_id            text,
etl_container       | --     raw_files_path          text,
etl_container       | --     case_id                 text,
etl_container       | --     subject_id              INTEGER,
etl_container       | --     start_datetime          TIMESTAMP,
etl_container       | --     end_datetime            TIMESTAMP,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:49.414 UTC [8243] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:49.414 UTC [8243] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:58.087 UTC [8253] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:42:58.087 UTC [8253] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:42:58.172 UTC [26] LOG:  checkpoint complete: wrote 360 buffers (2.2%); 0 WAL file(s) added, 5 removed, 29 recycled; write=17.106 s, sync=1.837 s, total=19.881 s; sync files=537, longest=0.473 s, average=0.004 s; distance=568117 kB, estimate=612721 kB; lsn=18/BA400150, redo lsn=18/98ECBF58
postgres_container  | 2024-11-04 18:42:58.173 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 18:42:58.173 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:42:58.173 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:43:05.537 UTC [8254] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 18:43:09.458 UTC [8264] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:43:09.458 UTC [8264] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:43:26.884 UTC [8274] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:43:26.884 UTC [8274] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:43:58.842 UTC [8284] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:43:58.842 UTC [8284] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:43:59.091 UTC [26] LOG:  checkpoint complete: wrote 380 buffers (2.3%); 0 WAL file(s) added, 7 removed, 29 recycled; write=57.675 s, sync=2.300 s, total=60.919 s; sync files=547, longest=0.615 s, average=0.005 s; distance=587897 kB, estimate=610238 kB; lsn=18/DEE17FB0, redo lsn=18/BCCEA488
postgres_container  | 2024-11-04 18:43:59.092 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:45:00.280 UTC [8295] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:45:00.280 UTC [8295] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:45:05.521 UTC [8296] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 18:45:05.521 UTC [8296] CONTEXT:  while scanning block 8816 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 18:45:11.194 UTC [8306] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:45:11.194 UTC [8306] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:45:25.773 UTC [8316] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:45:25.773 UTC [8316] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:45:26.351 UTC [26] LOG:  checkpoint complete: wrote 1149 buffers (7.0%); 0 WAL file(s) added, 9 removed, 27 recycled; write=76.421 s, sync=7.674 s, total=87.259 s; sync files=561, longest=1.282 s, average=0.014 s; distance=591067 kB, estimate=608321 kB; lsn=19/3999E88, redo lsn=18/E0E21318
postgres_container  | 2024-11-04 18:45:26.351 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:45:34.244 UTC [8326] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:45:34.244 UTC [8326] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:45:44.061 UTC [8336] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:45:44.061 UTC [8336] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
etl_container       | 
etl_container       | -- -- parsed codes to be targeted to table cdm_measurement
etl_container       | -- DROP TABLE IF EXISTS src_waveform_mx_3;
etl_container       | 
etl_container       | -- CREATE TABLE src_waveform_mx_3
etl_container       | -- (
etl_container       | --     case_id                 text,  -- FK to the header
etl_container       | --     segment_name            text, -- two digits of case_id, 5 digits of internal sequence number
etl_container       | --     mx_datetime             TIMESTAMP, -- time of measurement
etl_container       | --     source_code             text,   -- type of measurement
etl_container       | --     value_as_number         NUMERIC,
etl_container       | --     unit_source_value       text, -- measurement unit "BPM", "MS", "UV" (microvolt) etc.
etl_container       | --                                     -- map these labels and populate unit_concept_id
etl_container       | --     --
etl_container       | --     Visit_Detail___Source               text,
etl_container       | --     Visit_Detail___Start_from_minutes   INTEGER,
etl_container       | --     Visit_Detail___Report_minutes       INTEGER,
etl_container       | --     Visit_Detail___Sumarize_minutes     INTEGER,
etl_container       | --     Visit_Detail___Method               text,
etl_container       | --     --
etl_container       | --     load_table_id           text,
etl_container       | --     load_row_id             INTEGER,
etl_container       | --     trace_id                text
etl_container       | -- );
etl_container       | 
etl_container       | 
etl_container       | -- -- parse xml from Manlik? -> src_waveform
etl_container       | -- -- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
etl_container       | 
etl_container       | -- -- finding the visit 
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:02.368 UTC [8347] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:46:02.368 UTC [8347] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:03.352 UTC [26] LOG:  checkpoint complete: wrote 562 buffers (3.4%); 0 WAL file(s) added, 7 removed, 29 recycled; write=30.269 s, sync=1.880 s, total=37.001 s; sync files=554, longest=0.636 s, average=0.004 s; distance=591570 kB, estimate=606646 kB; lsn=19/25402178, redo lsn=19/4FD5D38
postgres_container  | 2024-11-04 18:46:03.352 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:46:09.339 UTC [8357] ERROR:  relation "wf_header_mimic" does not exist at character 1249
postgres_container  | 2024-11-04 18:46:09.339 UTC [8357] STATEMENT:  -- parse xml from Manlik? -> src_waveform
postgres_container  | 	-- src_waveform -> visit_detail (visit_detail_source_value = <reference ID>)
postgres_container  | 	
postgres_container  | 	-- finding the visit 
postgres_container  | 	-- create visit_detail
postgres_container  | 	-- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
postgres_container  | 	-- (start with Manlik's proposal)
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	-- insert sample data
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	
postgres_container  | 	INSERT INTO src_waveform_header_3
postgres_container  | 	SELECT subj.short_reference_id                         AS reference_id,
postgres_container  | 	       subj.long_reference_id                          AS raw_files_path,
postgres_container  | 	       subj.case_id                                    AS case_id,    -- text
postgres_container  | 	       CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
postgres_container  | 	       CAST(sign.start AS TIMESTAMP)          AS start_datetime,
postgres_container  | 	       CAST(sign.end AS TIMESTAMP)            AS end_datetime,
postgres_container  | 	       --
postgres_container  | 	       'poc_3_header'                                  AS load_table_id,
postgres_container  | 	       0                                               AS load_row_id,
postgres_container  | 	       json_object(
postgres_container  | 	               ARRAY['case_id','reference_id'],
postgres_container  | 	               ARRAY[case_id::text,short_reference_id::text]
postgres_container  | 	           )          AS trace_id
postgres_container  | 	FROM wf_header_mimic subj
postgres_container  | 	         INNER JOIN (
postgres_container  | 	                        SELECT case_id,
postgres_container  | 	                               MIN(date_time) AS start,
postgres_container  | 	                               MAX(date_time) AS end
postgres_container  | 	                        FROM ecgmx_041_mimic GROUP BY case_id
postgres_container  | 	                    ) sign ON subj.case_id = sign.case_id
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:11.397 UTC [8392] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:46:11.397 UTC [8392] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:15.058 UTC [8441] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:46:15.058 UTC [8441] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:23.271 UTC [8476] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:46:23.271 UTC [8476] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:24.065 UTC [26] LOG:  checkpoint complete: wrote 696 buffers (4.2%); 0 WAL file(s) added, 4 removed, 32 recycled; write=17.178 s, sync=1.746 s, total=20.713 s; sync files=809, longest=0.558 s, average=0.003 s; distance=589416 kB, estimate=604923 kB; lsn=19/47EEEC28, redo lsn=19/28F6FE40
postgres_container  | 2024-11-04 18:46:24.066 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:46:24.066 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:46:24.066 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:46:31.554 UTC [8510] ERROR:  relation "concept" does not exist at character 43
postgres_container  | 2024-11-04 18:46:31.554 UTC [8510] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:46:45.613 UTC [26] LOG:  checkpoint complete: wrote 7736 buffers (47.2%); 0 WAL file(s) added, 3 removed, 31 recycled; write=15.484 s, sync=2.255 s, total=21.547 s; sync files=515, longest=1.437 s, average=0.005 s; distance=549693 kB, estimate=599400 kB; lsn=19/6A406258, redo lsn=19/4A83F280
postgres_container  | 2024-11-04 18:46:45.614 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 18:46:45.614 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:46:45.614 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:46:47.014 UTC [8530] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:46:47.014 UTC [8530] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:47:00.567 UTC [8541] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:47:00.567 UTC [8541] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:47:07.925 UTC [26] LOG:  checkpoint complete: wrote 3061 buffers (18.7%); 0 WAL file(s) added, 4 removed, 32 recycled; write=18.519 s, sync=2.117 s, total=22.312 s; sync files=241, longest=0.882 s, average=0.009 s; distance=592544 kB, estimate=598714 kB; lsn=19/8DCA8940, redo lsn=19/6EAE72A8
postgres_container  | 2024-11-04 18:47:07.926 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 18:47:07.926 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:47:07.926 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:47:19.299 UTC [8553] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:47:19.299 UTC [8553] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:47:41.122 UTC [26] LOG:  checkpoint complete: wrote 2239 buffers (13.7%); 0 WAL file(s) added, 6 removed, 29 recycled; write=24.832 s, sync=6.164 s, total=33.197 s; sync files=415, longest=2.703 s, average=0.015 s; distance=565746 kB, estimate=595418 kB; lsn=19/B2802EA8, redo lsn=19/91363CB8
postgres_container  | 2024-11-04 18:47:41.123 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:47:41.956 UTC [8564] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:47:41.956 UTC [8564] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:47:50.466 UTC [8575] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:47:50.466 UTC [8575] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:47:57.338 UTC [8586] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:47:57.338 UTC [8586] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:48:05.055 UTC [8598] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:48:05.055 UTC [8598] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:48:06.685 UTC [26] LOG:  checkpoint complete: wrote 6509 buffers (39.7%); 0 WAL file(s) added, 10 removed, 26 recycled; write=20.149 s, sync=3.254 s, total=25.563 s; sync files=604, longest=0.667 s, average=0.006 s; distance=598650 kB, estimate=598650 kB; lsn=19/DA23E0E0, redo lsn=19/B5C024C0
postgres_container  | 2024-11-04 18:48:06.685 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 18:48:06.685 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:48:06.685 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:48:12.228 UTC [8609] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:48:12.228 UTC [8609] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:48:19.361 UTC [8620] ERROR:  relation "voc_concept" already exists
etl_container       | -- -- create visit_detail
etl_container       | -- -- create measurement -> link visit_detail using visit_detail_source_value = meas_source_value 
etl_container       | -- -- (start with Manlik's proposal)
etl_container       | 
etl_container       | 
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | -- -- insert sample data
etl_container       | -- -- -------------------------------------------------------------------
etl_container       | 
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_header_3
etl_container       | -- SELECT subj.short_reference_id                         AS reference_id,
etl_container       | --        subj.long_reference_id                          AS raw_files_path,
etl_container       | --        subj.case_id                                    AS case_id,    -- text
etl_container       | --        CAST(REPLACE(subj.case_id, 'p', '') AS INTEGER) AS subject_id, -- int
etl_container       | --        CAST(sign.start AS TIMESTAMP)          AS start_datetime,
etl_container       | --        CAST(sign.end AS TIMESTAMP)            AS end_datetime,
etl_container       | --        --
etl_container       | --        'poc_3_header'                                  AS load_table_id,
etl_container       | --        0                                               AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','reference_id'],
etl_container       | --                ARRAY[case_id::text,short_reference_id::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM wf_header_mimic subj
etl_container       | --          INNER JOIN (
etl_container       | --                         SELECT case_id,
etl_container       | --                                MIN(date_time) AS start,
etl_container       | --                                MAX(date_time) AS end
etl_container       | --                         FROM ecgmx_041_mimic GROUP BY case_id
etl_container       | --                     ) sign ON subj.case_id = sign.case_id
etl_container       | -- ;
etl_container       | 
etl_container       | -- -- Chunk 1
etl_container       | -- -- 25-second interval, mass data
etl_container       | 
etl_container       | -- INSERT INTO src_waveform_mx_3
etl_container       | -- SELECT src.case_id                      AS case_id, -- FK to the header
etl_container       | --        src.segment_name                 AS segment_name,
etl_container       | --        --
etl_container       | --        CAST(src.date_time AS TIMESTAMP) AS mx_datetime,
etl_container       | --        src.src_name                     AS source_code,
etl_container       | --        CAST(src.value AS NUMERIC)       AS value_as_number,
etl_container       | --        src.unit_concept_name            AS unit_source_value,
etl_container       | --        'csv'                            AS visit_detail___source,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___start_from_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___report_minutes,
etl_container       | --        CAST(NULL AS INTEGER)            AS visit_detail___sumarize_minutes,
etl_container       | --        'NONE'                           AS visit_detail___method,
etl_container       | --        --
etl_container       | --        'poc_3_chunk_1'                  AS load_table_id,
etl_container       | --        row_number() OVER()                     AS load_row_id,
etl_container       | --        json_object(
etl_container       | --                ARRAY['case_id','date_time', 'src_name'],
etl_container       | --                ARRAY[case_id::text,date_time::text, src_name::text]
etl_container       | --            )          AS trace_id
etl_container       | -- FROM ecgmx_041_mimic src
etl_container       | --          INNER JOIN
etl_container       | --      mimiciv_hosp.patients pat
etl_container       | --      ON CAST(REPLACE(src.case_id, 'p', '') AS INTEGER) = pat.subject_id -- filter out mass data in demo dataset
etl_container       | -- ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS voc_concept;
etl_container       | CREATE TABLE voc_concept AS
etl_container       | SELECT * FROM concept
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_relationship;
etl_container       | CREATE TABLE voc_concept_relationship AS
etl_container       | SELECT * FROM concept_relationship
postgres_container  | 2024-11-04 18:48:19.361 UTC [8620] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:48:29.801 UTC [8631] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:48:29.801 UTC [8631] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:48:29.960 UTC [26] LOG:  checkpoint complete: wrote 2089 buffers (12.8%); 0 WAL file(s) added, 7 removed, 31 recycled; write=19.537 s, sync=1.854 s, total=23.276 s; sync files=563, longest=0.722 s, average=0.004 s; distance=614464 kB, estimate=614464 kB; lsn=19/FB115980, redo lsn=19/DB4128B8
postgres_container  | 2024-11-04 18:48:29.961 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 18:48:29.961 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:48:29.961 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:48:42.874 UTC [8642] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:48:42.874 UTC [8642] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:49:02.275 UTC [8654] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:49:02.275 UTC [8654] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:49:33.731 UTC [8665] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:49:33.731 UTC [8665] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:49:33.760 UTC [26] LOG:  checkpoint complete: wrote 408 buffers (2.5%); 0 WAL file(s) added, 6 removed, 30 recycled; write=60.981 s, sync=1.692 s, total=63.800 s; sync files=531, longest=0.317 s, average=0.004 s; distance=590884 kB, estimate=612106 kB; lsn=1A/20BE5368, redo lsn=19/FF51BB50
postgres_container  | 2024-11-04 18:49:33.761 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:50:29.629 UTC [8677] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:50:29.629 UTC [8677] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:51:34.483 UTC [8689] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:51:34.483 UTC [8689] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:52:40.468 UTC [8701] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:52:40.468 UTC [8701] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:52:41.165 UTC [26] LOG:  checkpoint complete: wrote 3020 buffers (18.4%); 0 WAL file(s) added, 7 removed, 29 recycled; write=183.801 s, sync=1.889 s, total=187.405 s; sync files=548, longest=0.548 s, average=0.004 s; distance=593168 kB, estimate=610213 kB; lsn=1A/451CD300, redo lsn=1A/2385FB80
postgres_container  | 2024-11-04 18:52:41.166 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:53:45.297 UTC [8713] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:53:45.297 UTC [8713] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:54:50.098 UTC [8725] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:54:50.098 UTC [8725] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:55:55.904 UTC [8737] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:55:55.904 UTC [8737] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:55:55.993 UTC [26] LOG:  checkpoint complete: wrote 1344 buffers (8.2%); 0 WAL file(s) added, 7 removed, 29 recycled; write=192.169 s, sync=1.728 s, total=194.828 s; sync files=543, longest=0.371 s, average=0.004 s; distance=593542 kB, estimate=608546 kB; lsn=1A/699A2D98, redo lsn=1A/47C01558
postgres_container  | 2024-11-04 18:55:55.993 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:57:00.764 UTC [8749] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:57:00.764 UTC [8749] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:58:05.490 UTC [8762] ERROR:  relation "voc_concept" already exists
postgres_container  | 2024-11-04 18:58:05.490 UTC [8762] STATEMENT:  CREATE TABLE voc_concept AS
postgres_container  | 	SELECT * FROM concept
postgres_container  | 	;
postgres_container  | 2024-11-04 18:59:07.961 UTC [26] LOG:  checkpoint complete: wrote 1349 buffers (8.2%); 0 WAL file(s) added, 17 removed, 19 recycled; write=185.779 s, sync=4.733 s, total=191.968 s; sync files=612, longest=0.822 s, average=0.008 s; distance=593423 kB, estimate=607033 kB; lsn=1A/97400628, redo lsn=1A/6BF853A8
postgres_container  | 2024-11-04 18:59:07.962 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:59:24.411 UTC [26] LOG:  checkpoint complete: wrote 7068 buffers (43.1%); 0 WAL file(s) added, 21 removed, 28 recycled; write=11.708 s, sync=2.742 s, total=16.450 s; sync files=158, longest=0.485 s, average=0.018 s; distance=799450 kB, estimate=799450 kB; lsn=1A/BF400140, redo lsn=1A/9CC3BDD8
postgres_container  | 2024-11-04 18:59:24.412 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 18:59:24.412 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:59:24.412 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:59:37.911 UTC [26] LOG:  checkpoint complete: wrote 6988 buffers (42.7%); 0 WAL file(s) added, 11 removed, 30 recycled; write=9.490 s, sync=2.026 s, total=13.500 s; sync files=127, longest=1.278 s, average=0.016 s; distance=675270 kB, estimate=787032 kB; lsn=1A/E6CAF160, redo lsn=1A/C5FAD890
postgres_container  | 2024-11-04 18:59:37.912 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 18:59:37.912 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:59:38.326 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:59:39.245 UTC [8886] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 18:59:39.245 UTC [8886] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 18:59:54.720 UTC [26] LOG:  checkpoint complete: wrote 984 buffers (6.0%); 0 WAL file(s) added, 9 removed, 33 recycled; write=13.317 s, sync=1.352 s, total=16.808 s; sync files=233, longest=0.627 s, average=0.006 s; distance=682729 kB, estimate=776602 kB; lsn=1B/DD5D948, redo lsn=1A/EFA68038
postgres_container  | 2024-11-04 18:59:54.722 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 18:59:54.722 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 18:59:54.722 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 18:59:57.910 UTC [8907] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 18:59:57.910 UTC [8907] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_vocabulary;
etl_container       | CREATE TABLE voc_vocabulary AS
etl_container       | SELECT * FROM vocabulary
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:00:16.803 UTC [26] LOG:  checkpoint complete: wrote 1453 buffers (8.9%); 0 WAL file(s) added, 7 removed, 32 recycled; write=18.304 s, sync=2.041 s, total=22.082 s; sync files=275, longest=0.854 s, average=0.008 s; distance=632507 kB, estimate=762192 kB; lsn=1B/35A124E0, redo lsn=1B/16416DD0
postgres_container  | 2024-11-04 19:00:16.805 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 19:00:16.805 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:00:16.805 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:00:24.714 UTC [8920] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:00:24.714 UTC [8920] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:00:38.720 UTC [26] LOG:  checkpoint complete: wrote 5739 buffers (35.0%); 0 WAL file(s) added, 5 removed, 32 recycled; write=17.961 s, sync=1.740 s, total=21.915 s; sync files=309, longest=1.052 s, average=0.006 s; distance=609335 kB, estimate=746907 kB; lsn=1B/5A875038, redo lsn=1B/3B724B88
postgres_container  | 2024-11-04 19:00:38.721 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 19:00:38.721 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:00:38.721 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:00:57.491 UTC [26] LOG:  checkpoint complete: wrote 5195 buffers (31.7%); 0 WAL file(s) added, 5 removed, 31 recycled; write=9.087 s, sync=4.143 s, total=18.771 s; sync files=115, longest=1.145 s, average=0.037 s; distance=589479 kB, estimate=731164 kB; lsn=1B/7F400768, redo lsn=1B/5F6CEAD8
postgres_container  | 2024-11-04 19:00:57.492 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 19:00:57.492 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:00:57.492 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:01:14.931 UTC [26] LOG:  checkpoint complete: wrote 6305 buffers (38.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=13.165 s, sync=2.004 s, total=17.439 s; sync files=69, longest=0.937 s, average=0.030 s; distance=692275 kB, estimate=727275 kB; lsn=1B/A940ACB0, redo lsn=1B/89ADB778
postgres_container  | 2024-11-04 19:01:14.931 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:01:14.931 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:01:14.931 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:01:25.816 UTC [8933] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:01:25.816 UTC [8933] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
etl_container       | ;
etl_container       | -- not affected by custom mapping
etl_container       | DROP TABLE IF EXISTS voc_domain;
etl_container       | CREATE TABLE voc_domain AS
etl_container       | SELECT * FROM domain
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_class;
etl_container       | CREATE TABLE voc_concept_class AS
etl_container       | SELECT * FROM concept_class
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_relationship;
etl_container       | CREATE TABLE voc_relationship AS
etl_container       | SELECT * FROM relationship
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_synonym;
etl_container       | CREATE TABLE voc_concept_synonym AS
etl_container       | SELECT * FROM concept_synonym
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_concept_ancestor;
etl_container       | CREATE TABLE voc_concept_ancestor AS
etl_container       | SELECT * FROM concept_ancestor
etl_container       | ;
etl_container       | DROP TABLE IF EXISTS voc_drug_strength;
etl_container       | CREATE TABLE voc_drug_strength AS
etl_container       | SELECT * FROM drug_strength
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | DROP TABLE IF EXISTS cdm_location;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |     location_id           INTEGER     NOT NULL ,
etl_container       |     address_1             text             ,
etl_container       |     address_2             text             ,
etl_container       |     city                  text             ,
etl_container       |     STATE                 text             ,
etl_container       |     zip                   text             ,
etl_container       |     county                text             ,
etl_container       |     location_source_value text             ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO cdm_location
etl_container       | SELECT 1                      AS location_id,
etl_container       |        CAST(NULL AS text)   AS address_1,
etl_container       |        CAST(NULL AS text)   AS address_2,
etl_container       |        CAST(NULL AS text)   AS city,
etl_container       |        'MA'                   AS state,
etl_container       |        CAST(NULL AS text)   AS zip,
etl_container       |        CAST(NULL AS text)   AS county,
etl_container       |        'Beth Israel Hospital' AS location_source_value,
etl_container       |        --
etl_container       |        'location.null'        AS unit_id,
etl_container       |        'null'                 AS load_table_id,
etl_container       |        0                      AS load_row_id,
etl_container       |        CAST(NULL AS text)   AS trace_id
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE lk_trans_careunit_clean AS
etl_container       | SELECT src.careunit      AS source_code,
etl_container       |        src.load_table_id AS load_table_id,
etl_container       |        0                 AS load_row_id,
etl_container       |     --    MIN(src.trace_id) AS trace_id
etl_container       |     MIN(src.trace_id::text) AS trace_id
etl_container       | FROM src_transfers src
etl_container       | WHERE src.careunit IS NOT NULL
etl_container       | GROUP BY careunit,
etl_container       |          load_table_id
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_care_site
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_care_site;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |     care_site_id                  INTEGER       NOT NULL ,
etl_container       |     care_site_name                text               ,
etl_container       |     place_of_service_concept_id   INTEGER                ,
etl_container       |     location_id                   INTEGER                ,
etl_container       |     care_site_source_value        text               ,
etl_container       |     place_of_service_source_value text               ,
etl_container       |     --
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | Traceback (most recent call last):
etl_container       |   File "<string>", line 1, in <module>
etl_container       |   File "/opt/etl/src/etl/mimic.py", line 116, in mimic_etl
etl_container       |     orchestrate_sql_w_dependencies(base_etl_dir, stage_schema)
etl_container       |   File "/opt/etl/src/etl/common.py", line 345, in orchestrate_sql_w_dependencies
etl_container       |     execute_sql(
etl_container       |   File "/opt/etl/src/etl/common.py", line 151, in execute_sql
etl_container       |     c.execute(q)
etl_container       |   File "/usr/local/lib/python3.10/dist-packages/psycopg/cursor.py", line 737, in execute
etl_container       |     raise ex.with_traceback(None)
etl_container       | psycopg.errors.SyntaxError: syntax error at or near "SELECT"
etl_container       | LINE 2: SELECT row_number() OVER (ORDER BY random())                ...
etl_container       |         ^
etl_container       | INSERT INTO cdm_care_site
etl_container       | SELECT row_number() OVER ()          AS care_site_id,
etl_container       |        src.source_code       AS care_site_name,
etl_container       |        vc2.concept_id        AS place_of_service_concept_id,
etl_container       |        1                     AS location_id, -- hard-coded BIDMC
etl_container       |        src.source_code       AS care_site_source_value,
etl_container       |        src.source_code       AS place_of_service_source_value,
etl_container       |        'care_site.transfers' AS unit_id,
etl_container       |        src.load_table_id     AS load_table_id,
etl_container       |        src.load_row_id       AS load_row_id,
etl_container       |        src.trace_id          AS trace_id
etl_container       | FROM lk_trans_careunit_clean src
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc
etl_container       |      ON vc.concept_code = src.source_code
etl_container       |          AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship vcr
etl_container       |      ON vc.concept_id = vcr.concept_id_1
etl_container       |          AND vcr.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc2
etl_container       |      ON vc2.concept_id = vcr.concept_id_2
etl_container       |          AND vc2.standard_concept = 'S'
etl_container       |          AND vc2.invalid_reason IS NULL
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE tmp_subject_ethnicity AS
etl_container       | SELECT DISTINCT src.subject_id AS          subject_id,
etl_container       |         nth_value(src.ethnicity, 1) over (
etl_container       |         partition BY src.subject_id
etl_container       |         ORDER BY src.admittime ASC)     AS ethnicity_first
etl_container       | FROM src_admissions src
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- lk_pat_ethnicity_concept
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE lk_pat_ethnicity_concept AS
etl_container       | SELECT DISTINCT src.ethnicity_first AS source_code,
etl_container       |                 vc.concept_id       AS source_concept_id,
etl_container       |                 vc.vocabulary_id    AS source_vocabulary_id,
etl_container       |                 vc1.concept_id      AS target_concept_id,
etl_container       |                 vc1.vocabulary_id   AS target_vocabulary_id -- look here to distinguish Race and Ethnicity
etl_container       | FROM tmp_subject_ethnicity src
etl_container       |          LEFT JOIN
etl_container       |      -- gcpt_ethnicity_to_concept -> mimiciv_per_ethnicity
etl_container       |          voc_concept vc
etl_container       |      ON UPPER(vc.concept_code) = UPPER(src.ethnicity_first) -- do the custom mapping
etl_container       |          AND vc.domain_id IN ('Race', 'Ethnicity')
etl_container       |          LEFT JOIN
etl_container       |      voc_concept_relationship cr1
etl_container       |      ON cr1.concept_id_1 = vc.concept_id
etl_container       |          AND cr1.relationship_id = 'Maps to'
etl_container       |          LEFT JOIN
etl_container       |      voc_concept vc1
etl_container       |      ON cr1.concept_id_2 = vc1.concept_id
etl_container       |          AND vc1.invalid_reason IS NULL
etl_container       |          AND vc1.standard_concept = 'S'
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- cdm_person
etl_container       | -- -------------------------------------------------------------------
etl_container       | DROP TABLE IF EXISTS cdm_person;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |     person_id                   INTEGER     NOT NULL ,
etl_container       |     gender_concept_id           INTEGER     NOT NULL ,
etl_container       |     year_of_birth               INTEGER     NOT NULL ,
etl_container       |     month_of_birth              INTEGER              ,
etl_container       |     day_of_birth                INTEGER              ,
etl_container       |     birth_datetime              TIMESTAMP           ,
etl_container       |     race_concept_id             INTEGER     NOT NULL,
etl_container       |     ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |     location_id                 INTEGER              ,
etl_container       |     provider_id                 INTEGER              ,
etl_container       |     care_site_id                INTEGER              ,
etl_container       |     person_source_value         text             ,
etl_container       |     gender_source_value         text             ,
etl_container       |     gender_source_concept_id    INTEGER              ,
etl_container       |     race_source_value           text             ,
etl_container       |     race_source_concept_id      INTEGER              ,
etl_container       |     ethnicity_source_value      text             ,
etl_container       |     ethnicity_source_concept_id INTEGER              ,
etl_container       |     -- 
etl_container       |     unit_id                       text,
etl_container       |     load_table_id                 text,
etl_container       |     load_row_id                   INTEGER,
etl_container       |     trace_id                      text
etl_container       | )
etl_container       | ;
etl_container       | INSERT INTO 
etl_container       | SELECT row_number() OVER (ORDER BY random())                 AS person_id,
etl_container       |        CASE
etl_container       |            WHEN p.gender = 'F' THEN 8532 -- FEMALE
etl_container       |            WHEN p.gender = 'M' THEN 8507 -- MALE
etl_container       |            ELSE 0
etl_container       |            END                      AS gender_concept_id,
etl_container       |        p.anchor_year                AS year_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS month_of_birth,
etl_container       |        CAST(NULL AS INTEGER)        AS day_of_birth,
etl_container       |        CAST(NULL AS TIMESTAMP)      AS birth_datetime,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_concept_id,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.target_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_concept_id,
etl_container       |        CAST(NULL AS INTEGER)        AS location_id,
etl_container       |        CAST(NULL AS INTEGER)        AS provider_id,
etl_container       |        CAST(NULL AS INTEGER)        AS care_site_id,
etl_container       |        CAST(p.subject_id AS text) AS person_source_value,
etl_container       |        p.gender                     AS gender_source_value,
etl_container       |        0                            AS gender_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS race_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS race_source_concept_id,
etl_container       |        CASE
etl_container       |            WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                THEN eth.ethnicity_first
etl_container       |            ELSE NULL
etl_container       |            END                      AS ethnicity_source_value,
etl_container       |        COALESCE(
etl_container       |                CASE
etl_container       |                    WHEN map_eth.target_vocabulary_id = 'Ethnicity'
etl_container       |                        THEN map_eth.source_concept_id
etl_container       |                    ELSE NULL
etl_container       |                    END, 0)          AS ethnicity_source_concept_id,
etl_container       |        --
etl_container       |        'person.patients'            AS unit_id,
etl_container       |        p.load_table_id              AS load_table_id,
etl_container       |        p.load_row_id                AS load_row_id,
etl_container       |        p.trace_id                   AS trace_id
etl_container       | FROM src_patients p
etl_container       |          LEFT JOIN
etl_container       |      tmp_subject_ethnicity eth
etl_container       |      ON p.subject_id = eth.subject_id
etl_container       |          LEFT JOIN
etl_container       |      lk_pat_ethnicity_concept map_eth
etl_container       |      ON eth.ethnicity_first = map_eth.source_code
etl_container       | ;
etl_container       | Started etl pipeline for transforming the MIMIC dataset.
etl_container       | Populating staging area...
etl_container       | DROP SCHEMA IF EXISTS stage_omopcdm CASCADE;
etl_container       | CREATE SCHEMA stage_omopcdm;
etl_container       | CREATE VIEW stage_omopcdm.admissions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.admissions;
etl_container       | CREATE VIEW stage_omopcdm.patients AS 
etl_container       | SELECT * FROM  mimiciv_hosp.patients;
etl_container       | CREATE VIEW stage_omopcdm.diagnoses_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.diagnoses_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_diagnoses AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_diagnoses;
etl_container       | CREATE VIEW stage_omopcdm.procedures_icd AS 
etl_container       | SELECT * FROM  mimiciv_hosp.procedures_icd;
etl_container       | CREATE VIEW stage_omopcdm.d_icd_procedures AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_icd_procedures;
etl_container       | CREATE VIEW stage_omopcdm.labevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.labevents;
etl_container       | CREATE VIEW stage_omopcdm.microbiologyevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.microbiologyevents;
etl_container       | CREATE VIEW stage_omopcdm.prescriptions AS 
etl_container       | SELECT * FROM  mimiciv_hosp.prescriptions;
etl_container       | CREATE VIEW stage_omopcdm.transfers AS 
etl_container       | SELECT * FROM  mimiciv_hosp.transfers;
etl_container       | CREATE VIEW stage_omopcdm.d_hcpcs AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_hcpcs;
etl_container       | CREATE VIEW stage_omopcdm.d_labitems AS 
etl_container       | SELECT * FROM  mimiciv_hosp.d_labitems;
etl_container       | CREATE VIEW stage_omopcdm.drgcodes AS 
etl_container       | SELECT * FROM  mimiciv_hosp.drgcodes;
etl_container       | CREATE VIEW stage_omopcdm.emar_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar_detail;
etl_container       | CREATE VIEW stage_omopcdm.emar AS 
etl_container       | SELECT * FROM  mimiciv_hosp.emar;
etl_container       | CREATE VIEW stage_omopcdm.hcpcsevents AS 
etl_container       | SELECT * FROM  mimiciv_hosp.hcpcsevents;
etl_container       | CREATE VIEW stage_omopcdm.omr AS 
etl_container       | SELECT * FROM  mimiciv_hosp.omr;
etl_container       | CREATE VIEW stage_omopcdm.pharmacy AS 
etl_container       | SELECT * FROM  mimiciv_hosp.pharmacy;
etl_container       | CREATE VIEW stage_omopcdm.poe_detail AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe_detail;
etl_container       | CREATE VIEW stage_omopcdm.poe AS 
etl_container       | SELECT * FROM  mimiciv_hosp.poe;
etl_container       | CREATE VIEW stage_omopcdm.provider AS 
etl_container       | SELECT * FROM  mimiciv_hosp.provider;
etl_container       | CREATE VIEW stage_omopcdm.services AS 
etl_container       | SELECT * FROM  mimiciv_hosp.services;
etl_container       | CREATE VIEW stage_omopcdm.icustays AS 
etl_container       | SELECT * FROM  mimiciv_icu.icustays;
etl_container       | CREATE VIEW stage_omopcdm.chartevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.chartevents;
etl_container       | CREATE VIEW stage_omopcdm.d_items AS 
etl_container       | SELECT * FROM  mimiciv_icu.d_items;
etl_container       | CREATE VIEW stage_omopcdm.procedureevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.procedureevents;
etl_container       | CREATE VIEW stage_omopcdm.inputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.inputevents;
etl_container       | CREATE VIEW stage_omopcdm.outputevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.outputevents;
etl_container       | CREATE VIEW stage_omopcdm.datetimeevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.datetimeevents;
etl_container       | CREATE VIEW stage_omopcdm.caregiver AS 
etl_container       | SELECT * FROM  mimiciv_icu.caregiver;
etl_container       | CREATE VIEW stage_omopcdm.ingredientevents AS 
etl_container       | SELECT * FROM  mimiciv_icu.ingredientevents;
etl_container       | CREATE VIEW stage_omopcdm.concept AS 
etl_container       | SELECT * FROM  vocabulary.concept;
etl_container       | CREATE VIEW stage_omopcdm.vocabulary AS 
etl_container       | SELECT * FROM  vocabulary.vocabulary;
etl_container       | CREATE VIEW stage_omopcdm.domain AS 
etl_container       | SELECT * FROM  vocabulary.domain;
etl_container       | CREATE VIEW stage_omopcdm.concept_class AS 
etl_container       | SELECT * FROM  vocabulary.concept_class;
etl_container       | CREATE VIEW stage_omopcdm.concept_relationship AS 
etl_container       | SELECT * FROM  vocabulary.concept_relationship;
etl_container       | CREATE VIEW stage_omopcdm.relationship AS 
etl_container       | SELECT * FROM  vocabulary.relationship;
etl_container       | CREATE VIEW stage_omopcdm.concept_synonym AS 
etl_container       | SELECT * FROM  vocabulary.concept_synonym;
etl_container       | CREATE VIEW stage_omopcdm.concept_ancestor AS 
etl_container       | SELECT * FROM  vocabulary.concept_ancestor;
etl_container       | CREATE VIEW stage_omopcdm.drug_strength AS 
etl_container       | SELECT * FROM  vocabulary.drug_strength;
etl_container       | Building MIMIC...
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE cdm_cohort_definition (
etl_container       |   cohort_definition_id            INTEGER       NOT NULL,
etl_container       |   cohort_definition_name          text      NOT NULL,
etl_container       |   cohort_definition_description   text              ,
etl_container       |   definition_type_concept_id      INTEGER       NOT NULL,
etl_container       |   cohort_definition_syntax        text              ,
etl_container       |   subject_concept_id              INTEGER       NOT NULL,
etl_container       |   cohort_initiation_date          DATE
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_attribute_definition (
etl_container       |   attribute_definition_id     INTEGER       NOT NULL,
etl_container       |   attribute_name              text      NOT NULL,
etl_container       |   attribute_description       text              ,
etl_container       |   attribute_type_concept_id   INTEGER       NOT NULL,
etl_container       |   attribute_syntax            text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cdm_source
etl_container       | (
etl_container       |   cdm_source_name                 text        NOT NULL ,
etl_container       |   cdm_source_abbreviation         text             ,
etl_container       |   cdm_holder                      text             ,
etl_container       |   source_description              text             ,
etl_container       |   source_documentation_reference  text             ,
etl_container       |   cdm_etl_reference               text             ,
etl_container       |   source_release_date             DATE               ,
etl_container       |   cdm_release_date                DATE               ,
etl_container       |   cdm_version                     text             ,
etl_container       |   vocabulary_version              text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_metadata
etl_container       | (
etl_container       |   metadata_concept_id       INTEGER       NOT NULL ,
etl_container       |   metadata_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   NAME                      text      NOT NULL ,
etl_container       |   value_as_text           text               ,
etl_container       |   value_as_concept_id       INTEGER                ,
etl_container       |   metadata_date             DATE                 ,
etl_container       |   metadata_datetime         TIMESTAMP
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_person
etl_container       | (
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   gender_concept_id           INTEGER     NOT NULL ,
etl_container       |   year_of_birth               INTEGER     NOT NULL ,
etl_container       |   month_of_birth              INTEGER              ,
etl_container       |   day_of_birth                INTEGER              ,
etl_container       |   birth_datetime              TIMESTAMP           ,
etl_container       |   race_concept_id             INTEGER     NOT NULL,
etl_container       |   ethnicity_concept_id        INTEGER     NOT NULL,
etl_container       |   location_id                 INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   care_site_id                INTEGER              ,
etl_container       |   person_source_value         text             ,
etl_container       |   gender_source_value         text             ,
etl_container       |   gender_source_concept_id    INTEGER              ,
etl_container       |   race_source_value           text             ,
etl_container       |   race_source_concept_id      INTEGER              ,
etl_container       |   ethnicity_source_value      text             ,
etl_container       |   ethnicity_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation_period
etl_container       | (
etl_container       |   observation_period_id             INTEGER   NOT NULL ,
etl_container       |   person_id                         INTEGER   NOT NULL ,
etl_container       |   observation_period_start_date     DATE    NOT NULL ,
etl_container       |   observation_period_end_date       DATE    NOT NULL ,
etl_container       |   period_type_concept_id            INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_specimen
etl_container       | (
etl_container       |   specimen_id                 INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   specimen_concept_id         INTEGER     NOT NULL ,
etl_container       |   specimen_type_concept_id    INTEGER     NOT NULL ,
etl_container       |   specimen_date               DATE      NOT NULL ,
etl_container       |   specimen_datetime           TIMESTAMP           ,
etl_container       |   quantity                    NUMERIC            ,
etl_container       |   unit_concept_id             INTEGER              ,
etl_container       |   anatomic_site_concept_id    INTEGER              ,
etl_container       |   disease_status_concept_id   INTEGER              ,
etl_container       |   specimen_source_id          text             ,
etl_container       |   specimen_source_value       text             ,
etl_container       |   unit_source_value           text             ,
etl_container       |   anatomic_site_source_value  text             ,
etl_container       |   disease_status_source_value text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_death
etl_container       | (
etl_container       |   person_id               INTEGER     NOT NULL ,
etl_container       |   death_date              DATE      NOT NULL ,
etl_container       |   death_datetime          TIMESTAMP           ,
etl_container       |   death_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   cause_concept_id        INTEGER              ,
etl_container       |   cause_source_value      text             ,
etl_container       |   cause_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_occurrence
etl_container       | (
etl_container       |   visit_occurrence_id           INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   visit_concept_id              INTEGER     NOT NULL ,
etl_container       |   visit_start_date              DATE      NOT NULL ,
etl_container       |   visit_start_datetime          TIMESTAMP           ,
etl_container       |   visit_end_date                DATE      NOT NULL ,
etl_container       |   visit_end_datetime            TIMESTAMP           ,
etl_container       |   visit_type_concept_id         INTEGER     NOT NULL ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   care_site_id                  INTEGER              ,
etl_container       |   visit_source_value            text             ,
etl_container       |   visit_source_concept_id       INTEGER              ,
etl_container       |   admitting_source_concept_id   INTEGER              ,
etl_container       |   admitting_source_value        text             ,
etl_container       |   discharge_to_concept_id       INTEGER              ,
etl_container       |   discharge_to_source_value     text             ,
etl_container       |   preceding_visit_occurrence_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_visit_detail
etl_container       | (
etl_container       |   visit_detail_id                    INTEGER     NOT NULL ,
etl_container       |   person_id                          INTEGER     NOT NULL ,
etl_container       |   visit_detail_concept_id            INTEGER     NOT NULL ,
etl_container       |   visit_detail_start_date            DATE      NOT NULL ,
etl_container       |   visit_detail_start_datetime        TIMESTAMP           ,
etl_container       |   visit_detail_end_date              DATE      NOT NULL ,
etl_container       |   visit_detail_end_datetime          TIMESTAMP           ,
etl_container       |   visit_detail_type_concept_id       INTEGER     NOT NULL ,
etl_container       |   provider_id                        INTEGER              ,
etl_container       |   care_site_id                       INTEGER              ,
etl_container       |   admitting_source_concept_id        INTEGER              ,
etl_container       |   discharge_to_concept_id            INTEGER              ,
etl_container       |   preceding_visit_detail_id          INTEGER              ,
etl_container       |   visit_detail_source_value          text             ,
etl_container       |   visit_detail_source_concept_id     INTEGER              ,
etl_container       |   admitting_source_value             text             ,
etl_container       |   discharge_to_source_value          text             ,
etl_container       |   visit_detail_parent_id             INTEGER              ,
etl_container       |   visit_occurrence_id                INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_procedure_occurrence
etl_container       | (
etl_container       |   procedure_occurrence_id     INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   procedure_concept_id        INTEGER     NOT NULL ,
etl_container       |   procedure_date              DATE      NOT NULL ,
etl_container       |   procedure_datetime          TIMESTAMP           ,
etl_container       |   procedure_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   modifier_concept_id         INTEGER              ,
etl_container       |   quantity                    INTEGER              ,
etl_container       |   provider_id                 INTEGER              ,
etl_container       |   visit_occurrence_id         INTEGER              ,
etl_container       |   visit_detail_id             INTEGER              ,
etl_container       |   procedure_source_value      text             ,
etl_container       |   procedure_source_concept_id INTEGER              ,
etl_container       |   modifier_source_value      text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_exposure
etl_container       | (
etl_container       |   drug_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                     INTEGER       NOT NULL ,
etl_container       |   drug_concept_id               INTEGER       NOT NULL ,
etl_container       |   drug_exposure_start_date      DATE        NOT NULL ,
etl_container       |   drug_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   drug_exposure_end_date        DATE        NOT NULL ,
etl_container       |   drug_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   verbatim_end_date             DATE                 ,
etl_container       |   drug_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   stop_reason                   text               ,
etl_container       |   refills                       INTEGER                ,
etl_container       |   quantity                      NUMERIC              ,
etl_container       |   days_supply                   INTEGER                ,
etl_container       |   sig                           text               ,
etl_container       |   route_concept_id              INTEGER                ,
etl_container       |   lot_number                    text               ,
etl_container       |   provider_id                   INTEGER                ,
etl_container       |   visit_occurrence_id           INTEGER                ,
etl_container       |   visit_detail_id               INTEGER                ,
etl_container       |   drug_source_value             text               ,
etl_container       |   drug_source_concept_id        INTEGER                ,
etl_container       |   route_source_value            text               ,
etl_container       |   dose_unit_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_device_exposure
etl_container       | (
etl_container       |   device_exposure_id              INTEGER       NOT NULL ,
etl_container       |   person_id                       INTEGER       NOT NULL ,
etl_container       |   device_concept_id               INTEGER       NOT NULL ,
etl_container       |   device_exposure_start_date      DATE        NOT NULL ,
etl_container       |   device_exposure_start_datetime  TIMESTAMP             ,
etl_container       |   device_exposure_end_date        DATE                 ,
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:01:36.815 UTC [26] LOG:  checkpoint complete: wrote 4525 buffers (27.6%); 0 WAL file(s) added, 13 removed, 28 recycled; write=15.254 s, sync=3.811 s, total=21.884 s; sync files=227, longest=0.844 s, average=0.017 s; distance=664804 kB, estimate=721028 kB; lsn=1B/D5B5F080, redo lsn=1B/B24148F8
postgres_container  | 2024-11-04 19:01:36.815 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 19:01:36.815 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:01:36.842 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:01:51.585 UTC [26] LOG:  checkpoint complete: wrote 7331 buffers (44.7%); 0 WAL file(s) added, 14 removed, 32 recycled; write=9.959 s, sync=2.004 s, total=14.770 s; sync files=73, longest=1.784 s, average=0.028 s; distance=759392 kB, estimate=759392 kB; lsn=1B/FFEED060, redo lsn=1B/E09AC928
postgres_container  | 2024-11-04 19:01:51.586 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:01:51.586 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:01:51.586 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:02:09.122 UTC [26] LOG:  checkpoint complete: wrote 266 buffers (1.6%); 0 WAL file(s) added, 14 removed, 30 recycled; write=11.112 s, sync=2.327 s, total=17.537 s; sync files=41, longest=1.159 s, average=0.057 s; distance=722245 kB, estimate=755677 kB; lsn=1C/2D0B8FA0, redo lsn=1C/CAFDEC8
postgres_container  | 2024-11-04 19:02:09.122 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:02:09.122 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:02:09.123 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:02:29.508 UTC [8946] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:02:29.508 UTC [8946] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:03:55.613 UTC [26] LOG:  checkpoint complete: wrote 1011 buffers (6.2%); 0 WAL file(s) added, 15 removed, 29 recycled; write=57.017 s, sync=19.592 s, total=106.491 s; sync files=226, longest=6.546 s, average=0.087 s; distance=718828 kB, estimate=751992 kB; lsn=1C/5A3B68B0, redo lsn=1C/388F9140
postgres_container  | 2024-11-04 19:03:55.614 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:04:49.915 UTC [26] LOG:  checkpoint complete: wrote 8687 buffers (53.0%); 0 WAL file(s) added, 15 removed, 32 recycled; write=42.095 s, sync=2.973 s, total=54.301 s; sync files=104, longest=1.274 s, average=0.029 s; distance=764772 kB, estimate=764772 kB; lsn=1C/864FED58, redo lsn=1C/673D2380
postgres_container  | 2024-11-04 19:04:49.915 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:05:03.238 UTC [8961] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:05:03.238 UTC [8961] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:05:27.532 UTC [26] LOG:  checkpoint complete: wrote 5270 buffers (32.2%); 0 WAL file(s) added, 23 removed, 24 recycled; write=16.789 s, sync=10.246 s, total=37.618 s; sync files=212, longest=3.085 s, average=0.049 s; distance=777035 kB, estimate=777035 kB; lsn=1C/BDDCC750, redo lsn=1C/96AA5340
postgres_container  | 2024-11-04 19:05:27.553 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:06:03.258 UTC [26] LOG:  checkpoint complete: wrote 8320 buffers (50.8%); 0 WAL file(s) added, 22 removed, 33 recycled; write=21.725 s, sync=1.005 s, total=35.725 s; sync files=70, longest=0.851 s, average=0.015 s; distance=896955 kB, estimate=896955 kB; lsn=1C/EB77D708, redo lsn=1C/CD6940E0
postgres_container  | 2024-11-04 19:06:03.467 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:06:31.158 UTC [8974] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:06:31.158 UTC [8974] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
etl_container       |   device_exposure_end_datetime    TIMESTAMP             ,
etl_container       |   device_type_concept_id          INTEGER       NOT NULL ,
etl_container       |   unique_device_id                text               ,
etl_container       |   quantity                        INTEGER                ,
etl_container       |   provider_id                     INTEGER                ,
etl_container       |   visit_occurrence_id             INTEGER                ,
etl_container       |   visit_detail_id                 INTEGER                ,
etl_container       |   device_source_value             text               ,
etl_container       |   device_source_concept_id        INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_occurrence
etl_container       | (
etl_container       |   condition_occurrence_id       INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   condition_concept_id          INTEGER     NOT NULL ,
etl_container       |   condition_start_date          DATE      NOT NULL ,
etl_container       |   condition_start_datetime      TIMESTAMP           ,
etl_container       |   condition_end_date            DATE               ,
etl_container       |   condition_end_datetime        TIMESTAMP           ,
etl_container       |   condition_type_concept_id     INTEGER     NOT NULL ,
etl_container       |   stop_reason                   text             ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   condition_source_value        text             ,
etl_container       |   condition_source_concept_id   INTEGER              ,
etl_container       |   condition_status_source_value text             ,
etl_container       |   condition_status_concept_id   INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_measurement
etl_container       | (
etl_container       |   measurement_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   measurement_concept_id        INTEGER     NOT NULL ,
etl_container       |   measurement_date              DATE      NOT NULL ,
etl_container       |   measurement_datetime          TIMESTAMP           ,
etl_container       |   measurement_time              text             ,
etl_container       |   measurement_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   operator_concept_id           INTEGER              ,
etl_container       |   value_as_number               NUMERIC            ,
etl_container       |   value_as_concept_id           INTEGER              ,
etl_container       |   unit_concept_id               INTEGER              ,
etl_container       |   range_low                     NUMERIC            ,
etl_container       |   range_high                    NUMERIC            ,
etl_container       |   provider_id                   INTEGER              ,
etl_container       |   visit_occurrence_id           INTEGER              ,
etl_container       |   visit_detail_id               INTEGER              ,
etl_container       |   measurement_source_value      text             ,
etl_container       |   measurement_source_concept_id INTEGER              ,
etl_container       |   unit_source_value             text             ,
etl_container       |   value_source_value            text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_note
etl_container       | (
etl_container       |   note_id               INTEGER       NOT NULL ,
etl_container       |   person_id             INTEGER       NOT NULL ,
etl_container       |   note_date             DATE        NOT NULL ,
etl_container       |   note_datetime         TIMESTAMP             ,
etl_container       |   note_type_concept_id  INTEGER       NOT NULL ,
etl_container       |   note_class_concept_id INTEGER       NOT NULL ,
etl_container       |   note_title            text               ,
etl_container       |   note_text             text               ,
etl_container       |   encoding_concept_id   INTEGER       NOT NULL ,
etl_container       |   language_concept_id   INTEGER       NOT NULL ,
etl_container       |   provider_id           INTEGER                ,
etl_container       |   visit_occurrence_id   INTEGER                ,
etl_container       |   visit_detail_id       INTEGER                ,
etl_container       |   note_source_value     text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_note_nlp
etl_container       | (
etl_container       |   note_nlp_id                 INTEGER                ,
etl_container       |   note_id                     INTEGER                ,
etl_container       |   section_concept_id          INTEGER                ,
etl_container       |   snippet                     text               ,
etl_container       |   "OFFSET"                      text               ,
etl_container       |   lexical_variant             text      NOT NULL ,
etl_container       |   note_nlp_concept_id         INTEGER                ,
etl_container       |   note_nlp_source_concept_id  INTEGER                ,
etl_container       |   nlp_system                  text               ,
etl_container       |   nlp_date                    DATE        NOT NULL ,
etl_container       |   nlp_datetime                TIMESTAMP             ,
etl_container       |   term_exists                 text               ,
etl_container       |   term_temporal               text               ,
etl_container       |   term_modifiers              text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_observation
etl_container       | (
etl_container       |   observation_id                INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   observation_concept_id        INTEGER     NOT NULL ,
etl_container       |   observation_date              DATE      NOT NULL ,
etl_container       |   observation_datetime          TIMESTAMP           ,
etl_container       |   observation_type_concept_id   INTEGER     NOT NULL ,
etl_container       |   value_as_number               NUMERIC        ,
etl_container       |   value_as_text               text         ,
etl_container       |   value_as_concept_id           INTEGER          ,
etl_container       |   qualifier_concept_id          INTEGER          ,
etl_container       |   unit_concept_id               INTEGER          ,
etl_container       |   provider_id                   INTEGER          ,
etl_container       |   visit_occurrence_id           INTEGER          ,
etl_container       |   visit_detail_id               INTEGER          ,
etl_container       |   observation_source_value      text         ,
etl_container       |   observation_source_concept_id INTEGER          ,
etl_container       |   unit_source_value             text         ,
etl_container       |   qualifier_source_value        text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_fact_relationship
etl_container       | (
etl_container       |   domain_concept_id_1     INTEGER     NOT NULL ,
etl_container       |   fact_id_1               INTEGER     NOT NULL ,
etl_container       |   domain_concept_id_2     INTEGER     NOT NULL ,
etl_container       |   fact_id_2               INTEGER     NOT NULL ,
etl_container       |   relationship_concept_id INTEGER     NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_location
etl_container       | (
etl_container       |   location_id           INTEGER     NOT NULL ,
etl_container       |   address_1             text             ,
etl_container       |   address_2             text             ,
etl_container       |   city                  text             ,
etl_container       |   STATE                 text             ,
etl_container       |   zip                   text             ,
etl_container       |   county                text             ,
etl_container       |   location_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_care_site
etl_container       | (
etl_container       |   care_site_id                  INTEGER       NOT NULL ,
etl_container       |   care_site_name                text               ,
etl_container       |   place_of_service_concept_id   INTEGER                ,
etl_container       |   location_id                   INTEGER                ,
etl_container       |   care_site_source_value        text               ,
etl_container       |   place_of_service_source_value text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_provider
etl_container       | (
etl_container       |   provider_id                 INTEGER       NOT NULL ,
etl_container       |   provider_name               text               ,
etl_container       |   npi                         text               ,
etl_container       |   dea                         text               ,
etl_container       |   specialty_concept_id        INTEGER                ,
etl_container       |   care_site_id                INTEGER                ,
etl_container       |   year_of_birth               INTEGER                ,
etl_container       |   gender_concept_id           INTEGER                ,
etl_container       |   provider_source_value       text               ,
etl_container       |   specialty_source_value      text               ,
etl_container       |   specialty_source_concept_id INTEGER                ,
etl_container       |   gender_source_value         text               ,
etl_container       |   gender_source_concept_id    INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_payer_plan_period
etl_container       | (
etl_container       |   payer_plan_period_id          INTEGER     NOT NULL ,
etl_container       |   person_id                     INTEGER     NOT NULL ,
etl_container       |   payer_plan_period_start_date  DATE      NOT NULL ,
etl_container       |   payer_plan_period_end_date    DATE      NOT NULL ,
etl_container       |   payer_concept_id              INTEGER              ,
etl_container       |   payer_source_value            text             ,
etl_container       |   payer_source_concept_id       INTEGER              ,
etl_container       |   plan_concept_id               INTEGER              ,
etl_container       |   plan_source_value             text             ,
etl_container       |   plan_source_concept_id        INTEGER              ,
etl_container       |   sponsor_concept_id            INTEGER              ,
etl_container       |   sponsor_source_value          text             ,
etl_container       |   sponsor_source_concept_id     INTEGER              ,
etl_container       |   family_source_value           text             ,
etl_container       |   stop_reason_concept_id        INTEGER              ,
etl_container       |   stop_reason_source_value      text             ,
etl_container       |   stop_reason_source_concept_id INTEGER
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE cdm_cost
etl_container       | (
etl_container       |   cost_id                   INTEGER     NOT NULL ,
etl_container       |   cost_event_id             INTEGER     NOT NULL ,
etl_container       |   cost_domain_id            text    NOT NULL ,
etl_container       |   cost_type_concept_id      INTEGER     NOT NULL ,
etl_container       |   currency_concept_id       INTEGER              ,
etl_container       |   total_charge              NUMERIC            ,
etl_container       |   total_cost                NUMERIC            ,
etl_container       |   total_paid                NUMERIC            ,
etl_container       |   paid_by_payer             NUMERIC            ,
etl_container       |   paid_by_patient           NUMERIC            ,
etl_container       |   paid_patient_copay        NUMERIC            ,
etl_container       |   paid_patient_coinsurance  NUMERIC            ,
etl_container       |   paid_patient_deductible   NUMERIC            ,
etl_container       |   paid_by_primary           NUMERIC            ,
etl_container       |   paid_ingredient_cost      NUMERIC            ,
etl_container       |   paid_dispensing_fee       NUMERIC            ,
etl_container       |   payer_plan_period_id      INTEGER              ,
etl_container       |   amount_allowed            NUMERIC            ,
etl_container       |   revenue_code_concept_id   INTEGER              ,
etl_container       |   revenue_code_source_value  text            ,
etl_container       |   drg_concept_id            INTEGER              ,
etl_container       |   drg_source_value          text
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort
etl_container       | (
etl_container       |   cohort_definition_id  INTEGER   NOT NULL ,
etl_container       |   subject_id            INTEGER   NOT NULL ,
etl_container       |   cohort_start_date     DATE      NOT NULL ,
etl_container       |   cohort_end_date       DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(subject_id)
etl_container       | CREATE TABLE cdm_cohort_attribute
etl_container       | (
etl_container       |   cohort_definition_id    INTEGER     NOT NULL ,
etl_container       |   subject_id              INTEGER     NOT NULL ,
etl_container       |   cohort_start_date       DATE      NOT NULL ,
etl_container       |   cohort_end_date         DATE      NOT NULL ,
etl_container       |   attribute_definition_id INTEGER     NOT NULL ,
etl_container       |   value_as_number         NUMERIC            ,
etl_container       |   value_as_concept_id     INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_drug_era
etl_container       | (
etl_container       |   drug_era_id         INTEGER     NOT NULL ,
etl_container       |   person_id           INTEGER     NOT NULL ,
etl_container       |   drug_concept_id     INTEGER     NOT NULL ,
etl_container       |   drug_era_start_date DATE      NOT NULL ,
etl_container       |   drug_era_end_date   DATE      NOT NULL ,
etl_container       |   drug_exposure_count INTEGER              ,
etl_container       |   gap_days            INTEGER
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_dose_era
etl_container       | (
etl_container       |   dose_era_id           INTEGER     NOT NULL ,
etl_container       |   person_id             INTEGER     NOT NULL ,
etl_container       |   drug_concept_id       INTEGER     NOT NULL ,
etl_container       |   unit_concept_id       INTEGER     NOT NULL ,
etl_container       |   dose_value            NUMERIC   NOT NULL ,
etl_container       |   dose_era_start_date   DATE      NOT NULL ,
etl_container       |   dose_era_end_date     DATE      NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | --HINT DISTRIBUTE_ON_KEY(person_id)
etl_container       | CREATE TABLE cdm_condition_era
etl_container       | (
etl_container       |   condition_era_id            INTEGER     NOT NULL ,
etl_container       |   person_id                   INTEGER     NOT NULL ,
etl_container       |   condition_concept_id        INTEGER     NOT NULL ,
etl_container       |   condition_era_start_date    DATE      NOT NULL ,
etl_container       |   condition_era_end_date      DATE      NOT NULL ,
etl_container       |   condition_occurrence_count  INTEGER
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE voc_concept (
etl_container       |   concept_id          INTEGER       NOT NULL ,
etl_container       |   concept_name        text      NOT NULL ,
etl_container       |   domain_id           text      NOT NULL ,
etl_container       |   vocabulary_id       text      NOT NULL ,
etl_container       |   concept_class_id    text      NOT NULL ,
etl_container       |   standard_concept    text               ,
etl_container       |   concept_code        text      NOT NULL ,
etl_container       |   valid_start_DATE    DATE        NOT NULL ,
etl_container       |   valid_end_DATE      DATE        NOT NULL ,
etl_container       |   invalid_reason      text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_vocabulary (
etl_container       |   vocabulary_id         text      NOT NULL,
etl_container       |   vocabulary_name       text      NOT NULL,
etl_container       |   vocabulary_reference  text      NOT NULL,
etl_container       |   vocabulary_version    text              ,
etl_container       |   vocabulary_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_domain (
etl_container       |   domain_id         text      NOT NULL,
etl_container       |   domain_name       text      NOT NULL,
etl_container       |   domain_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_class (
etl_container       |   concept_class_id          text      NOT NULL,
etl_container       |   concept_class_name        text      NOT NULL,
etl_container       |   concept_class_concept_id  INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_relationship (
etl_container       |   concept_id_1      INTEGER     NOT NULL,
etl_container       |   concept_id_2      INTEGER     NOT NULL,
etl_container       |   relationship_id   text    NOT NULL,
etl_container       |   valid_start_DATE  DATE      NOT NULL,
etl_container       |   valid_end_DATE    DATE      NOT NULL,
etl_container       |   invalid_reason    text
etl_container       |   )
etl_container       | ;
etl_container       | CREATE TABLE voc_relationship (
etl_container       |   relationship_id         text      NOT NULL,
etl_container       |   relationship_name       text      NOT NULL,
etl_container       |   is_hierarchical         text      NOT NULL,
etl_container       |   defines_ancestry        text      NOT NULL,
etl_container       |   reverse_relationship_id text      NOT NULL,
etl_container       |   relationship_concept_id INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_synonym (
etl_container       |   concept_id            INTEGER       NOT NULL,
etl_container       |   concept_synonym_name  text      NOT NULL,
etl_container       |   language_concept_id   INTEGER       NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_concept_ancestor (
etl_container       |   ancestor_concept_id       INTEGER   NOT NULL,
etl_container       |   descendant_concept_id     INTEGER   NOT NULL,
etl_container       |   min_levels_of_separation  INTEGER   NOT NULL,
etl_container       |   max_levels_of_separation  INTEGER   NOT NULL
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_source_to_concept_map (
etl_container       |   source_code             text      NOT NULL,
etl_container       |   source_concept_id       INTEGER       NOT NULL,
etl_container       |   source_vocabulary_id    text      NOT NULL,
etl_container       |   source_code_description text              ,
etl_container       |   target_concept_id       INTEGER       NOT NULL,
etl_container       |   target_vocabulary_id    text      NOT NULL,
etl_container       |   valid_start_DATE        DATE        NOT NULL,
etl_container       |   valid_end_DATE          DATE        NOT NULL,
etl_container       |   invalid_reason          text
etl_container       | )
etl_container       | ;
etl_container       | CREATE TABLE voc_drug_strength (
etl_container       |   drug_concept_id             INTEGER     NOT NULL,
etl_container       |   ingredient_concept_id       INTEGER     NOT NULL,
etl_container       |   amount_value                NUMERIC           ,
etl_container       |   amount_unit_concept_id      INTEGER             ,
etl_container       |   numerator_value             NUMERIC           ,
etl_container       |   numerator_unit_concept_id   INTEGER             ,
etl_container       |   denominator_value           NUMERIC           ,
etl_container       |   denominator_unit_concept_id INTEGER             ,
etl_container       |   box_size                    INTEGER             ,
etl_container       |   valid_start_DATE            DATE       NOT NULL,
etl_container       |   valid_end_DATE              DATE       NOT NULL,
etl_container       |   invalid_reason              text
etl_container       | )
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:06:31.864 UTC [26] LOG:  checkpoint complete: wrote 718 buffers (4.4%); 0 WAL file(s) added, 12 removed, 33 recycled; write=19.514 s, sync=3.067 s, total=28.605 s; sync files=91, longest=1.974 s, average=0.034 s; distance=737428 kB, estimate=881002 kB; lsn=1D/18F30278, redo lsn=1C/FA6B9438
postgres_container  | 2024-11-04 19:06:31.864 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 19:06:31.864 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:06:31.864 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:06:56.272 UTC [26] LOG:  checkpoint complete: wrote 105 buffers (0.6%); 0 WAL file(s) added, 8 removed, 31 recycled; write=13.438 s, sync=3.822 s, total=24.408 s; sync files=201, longest=2.636 s, average=0.020 s; distance=647826 kB, estimate=857685 kB; lsn=1D/415CE0D8, redo lsn=1D/21F5DED0
postgres_container  | 2024-11-04 19:06:56.273 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 19:06:56.273 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:06:56.273 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:07:11.598 UTC [26] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 11 removed, 32 recycled; write=12.108 s, sync=0.990 s, total=15.326 s; sync files=71, longest=0.572 s, average=0.014 s; distance=702292 kB, estimate=842145 kB; lsn=1D/6BCD21E0, redo lsn=1D/4CD330B0
postgres_container  | 2024-11-04 19:07:11.599 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:07:11.599 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:07:11.599 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:07:20.908 UTC [8987] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:07:20.908 UTC [8987] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:07:26.425 UTC [26] LOG:  checkpoint complete: wrote 2631 buffers (16.1%); 0 WAL file(s) added, 13 removed, 30 recycled; write=12.667 s, sync=1.106 s, total=14.827 s; sync files=196, longest=0.055 s, average=0.006 s; distance=702917 kB, estimate=828223 kB; lsn=1D/984D0B60, redo lsn=1D/77BA4580
postgres_container  | 2024-11-04 19:07:26.425 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:07:26.425 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:07:26.426 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:07:37.532 UTC [26] LOG:  checkpoint complete: wrote 3889 buffers (23.7%); 0 WAL file(s) added, 5 removed, 31 recycled; write=7.671 s, sync=1.475 s, total=11.107 s; sync files=85, longest=0.869 s, average=0.018 s; distance=589297 kB, estimate=804330 kB; lsn=1D/BB187750, redo lsn=1D/9BB20D18
postgres_container  | 2024-11-04 19:07:37.533 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:07:37.533 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:07:37.577 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:07:49.943 UTC [26] LOG:  checkpoint complete: wrote 4572 buffers (27.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=9.442 s, sync=0.879 s, total=12.410 s; sync files=42, longest=0.457 s, average=0.021 s; distance=674093 kB, estimate=791306 kB; lsn=1D/E4D2BB78, redo lsn=1D/C4D6C208
postgres_container  | 2024-11-04 19:07:49.943 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:07:49.943 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:07:49.943 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:07:55.069 UTC [8999] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:07:55.069 UTC [8999] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
etl_container       | CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
etl_container       | CREATE EXTENSION IF NOT EXISTS "pgcrypto";
etl_container       | CREATE TABLE src_patients AS
etl_container       | SELECT subject_id                        AS subject_id,
etl_container       |        anchor_year                       AS anchor_year,
etl_container       |        anchor_age                        AS anchor_age,
etl_container       |        anchor_year_group                 AS anchor_year_group,
etl_container       |        gender                            AS gender,
etl_container       |        --
etl_container       |        'patients'                        AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id'],
etl_container       |                ARRAY[subject_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.patients
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_admissions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_admissions AS
etl_container       | SELECT hadm_id            AS hadm_id,   -- PK
etl_container       |        subject_id         AS subject_id,
etl_container       |        admittime          AS admittime,
etl_container       |        dischtime          AS dischtime,
etl_container       |        deathtime          AS deathtime,
etl_container       |        admission_type     AS admission_type,
etl_container       |        admission_location AS admission_location,
etl_container       |        discharge_location AS discharge_location,
etl_container       |        race               AS ethnicity, -- MIMIC IV 2.0 change, field race replaced field ethnicity
etl_container       |        edregtime          AS edregtime,
etl_container       |        insurance          AS insurance,
etl_container       |        marital_status     AS marital_status, LANGUAGE AS LANGUAGE,
etl_container       |        -- edouttime
etl_container       |        -- hospital_expire_flag
etl_container       |        --
etl_container       |     'admissions' AS load_table_id,
etl_container       |     row_number() OVER() AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.admissions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_transfers
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_transfers AS
etl_container       | SELECT transfer_id                       AS transfer_id,
etl_container       |        hadm_id                           AS hadm_id,
etl_container       |        subject_id                        AS subject_id,
etl_container       |        careunit                          AS careunit,
etl_container       |        intime                            AS intime,
etl_container       |        outtime                           AS outtime,
etl_container       |        eventtype                         AS eventtype,
etl_container       |        --
etl_container       |        'transfers'                       AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'transfer_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfer_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.transfers
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_diagnoses_icd AS
etl_container       | SELECT subject_id      AS subject_id,
etl_container       |        hadm_id         AS hadm_id,
etl_container       |        seq_num         AS seq_num,
etl_container       |        icd_code        AS icd_code,
etl_container       |        icd_version     AS icd_version,
etl_container       |        --
etl_container       |        'diagnoses_icd' AS load_table_id,
etl_container       |        row_number() OVER()    AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['hadm_id','seq_num'],
etl_container       |                ARRAY[hadm_id::text,seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.diagnoses_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Measurement
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_services
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_services AS
etl_container       | SELECT subject_id   AS subject_id,
etl_container       |        hadm_id      AS hadm_id,
etl_container       |        transfertime AS transfertime,
etl_container       |        prev_service AS prev_service,
etl_container       |        curr_service AS curr_service,
etl_container       |        --
etl_container       |        'services'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','transfertime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, transfertime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.services
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_labevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_labevents AS
etl_container       | SELECT labevent_id AS labevent_id,
etl_container       |        subject_id  AS subject_id,
etl_container       |        charttime   AS charttime,
etl_container       |        hadm_id     AS hadm_id,
etl_container       |        itemid      AS itemid,
etl_container       |        valueuom    AS valueuom,
etl_container       |        value AS VALUE,
etl_container       |     flag                                AS flag,
etl_container       |     ref_range_lower                     AS ref_range_lower,
etl_container       |     ref_range_upper                     AS ref_range_upper,
etl_container       |     --
etl_container       |     'labevents'                         AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['labevent_id'],
etl_container       |                ARRAY[labevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_hosp.labevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_labitems
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_labitems AS
etl_container       | SELECT itemid               AS itemid,
etl_container       |        label                AS label,
etl_container       |        fluid                AS fluid,
etl_container       |        category             AS category,
etl_container       |        CAST(NULL AS text) AS loinc_code, -- MIMIC IV 2.0 change, the field is removed
etl_container       |        --
etl_container       |        'd_labitems'         AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid'],
etl_container       |                ARRAY[itemid::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.d_labitems
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- for Procedure
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_procedures_icd
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_procedures_icd AS
etl_container       | SELECT subject_id       AS subject_id,
etl_container       |        hadm_id          AS hadm_id,
etl_container       |        icd_code         AS icd_code,
etl_container       |        icd_version      AS icd_version,
etl_container       |        --
etl_container       |        'procedures_icd' AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','icd_code', 'icd_version'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, icd_code::text, icd_version::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.procedures_icd
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_hcpcsevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_hcpcsevents AS
etl_container       | SELECT hadm_id           AS hadm_id,
etl_container       |        subject_id        AS subject_id,
etl_container       |        hcpcs_cd          AS hcpcs_cd,
etl_container       |        seq_num           AS seq_num,
etl_container       |        short_description AS short_description,
etl_container       |        --
etl_container       |        'hcpcsevents'     AS load_table_id,
etl_container       |        row_number() OVER()      AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','hcpcs_cd', 'seq_num'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, hcpcs_cd::text, seq_num::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.hcpcsevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_drgcodes
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_drgcodes AS
etl_container       | SELECT hadm_id      AS hadm_id,
etl_container       |        subject_id   AS subject_id,
etl_container       |        drg_code     AS drg_code,
etl_container       |        description  AS description,
etl_container       |        --
etl_container       |        'drgcodes'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','drg_code'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, COALESCE(drg_code, '')::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.drgcodes
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_prescriptions
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_prescriptions AS
etl_container       | SELECT hadm_id          AS hadm_id,
etl_container       |        subject_id       AS subject_id,
etl_container       |        pharmacy_id      AS pharmacy_id,
etl_container       |        starttime        AS starttime,
etl_container       |        stoptime         AS stoptime,
etl_container       |        drug_type        AS drug_type,
etl_container       |        drug             AS drug,
etl_container       |        gsn              AS gsn,
etl_container       |        ndc              AS ndc,
etl_container       |        prod_strength    AS prod_strength,
etl_container       |        form_rx          AS form_rx,
etl_container       |        dose_val_rx      AS dose_val_rx,
etl_container       |        dose_unit_rx     AS dose_unit_rx,
etl_container       |        form_val_disp    AS form_val_disp,
etl_container       |        form_unit_disp   AS form_unit_disp,
etl_container       |        doses_per_24_hrs AS doses_per_24_hrs,
etl_container       |        route            AS route,
etl_container       |        --
etl_container       |        'prescriptions'  AS load_table_id,
etl_container       |        row_number() OVER()     AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','pharmacy_id', 'starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, pharmacy_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.prescriptions
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_microbiologyevents AS
etl_container       | SELECT microevent_id        AS microevent_id,
etl_container       |        subject_id           AS subject_id,
etl_container       |        hadm_id              AS hadm_id,
etl_container       |        chartdate            AS chartdate,
etl_container       |        charttime            AS charttime,           -- usage: COALESCE(charttime, chartdate)
etl_container       |        spec_itemid          AS spec_itemid,         -- d_micro, type of specimen taken. If no grouth, then all other fields is null
etl_container       |        spec_type_desc       AS spec_type_desc,      -- for reference
etl_container       |        test_itemid          AS test_itemid,         -- d_micro, what test is taken, goes to measurement
etl_container       |        test_name            AS test_name,           -- for reference
etl_container       |        org_itemid           AS org_itemid,          -- d_micro, what bacteria have grown
etl_container       |        org_name             AS org_name,            -- for reference
etl_container       |        ab_itemid            AS ab_itemid,           -- d_micro, antibiotic tested on the bacteria
etl_container       |        ab_name              AS ab_name,             -- for reference
etl_container       |        dilution_comparison  AS dilution_comparison, -- operator sign
etl_container       |        dilution_value       AS dilution_value,      -- numeric value
etl_container       |        interpretation       AS interpretation,      -- bacteria's degree of resistance to the antibiotic
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['subject_id','hadm_id','microevent_id'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, microevent_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.microbiologyevents
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:08:04.940 UTC [26] LOG:  checkpoint complete: wrote 3223 buffers (19.7%); 0 WAL file(s) added, 13 removed, 30 recycled; write=11.197 s, sync=2.183 s, total=14.997 s; sync files=191, longest=0.629 s, average=0.012 s; distance=692670 kB, estimate=781443 kB; lsn=1E/10B36A00, redo lsn=1D/EF1DBC18
postgres_container  | 2024-11-04 19:08:04.941 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:08:04.941 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:08:04.941 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:08:18.373 UTC [26] LOG:  checkpoint complete: wrote 6324 buffers (38.6%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.797 s, sync=1.870 s, total=13.432 s; sync files=92, longest=1.704 s, average=0.021 s; distance=688685 kB, estimate=772167 kB; lsn=1E/37CBB658, redo lsn=1E/192672E8
postgres_container  | 2024-11-04 19:08:18.374 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:08:18.374 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:08:18.374 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:08:28.741 UTC [26] LOG:  checkpoint complete: wrote 2208 buffers (13.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.642 s, sync=1.730 s, total=10.368 s; sync files=40, longest=1.126 s, average=0.044 s; distance=681373 kB, estimate=763087 kB; lsn=1E/61799148, redo lsn=1E/42BCE858
postgres_container  | 2024-11-04 19:08:28.742 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 19:08:28.742 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:08:28.760 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:08:31.098 UTC [9012] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:08:31.098 UTC [9012] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:08:45.316 UTC [26] LOG:  checkpoint complete: wrote 1803 buffers (11.0%); 0 WAL file(s) added, 17 removed, 24 recycled; write=10.593 s, sync=4.167 s, total=16.575 s; sync files=190, longest=1.124 s, average=0.022 s; distance=663742 kB, estimate=753153 kB; lsn=1E/920B1678, redo lsn=1E/6B3FE120
postgres_container  | 2024-11-04 19:08:45.317 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:08:45.317 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:08:45.317 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:08:57.986 UTC [26] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 15 removed, 33 recycled; write=10.553 s, sync=0.487 s, total=12.669 s; sync files=70, longest=0.463 s, average=0.007 s; distance=785437 kB, estimate=785437 kB; lsn=1E/B9402178, redo lsn=1E/9B305788
postgres_container  | 2024-11-04 19:08:57.987 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:08:57.987 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:08:57.987 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:09:09.239 UTC [9025] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:09:09.239 UTC [9025] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- raw d_micro is no longer available both in mimic_hosp and mimiciv_hosp
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | -- CREATE TABLE src_d_micro AS
etl_container       | -- SELECT
etl_container       | --     itemid                      AS itemid, -- numeric ID
etl_container       | --     label                       AS label, -- source_code for custom mapping
etl_container       | --     category                    AS category, 
etl_container       | --     --
etl_container       | --     'd_micro'                   AS load_table_id,
etl_container       | --     uuid_hash(uuid_nil())   AS load_row_id,
etl_container       | --     to_json(struct(
etl_container       | --         itemid AS itemid
etl_container       | --     ))                                  AS trace_id
etl_container       | -- FROM
etl_container       | --     d_micro_mimic
etl_container       | -- ;
etl_container       | 
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_micro
etl_container       | -- MIMIC IV 2.0: generate src_d_micro from microbiologyevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_micro AS
etl_container       | WITH d_micro AS (
etl_container       | 
etl_container       |     SELECT DISTINCT
etl_container       |         ab_itemid                   AS itemid, -- numeric ID
etl_container       |         ab_name                     AS label, -- source_code for custom mapping
etl_container       |         'ANTIBIOTIC'                AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['ab_itemid', ab_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'ab_itemid',
etl_container       |                'itemid', ab_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         ab_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         test_itemid                 AS itemid, -- numeric ID
etl_container       |         test_name                   AS label, -- source_code for custom mapping
etl_container       |         'MICROTEST'                 AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['test_itemid', test_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'test_itemid',
etl_container       |                'itemid', test_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         test_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         org_itemid                  AS itemid, -- numeric ID
etl_container       |         org_name                    AS label, -- source_code for custom mapping
etl_container       |         'ORGANISM'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['org_itemid', org_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'org_itemid',
etl_container       |                'itemid', org_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         org_itemid IS NOT NULL
etl_container       |     UNION ALL
etl_container       |     SELECT DISTINCT
etl_container       |         spec_itemid                 AS itemid, -- numeric ID
etl_container       |         spec_type_desc              AS label, -- source_code for custom mapping
etl_container       |         'SPECIMEN'                  AS category, 
etl_container       |         --
etl_container       |         -- json_object(
etl_container       |         --        ARRAY['field_name','itemid'],
etl_container       |         --        ARRAY['spec_itemid', spec_itemid::text]
etl_container       |         --    )          AS trace_id
etl_container       |         jsonb_build_object(
etl_container       |                'field_name', 'spec_itemid',
etl_container       |                'itemid', spec_itemid::text
etl_container       |            ) AS trace_id
etl_container       |     FROM
etl_container       |         mimiciv_hosp.microbiologyevents
etl_container       |     WHERE
etl_container       |         spec_itemid IS NOT NULL
etl_container       | )
etl_container       | SELECT itemid               AS itemid, -- numeric ID
etl_container       |        label                AS label,  -- source_code for custom mapping
etl_container       |        category             AS category,
etl_container       |        --
etl_container       |        'microbiologyevents' AS load_table_id,
etl_container       |        row_number() OVER()         AS load_row_id,
etl_container       |        trace_id             AS trace_id
etl_container       | FROM d_micro
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_pharmacy
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_pharmacy AS
etl_container       | SELECT pharmacy_id  AS pharmacy_id,
etl_container       |        medication   AS medication,
etl_container       |        -- hadm_id                             AS hadm_id,
etl_container       |        -- subject_id                          AS subject_id,
etl_container       |        -- starttime                           AS starttime,
etl_container       |        -- stoptime                            AS stoptime,
etl_container       |        -- route                               AS route,
etl_container       |        --
etl_container       |        'pharmacy'   AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['pharmacy_id'],
etl_container       |                ARRAY[pharmacy_id::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_hosp.pharmacy
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
etl_container       | CREATE TABLE src_procedureevents AS
etl_container       | SELECT hadm_id    AS hadm_id,
etl_container       |        subject_id AS subject_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        starttime  AS starttime,
etl_container       |        value AS VALUE,
etl_container       |     CAST(0 AS INTEGER)                    AS cancelreason, -- MIMIC IV 2.0 change, the field is removed
etl_container       |     --
etl_container       |     'procedureevents'                   AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id','starttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, starttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.procedureevents
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_d_items
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_d_items AS
etl_container       | SELECT itemid       AS itemid,
etl_container       |        label        AS label,
etl_container       |        linksto      AS linksto,
etl_container       |        -- abbreviation
etl_container       |        -- category
etl_container       |        -- unitname
etl_container       |        -- param_type
etl_container       |        -- lownormalvalue
etl_container       |        -- highnormalvalue
etl_container       |        --
etl_container       |        'd_items'    AS load_table_id,
etl_container       |        row_number() OVER() AS load_row_id,
etl_container       |        json_object(
etl_container       |                ARRAY['itemid','linksto'],
etl_container       |                ARRAY[itemid::text,linksto::text]
etl_container       |            )          AS trace_id
etl_container       | FROM mimiciv_icu.d_items
etl_container       | ;
etl_container       | -- -------------------------------------------------------------------
etl_container       | -- src_datetimeevents
etl_container       | -- -------------------------------------------------------------------
etl_container       | 
etl_container       | CREATE TABLE src_datetimeevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     --
etl_container       |     'datetimeevents'                    AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.datetimeevents
etl_container       | ;
etl_container       | CREATE TABLE src_chartevents AS
etl_container       | SELECT subject_id AS subject_id,
etl_container       |        hadm_id    AS hadm_id,
etl_container       |        stay_id    AS stay_id,
etl_container       |        itemid     AS itemid,
etl_container       |        charttime  AS charttime,
etl_container       |        value AS VALUE,
etl_container       |     valuenum    AS valuenum,
etl_container       |     valueuom    AS valueuom,
etl_container       |     --
etl_container       |     'chartevents'                       AS load_table_id,
etl_container       |     row_number() OVER()   AS load_row_id,
etl_container       |     json_object(
etl_container       |                ARRAY['subject_id','hadm_id', 'stay_id', 'charttime'],
etl_container       |                ARRAY[subject_id::text,hadm_id::text, stay_id::text,charttime::text]
etl_container       |            )          AS trace_id
etl_container       | FROM
etl_container       |     mimiciv_icu.chartevents
etl_container       | ;
etl_container       | SET search_path TO stage_omopcdm;
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:09:10.437 UTC [26] LOG:  checkpoint complete: wrote 1044 buffers (6.4%); 0 WAL file(s) added, 8 removed, 31 recycled; write=6.017 s, sync=3.556 s, total=12.451 s; sync files=48, longest=2.995 s, average=0.075 s; distance=642495 kB, estimate=771143 kB; lsn=1E/E24006D0, redo lsn=1E/C2675418
postgres_container  | 2024-11-04 19:09:10.438 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:09:10.438 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:09:10.438 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:09:12.388 UTC [9024] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:09:24.672 UTC [26] LOG:  checkpoint complete: wrote 58 buffers (0.4%); 0 WAL file(s) added, 9 removed, 30 recycled; write=8.805 s, sync=3.579 s, total=14.235 s; sync files=198, longest=1.601 s, average=0.019 s; distance=648145 kB, estimate=758843 kB; lsn=1F/A2F29C8, redo lsn=1E/E9F69B00
postgres_container  | 2024-11-04 19:09:24.673 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:09:24.673 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:09:24.673 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:09:35.830 UTC [26] LOG:  checkpoint complete: wrote 8393 buffers (51.2%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.870 s, sync=0.474 s, total=11.157 s; sync files=73, longest=0.345 s, average=0.007 s; distance=675189 kB, estimate=750478 kB; lsn=1F/32400240, redo lsn=1F/132C7030
postgres_container  | 2024-11-04 19:09:35.831 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:09:35.831 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:09:35.831 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:09:45.737 UTC [9037] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:09:45.737 UTC [9037] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:09:46.588 UTC [26] LOG:  checkpoint complete: wrote 3679 buffers (22.5%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.722 s, sync=1.642 s, total=10.757 s; sync files=37, longest=1.528 s, average=0.045 s; distance=660864 kB, estimate=741516 kB; lsn=1F/59D12278, redo lsn=1F/3B827108
postgres_container  | 2024-11-04 19:09:47.188 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:09:47.188 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:09:47.188 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:09:59.233 UTC [26] LOG:  checkpoint complete: wrote 179 buffers (1.1%); 0 WAL file(s) added, 1 removed, 32 recycled; write=7.570 s, sync=2.659 s, total=12.045 s; sync files=205, longest=2.130 s, average=0.013 s; distance=532532 kB, estimate=720618 kB; lsn=1F/7BFCEC50, redo lsn=1F/5C034118
postgres_container  | 2024-11-04 19:09:59.234 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:09:59.234 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:09:59.234 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:10:13.283 UTC [26] LOG:  checkpoint complete: wrote 8115 buffers (49.5%); 0 WAL file(s) added, 10 removed, 30 recycled; write=7.708 s, sync=3.823 s, total=14.049 s; sync files=67, longest=1.619 s, average=0.058 s; distance=670642 kB, estimate=715620 kB; lsn=1F/A5D3C180, redo lsn=1F/84F20A80
postgres_container  | 2024-11-04 19:10:13.283 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:10:13.283 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:10:13.283 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:10:24.527 UTC [9050] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:10:24.527 UTC [9050] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:10:28.190 UTC [26] LOG:  checkpoint complete: wrote 6022 buffers (36.8%); 0 WAL file(s) added, 13 removed, 31 recycled; write=12.800 s, sync=0.869 s, total=14.908 s; sync files=204, longest=0.049 s, average=0.005 s; distance=720504 kB, estimate=720504 kB; lsn=1F/D09FCCD0, redo lsn=1F/B0EBEC08
postgres_container  | 2024-11-04 19:10:28.191 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:10:28.191 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:10:28.191 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:10:39.283 UTC [26] LOG:  checkpoint complete: wrote 3789 buffers (23.1%); 0 WAL file(s) added, 4 removed, 32 recycled; write=7.606 s, sync=1.322 s, total=11.092 s; sync files=95, longest=0.934 s, average=0.014 s; distance=580055 kB, estimate=706459 kB; lsn=1F/F30CECB0, redo lsn=1F/D4534908
postgres_container  | 2024-11-04 19:10:39.283 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:10:39.283 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:10:39.284 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:10:50.553 UTC [26] LOG:  checkpoint complete: wrote 4564 buffers (27.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.041 s, sync=1.519 s, total=11.270 s; sync files=39, longest=0.817 s, average=0.039 s; distance=682117 kB, estimate=704025 kB; lsn=20/1D85DDD8, redo lsn=1F/FDF55F78
postgres_container  | 2024-11-04 19:10:50.554 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:10:50.554 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:10:50.554 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:10:57.447 UTC [9062] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:10:57.447 UTC [9062] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:11:05.102 UTC [26] LOG:  checkpoint complete: wrote 2959 buffers (18.1%); 0 WAL file(s) added, 12 removed, 29 recycled; write=11.381 s, sync=1.930 s, total=14.549 s; sync files=189, longest=0.187 s, average=0.011 s; distance=661895 kB, estimate=699812 kB; lsn=20/484B2BA8, redo lsn=20/265B7D00
postgres_container  | 2024-11-04 19:11:05.103 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:11:05.103 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:11:05.103 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:11:16.269 UTC [26] LOG:  checkpoint complete: wrote 6003 buffers (36.6%); 0 WAL file(s) added, 6 removed, 32 recycled; write=7.067 s, sync=2.014 s, total=11.167 s; sync files=90, longest=1.051 s, average=0.023 s; distance=617475 kB, estimate=691578 kB; lsn=20/6B400110, redo lsn=20/4C0B8A18
postgres_container  | 2024-11-04 19:11:16.270 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:11:16.270 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:11:16.285 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:11:28.079 UTC [26] LOG:  checkpoint complete: wrote 2535 buffers (15.5%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.110 s, sync=2.849 s, total=11.809 s; sync files=37, longest=1.702 s, average=0.077 s; distance=675094 kB, estimate=689930 kB; lsn=20/954050A0, redo lsn=20/753FE560
postgres_container  | 2024-11-04 19:11:28.079 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:11:28.079 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:11:28.091 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:11:33.048 UTC [9075] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:11:33.048 UTC [9075] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:11:44.630 UTC [26] LOG:  checkpoint complete: wrote 2138 buffers (13.0%); 0 WAL file(s) added, 13 removed, 28 recycled; write=11.461 s, sync=2.920 s, total=16.551 s; sync files=192, longest=1.220 s, average=0.016 s; distance=671742 kB, estimate=688111 kB; lsn=20/C17DB520, redo lsn=20/9E3FE098
postgres_container  | 2024-11-04 19:11:44.630 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:11:44.630 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:11:44.630 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:11:57.124 UTC [26] LOG:  checkpoint complete: wrote 8317 buffers (50.8%); 0 WAL file(s) added, 14 removed, 33 recycled; write=8.710 s, sync=1.760 s, total=12.494 s; sync files=70, longest=1.679 s, average=0.026 s; distance=774734 kB, estimate=774734 kB; lsn=20/EBCCB318, redo lsn=20/CD891960
postgres_container  | 2024-11-04 19:11:57.125 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:11:57.125 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:11:57.125 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:12:08.686 UTC [26] LOG:  checkpoint complete: wrote 27 buffers (0.2%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.925 s, sync=2.526 s, total=11.562 s; sync files=32, longest=2.167 s, average=0.079 s; distance=652917 kB, estimate=762552 kB; lsn=21/14402068, redo lsn=20/F562F158
postgres_container  | 2024-11-04 19:12:08.687 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:12:08.687 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:12:08.736 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:12:10.087 UTC [9088] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:12:10.087 UTC [9088] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:12:14.085 UTC [9087] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:12:14.085 UTC [9087] CONTEXT:  while scanning block 15890 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:12:14.086 UTC [9087] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:12:26.015 UTC [26] LOG:  checkpoint complete: wrote 2190 buffers (13.4%); 0 WAL file(s) added, 11 removed, 29 recycled; write=11.638 s, sync=3.711 s, total=17.329 s; sync files=217, longest=2.025 s, average=0.018 s; distance=653151 kB, estimate=751612 kB; lsn=21/3FE93C40, redo lsn=21/1D407108
postgres_container  | 2024-11-04 19:12:26.016 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:12:26.016 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:12:26.016 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:12:37.657 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 11 removed, 33 recycled; write=9.932 s, sync=0.209 s, total=11.641 s; sync files=71, longest=0.060 s, average=0.003 s; distance=724283 kB, estimate=748879 kB; lsn=21/677D7C60, redo lsn=21/49755D38
postgres_container  | 2024-11-04 19:12:37.657 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:12:37.657 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:12:37.657 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:12:51.841 UTC [26] LOG:  checkpoint complete: wrote 463 buffers (2.8%); 0 WAL file(s) added, 3 removed, 32 recycled; write=11.042 s, sync=0.520 s, total=14.184 s; sync files=17, longest=0.265 s, average=0.031 s; distance=573324 kB, estimate=731324 kB; lsn=21/8B3D3268, redo lsn=21/6C738FE8
postgres_container  | 2024-11-04 19:12:51.842 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:12:51.842 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:12:51.884 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:12:51.945 UTC [9100] ERROR:  relation "gcpt_cs_place_of_service_mimic" does not exist at character 51
postgres_container  | 2024-11-04 19:12:51.945 UTC [9100] STATEMENT:  CREATE TABLE tmp_custom_mapping AS
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_cs_place_of_service_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_ndc_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_drug_route_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_main_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_chartevents_value_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_lab_loinc_mod_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_unit_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_meas_waveforms_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_antibiotic_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_microtest_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_organism_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_resistance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_micro_specimen_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_mimic_generated_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_drgcodes_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_insurance_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_obs_marital_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_per_ethnicity_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_datetimeevents_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_proc_itemid_mimic
postgres_container  | 	
postgres_container  | 	UNION
postgres_container  | 	
postgres_container  | 	SELECT *
postgres_container  | 	FROM gcpt_vis_admission_mimic;
postgres_container  | 2024-11-04 19:13:07.185 UTC [26] LOG:  checkpoint complete: wrote 53 buffers (0.3%); 0 WAL file(s) added, 11 removed, 30 recycled; write=9.782 s, sync=3.407 s, total=15.343 s; sync files=198, longest=2.179 s, average=0.018 s; distance=678100 kB, estimate=726001 kB; lsn=21/B67C0FA0, redo lsn=21/95D6E0E0
postgres_container  | 2024-11-04 19:13:07.186 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:13:07.186 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:13:07.187 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:13:21.858 UTC [9111] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-04 19:13:22.004 UTC [26] LOG:  checkpoint complete: wrote 8525 buffers (52.0%); 0 WAL file(s) added, 12 removed, 30 recycled; write=10.591 s, sync=2.943 s, total=14.817 s; sync files=170, longest=1.844 s, average=0.018 s; distance=684408 kB, estimate=721842 kB; lsn=21/E0D09C08, redo lsn=21/BF9CC178
postgres_container  | 2024-11-04 19:13:22.005 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:13:22.005 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:13:22.005 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:13:50.221 UTC [26] LOG:  checkpoint complete: wrote 5180 buffers (31.6%); 0 WAL file(s) added, 5 removed, 33 recycled; write=26.541 s, sync=0.398 s, total=28.217 s; sync files=211, longest=0.273 s, average=0.002 s; distance=620785 kB, estimate=711736 kB; lsn=22/3E1A690, redo lsn=21/E5808660
postgres_container  | 2024-11-04 19:13:50.222 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 19:13:50.222 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:13:50.222 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:17:27.641 UTC [26] LOG:  checkpoint complete: wrote 4167 buffers (25.4%); 0 WAL file(s) added, 12 removed, 21 recycled; write=210.864 s, sync=5.154 s, total=217.420 s; sync files=335, longest=1.437 s, average=0.016 s; distance=537846 kB, estimate=694347 kB; lsn=22/30E09CE0, redo lsn=22/6546188
postgres_container  | 2024-11-04 19:17:27.641 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:17:43.793 UTC [26] LOG:  checkpoint complete: wrote 7130 buffers (43.5%); 0 WAL file(s) added, 20 removed, 28 recycled; write=11.916 s, sync=2.356 s, total=16.152 s; sync files=171, longest=0.569 s, average=0.014 s; distance=790754 kB, estimate=790754 kB; lsn=22/592F48C8, redo lsn=22/3697ED10
postgres_container  | 2024-11-04 19:17:43.794 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:17:43.794 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:17:43.794 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:17:57.738 UTC [9405] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:17:57.738 UTC [9405] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:17:58.114 UTC [26] LOG:  checkpoint complete: wrote 9153 buffers (55.9%); 0 WAL file(s) added, 13 removed, 28 recycled; write=9.267 s, sync=3.265 s, total=14.320 s; sync files=138, longest=1.992 s, average=0.024 s; distance=677516 kB, estimate=779431 kB; lsn=22/824006A0, redo lsn=22/5FF21F40
postgres_container  | 2024-11-04 19:17:58.115 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:17:58.115 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:17:58.115 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:18:17.140 UTC [26] LOG:  checkpoint complete: wrote 467 buffers (2.9%); 0 WAL file(s) added, 13 removed, 28 recycled; write=14.034 s, sync=3.042 s, total=19.026 s; sync files=254, longest=0.837 s, average=0.012 s; distance=672043 kB, estimate=768692 kB; lsn=22/AB309A10, redo lsn=22/88F6CD00
postgres_container  | 2024-11-04 19:18:17.141 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 19:18:17.141 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:18:17.141 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:18:18.207 UTC [9428] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:18:18.207 UTC [9428] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:18:38.390 UTC [26] LOG:  checkpoint complete: wrote 4488 buffers (27.4%); 0 WAL file(s) added, 11 removed, 31 recycled; write=16.690 s, sync=2.477 s, total=21.250 s; sync files=325, longest=1.255 s, average=0.008 s; distance=672369 kB, estimate=759059 kB; lsn=22/D25CD200, redo lsn=22/B2009140
postgres_container  | 2024-11-04 19:18:38.390 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 19:18:38.390 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:18:38.408 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:18:42.531 UTC [9440] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:18:42.531 UTC [9440] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:18:59.907 UTC [26] LOG:  checkpoint complete: wrote 2534 buffers (15.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=17.405 s, sync=2.031 s, total=21.517 s; sync files=278, longest=1.442 s, average=0.008 s; distance=692186 kB, estimate=752372 kB; lsn=22/FB402448, redo lsn=22/DC3FFD10
postgres_container  | 2024-11-04 19:18:59.908 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 19:18:59.908 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:18:59.908 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:19:15.757 UTC [26] LOG:  checkpoint complete: wrote 8541 buffers (52.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=10.331 s, sync=3.044 s, total=15.850 s; sync files=76, longest=1.254 s, average=0.041 s; distance=717910 kB, estimate=748926 kB; lsn=23/271C1910, redo lsn=23/81157A8
postgres_container  | 2024-11-04 19:19:15.757 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:19:15.757 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:19:15.757 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:19:34.264 UTC [26] LOG:  checkpoint complete: wrote 1167 buffers (7.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=14.135 s, sync=0.985 s, total=18.507 s; sync files=70, longest=0.429 s, average=0.015 s; distance=682597 kB, estimate=742293 kB; lsn=23/50F42F20, redo lsn=23/31BAEC30
postgres_container  | 2024-11-04 19:19:34.265 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 19:19:34.265 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:19:34.339 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:19:35.826 UTC [9453] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:19:35.826 UTC [9453] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:19:51.516 UTC [26] LOG:  checkpoint complete: wrote 1541 buffers (9.4%); 0 WAL file(s) added, 9 removed, 31 recycled; write=11.859 s, sync=3.299 s, total=17.251 s; sync files=208, longest=1.589 s, average=0.016 s; distance=647493 kB, estimate=732813 kB; lsn=23/7940AF98, redo lsn=23/59400068
postgres_container  | 2024-11-04 19:19:51.516 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:19:51.516 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:19:51.516 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:20:05.431 UTC [26] LOG:  checkpoint complete: wrote 8364 buffers (51.0%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.721 s, sync=2.812 s, total=13.915 s; sync files=74, longest=2.381 s, average=0.038 s; distance=691014 kB, estimate=728633 kB; lsn=23/A1E1AD68, redo lsn=23/836D1888
postgres_container  | 2024-11-04 19:20:05.431 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:20:05.431 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:20:05.431 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:20:18.488 UTC [9466] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:20:18.488 UTC [9466] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:20:19.657 UTC [26] LOG:  checkpoint complete: wrote 2307 buffers (14.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.804 s, sync=0.771 s, total=14.226 s; sync files=58, longest=0.353 s, average=0.014 s; distance=692553 kB, estimate=725025 kB; lsn=23/CC40E0C8, redo lsn=23/ADB23F38
postgres_container  | 2024-11-04 19:20:19.658 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:20:19.658 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:20:19.658 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:20:34.817 UTC [26] LOG:  checkpoint complete: wrote 106 buffers (0.6%); 0 WAL file(s) added, 5 removed, 32 recycled; write=9.701 s, sync=3.205 s, total=15.160 s; sync files=205, longest=0.917 s, average=0.016 s; distance=603936 kB, estimate=712916 kB; lsn=23/F1E7F6D0, redo lsn=23/D28EC2F0
postgres_container  | 2024-11-04 19:20:34.818 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:20:34.818 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:20:34.818 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:20:48.633 UTC [26] LOG:  checkpoint complete: wrote 8297 buffers (50.6%); 0 WAL file(s) added, 6 removed, 33 recycled; write=8.916 s, sync=1.684 s, total=13.816 s; sync files=71, longest=1.482 s, average=0.024 s; distance=632068 kB, estimate=704831 kB; lsn=24/17EBC6A0, redo lsn=23/F922D638
postgres_container  | 2024-11-04 19:20:48.633 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:20:48.633 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:20:48.633 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:21:00.248 UTC [9478] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:21:00.248 UTC [9478] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:21:01.894 UTC [26] LOG:  checkpoint complete: wrote 3339 buffers (20.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.434 s, sync=2.510 s, total=13.261 s; sync files=48, longest=2.158 s, average=0.053 s; distance=684032 kB, estimate=702751 kB; lsn=24/424042A0, redo lsn=24/22E2D748
postgres_container  | 2024-11-04 19:21:01.894 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:21:01.894 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:21:01.894 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping analyze of "src_labevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping vacuum of "src_diagnoses_icd" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping analyze of "src_services" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 19:21:02.932 UTC [9479] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 19:21:02.933 UTC [9479] LOG:  skipping vacuum of "pg_toast_241269" --- lock not available
postgres_container  | 2024-11-04 19:21:15.874 UTC [26] LOG:  checkpoint complete: wrote 238 buffers (1.5%); 0 WAL file(s) added, 5 removed, 29 recycled; write=7.992 s, sync=4.112 s, total=13.981 s; sync files=202, longest=2.128 s, average=0.021 s; distance=554219 kB, estimate=687898 kB; lsn=24/6631AA60, redo lsn=24/44B684E8
postgres_container  | 2024-11-04 19:21:15.875 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:21:15.875 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:21:15.875 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:21:27.262 UTC [26] LOG:  checkpoint complete: wrote 8237 buffers (50.3%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.954 s, sync=0.388 s, total=11.387 s; sync files=66, longest=0.280 s, average=0.006 s; distance=696955 kB, estimate=696955 kB; lsn=24/8D637340, redo lsn=24/6F4072F0
postgres_container  | 2024-11-04 19:21:27.263 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:21:27.263 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:21:27.263 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:21:34.999 UTC [9491] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:21:34.999 UTC [9491] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:21:37.285 UTC [26] LOG:  checkpoint complete: wrote 2937 buffers (17.9%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.856 s, sync=1.233 s, total=10.023 s; sync files=42, longest=0.347 s, average=0.030 s; distance=683816 kB, estimate=695641 kB; lsn=24/B6AEAF58, redo lsn=24/98FD14B0
postgres_container  | 2024-11-04 19:21:38.574 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:21:38.574 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:21:38.574 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:21:50.953 UTC [26] LOG:  checkpoint complete: wrote 3756 buffers (22.9%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.048 s, sync=3.796 s, total=12.380 s; sync files=206, longest=1.494 s, average=0.019 s; distance=528568 kB, estimate=678934 kB; lsn=24/DA4005A8, redo lsn=24/B93FF730
postgres_container  | 2024-11-04 19:21:50.954 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:21:50.954 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:21:50.954 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:22:04.794 UTC [26] LOG:  checkpoint complete: wrote 4574 buffers (27.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.631 s, sync=1.936 s, total=13.841 s; sync files=30, longest=1.669 s, average=0.065 s; distance=674884 kB, estimate=678529 kB; lsn=25/121DEE8, redo lsn=24/E2710988
postgres_container  | 2024-11-04 19:22:04.795 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:22:04.795 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:22:04.795 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:22:15.164 UTC [9504] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:22:15.164 UTC [9504] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:22:16.780 UTC [26] LOG:  checkpoint complete: wrote 4178 buffers (25.5%); 0 WAL file(s) added, 7 removed, 33 recycled; write=8.443 s, sync=1.805 s, total=11.985 s; sync files=97, longest=1.500 s, average=0.019 s; distance=656344 kB, estimate=676310 kB; lsn=25/28C08C10, redo lsn=25/A806A60
postgres_container  | 2024-11-04 19:22:17.453 UTC [9503] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:22:18.654 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:22:18.654 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:22:18.654 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:22:29.979 UTC [26] LOG:  checkpoint complete: wrote 3808 buffers (23.2%); 0 WAL file(s) added, 3 removed, 30 recycled; write=5.807 s, sync=3.877 s, total=11.326 s; sync files=219, longest=1.529 s, average=0.018 s; distance=536558 kB, estimate=662335 kB; lsn=25/4C664A98, redo lsn=25/2B4024D8
postgres_container  | 2024-11-04 19:22:29.980 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:22:29.980 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:22:29.980 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:22:41.394 UTC [26] LOG:  checkpoint complete: wrote 4570 buffers (27.9%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.728 s, sync=1.587 s, total=11.415 s; sync files=27, longest=1.463 s, average=0.059 s; distance=670441 kB, estimate=670441 kB; lsn=25/72CA6078, redo lsn=25/542BCA68
postgres_container  | 2024-11-04 19:22:41.395 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:22:41.395 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:22:41.395 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:22:48.958 UTC [9516] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:22:48.958 UTC [9516] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:22:51.678 UTC [26] LOG:  checkpoint complete: wrote 1394 buffers (8.5%); 0 WAL file(s) added, 7 removed, 33 recycled; write=6.710 s, sync=2.620 s, total=10.283 s; sync files=38, longest=2.578 s, average=0.069 s; distance=664388 kB, estimate=669836 kB; lsn=25/9AB96750, redo lsn=25/7CB8DB58
postgres_container  | 2024-11-04 19:22:53.095 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:22:53.095 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:22:53.095 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:23:04.873 UTC [26] LOG:  checkpoint complete: wrote 3765 buffers (23.0%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.411 s, sync=3.464 s, total=11.779 s; sync files=210, longest=1.956 s, average=0.017 s; distance=532933 kB, estimate=656145 kB; lsn=25/BDD46318, redo lsn=25/9D3FF1E8
postgres_container  | 2024-11-04 19:23:04.874 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:23:04.874 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:23:04.938 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:23:17.716 UTC [26] LOG:  checkpoint complete: wrote 7690 buffers (46.9%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.868 s, sync=3.796 s, total=12.843 s; sync files=78, longest=3.204 s, average=0.049 s; distance=665936 kB, estimate=665936 kB; lsn=25/E54020D0, redo lsn=25/C5E53268
postgres_container  | 2024-11-04 19:23:17.717 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:23:17.717 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:23:17.718 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:23:27.999 UTC [9529] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:23:27.999 UTC [9529] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:23:29.154 UTC [26] LOG:  checkpoint complete: wrote 4135 buffers (25.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=10.093 s, sync=0.320 s, total=11.437 s; sync files=65, longest=0.174 s, average=0.005 s; distance=669867 kB, estimate=669867 kB; lsn=26/CD3EDC8, redo lsn=25/EEC7DFD8
postgres_container  | 2024-11-04 19:23:30.697 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:23:30.697 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:23:30.697 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:23:42.563 UTC [26] LOG:  checkpoint complete: wrote 3818 buffers (23.3%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.121 s, sync=4.200 s, total=11.867 s; sync files=219, longest=1.356 s, average=0.020 s; distance=531973 kB, estimate=656078 kB; lsn=26/30D59648, redo lsn=26/F3FF750
postgres_container  | 2024-11-04 19:23:42.564 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:23:42.564 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:23:42.564 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:23:54.524 UTC [26] LOG:  checkpoint complete: wrote 4574 buffers (27.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.521 s, sync=3.306 s, total=11.960 s; sync files=44, longest=2.872 s, average=0.076 s; distance=686633 kB, estimate=686633 kB; lsn=26/58A00D28, redo lsn=26/39289BB8
postgres_container  | 2024-11-04 19:23:54.525 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:23:54.525 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:23:54.525 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:24:01.520 UTC [9541] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:24:01.520 UTC [9541] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:24:04.624 UTC [9542] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:24:04.625 UTC [9542] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 19:24:04.625 UTC [9542] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:24:04.625 UTC [9542] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 19:24:04.625 UTC [9542] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 19:24:04.625 UTC [9542] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 19:24:04.635 UTC [9542] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 19:24:04.635 UTC [9542] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 19:24:08.744 UTC [26] LOG:  checkpoint complete: wrote 2734 buffers (16.7%); 0 WAL file(s) added, 13 removed, 29 recycled; write=11.534 s, sync=1.517 s, total=14.219 s; sync files=196, longest=0.130 s, average=0.008 s; distance=701634 kB, estimate=701634 kB; lsn=26/85577720, redo lsn=26/63FBA760
postgres_container  | 2024-11-04 19:24:08.744 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:24:08.744 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:24:08.744 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:24:20.753 UTC [26] LOG:  checkpoint complete: wrote 3895 buffers (23.8%); 0 WAL file(s) added, 6 removed, 31 recycled; write=7.941 s, sync=1.505 s, total=12.009 s; sync files=76, longest=0.863 s, average=0.020 s; distance=603794 kB, estimate=691850 kB; lsn=26/A8402040, redo lsn=26/88D5F348
postgres_container  | 2024-11-04 19:24:20.754 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:24:20.754 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:24:20.754 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:24:32.340 UTC [26] LOG:  checkpoint complete: wrote 4566 buffers (27.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.527 s, sync=1.892 s, total=11.587 s; sync files=42, longest=1.125 s, average=0.046 s; distance=672413 kB, estimate=689907 kB; lsn=26/D1DB1FC0, redo lsn=26/B1E06848
postgres_container  | 2024-11-04 19:24:32.341 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:24:32.341 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:24:32.341 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:24:37.633 UTC [9554] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:24:37.633 UTC [9554] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:24:49.995 UTC [26] LOG:  checkpoint complete: wrote 2126 buffers (13.0%); 0 WAL file(s) added, 17 removed, 26 recycled; write=11.846 s, sync=3.315 s, total=17.654 s; sync files=188, longest=1.199 s, average=0.018 s; distance=706258 kB, estimate=706258 kB; lsn=27/1B46EF0, redo lsn=26/DCFBB078
postgres_container  | 2024-11-04 19:24:49.996 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:24:49.996 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:24:49.996 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:25:04.040 UTC [26] LOG:  checkpoint complete: wrote 8293 buffers (50.6%); 0 WAL file(s) added, 17 removed, 32 recycled; write=8.669 s, sync=3.015 s, total=14.045 s; sync files=67, longest=2.934 s, average=0.045 s; distance=799093 kB, estimate=799093 kB; lsn=27/2C6849F8, redo lsn=27/DC18740
postgres_container  | 2024-11-04 19:25:04.041 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:25:04.041 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:25:04.063 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:25:16.727 UTC [26] LOG:  checkpoint complete: wrote 2777 buffers (16.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=9.381 s, sync=1.170 s, total=12.687 s; sync files=90, longest=0.839 s, average=0.013 s; distance=679832 kB, estimate=787167 kB; lsn=27/5669F050, redo lsn=27/373FEB08
postgres_container  | 2024-11-04 19:25:16.728 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:25:16.728 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:25:16.728 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:25:17.182 UTC [9567] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:25:17.182 UTC [9567] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:25:34.089 UTC [26] LOG:  checkpoint complete: wrote 355 buffers (2.2%); 0 WAL file(s) added, 16 removed, 25 recycled; write=10.344 s, sync=5.205 s, total=17.362 s; sync files=209, longest=1.911 s, average=0.025 s; distance=680330 kB, estimate=776483 kB; lsn=27/86400658, redo lsn=27/60C61598
postgres_container  | 2024-11-04 19:25:34.090 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:25:34.090 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:25:34.090 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:25:46.108 UTC [26] LOG:  checkpoint complete: wrote 8343 buffers (50.9%); 0 WAL file(s) added, 13 removed, 33 recycled; write=8.102 s, sync=1.637 s, total=12.018 s; sync files=72, longest=1.609 s, average=0.023 s; distance=747781 kB, estimate=773613 kB; lsn=27/AC4021D0, redo lsn=27/8E6A2C70
postgres_container  | 2024-11-04 19:25:46.109 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:25:46.109 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:25:46.109 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:25:53.926 UTC [9579] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:25:53.926 UTC [9579] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:26:00.048 UTC [26] LOG:  checkpoint complete: wrote 4140 buffers (25.3%); 0 WAL file(s) added, 12 removed, 30 recycled; write=11.479 s, sync=1.282 s, total=13.940 s; sync files=190, longest=0.080 s, average=0.007 s; distance=691524 kB, estimate=765404 kB; lsn=27/D9825458, redo lsn=27/B89F4048
postgres_container  | 2024-11-04 19:26:00.048 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:26:00.048 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:26:00.048 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:26:12.514 UTC [26] LOG:  checkpoint complete: wrote 3755 buffers (22.9%); 0 WAL file(s) added, 6 removed, 30 recycled; write=7.641 s, sync=2.580 s, total=12.466 s; sync files=98, longest=0.872 s, average=0.027 s; distance=594164 kB, estimate=748280 kB; lsn=27/FDB42F58, redo lsn=27/DCE311F8
postgres_container  | 2024-11-04 19:26:12.514 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:26:12.514 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:26:12.514 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:26:27.300 UTC [26] LOG:  checkpoint complete: wrote 8504 buffers (51.9%); 0 WAL file(s) added, 13 removed, 31 recycled; write=9.243 s, sync=3.117 s, total=14.786 s; sync files=106, longest=1.482 s, average=0.030 s; distance=715036 kB, estimate=744956 kB; lsn=28/28530DC0, redo lsn=28/8878270
postgres_container  | 2024-11-04 19:26:27.300 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:26:27.300 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:26:27.300 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:26:31.880 UTC [9592] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:26:31.880 UTC [9592] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:26:42.794 UTC [26] LOG:  checkpoint complete: wrote 3017 buffers (18.4%); 0 WAL file(s) added, 12 removed, 29 recycled; write=11.314 s, sync=2.200 s, total=15.494 s; sync files=201, longest=0.989 s, average=0.011 s; distance=677256 kB, estimate=738186 kB; lsn=28/533FEBD8, redo lsn=28/31DDA440
postgres_container  | 2024-11-04 19:26:42.794 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:26:42.794 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:26:42.794 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:26:55.222 UTC [26] LOG:  checkpoint complete: wrote 6344 buffers (38.7%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.844 s, sync=1.670 s, total=12.429 s; sync files=70, longest=1.225 s, average=0.024 s; distance=731025 kB, estimate=737470 kB; lsn=28/7D400178, redo lsn=28/5E7BE8C0
postgres_container  | 2024-11-04 19:26:55.223 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:26:55.223 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:26:55.223 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:27:06.752 UTC [26] LOG:  checkpoint complete: wrote 2025 buffers (12.4%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.013 s, sync=2.574 s, total=11.529 s; sync files=36, longest=1.301 s, average=0.072 s; distance=671145 kB, estimate=730837 kB; lsn=28/A6867B48, redo lsn=28/87729078
postgres_container  | 2024-11-04 19:27:06.753 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:27:06.753 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:27:06.753 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:27:08.797 UTC [9605] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:27:08.797 UTC [9605] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:27:13.092 UTC [9604] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:27:13.092 UTC [9604] CONTEXT:  while scanning block 12101 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:27:24.255 UTC [26] LOG:  checkpoint complete: wrote 1854 buffers (11.3%); 0 WAL file(s) added, 12 removed, 27 recycled; write=12.220 s, sync=3.499 s, total=17.503 s; sync files=223, longest=0.916 s, average=0.016 s; distance=646508 kB, estimate=722404 kB; lsn=28/D2741B90, redo lsn=28/AEE843D8
postgres_container  | 2024-11-04 19:27:24.256 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:27:24.256 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:27:24.256 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:27:35.939 UTC [26] LOG:  checkpoint complete: wrote 8335 buffers (50.9%); 0 WAL file(s) added, 12 removed, 33 recycled; write=7.575 s, sync=2.385 s, total=11.684 s; sync files=75, longest=2.260 s, average=0.032 s; distance=727886 kB, estimate=727886 kB; lsn=28/F9F8E250, redo lsn=28/DB557C88
postgres_container  | 2024-11-04 19:27:35.940 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:27:35.940 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:27:35.940 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:27:46.781 UTC [26] LOG:  checkpoint complete: wrote 678 buffers (4.1%); 0 WAL file(s) added, 8 removed, 31 recycled; write=6.836 s, sync=2.290 s, total=10.841 s; sync files=36, longest=1.601 s, average=0.064 s; distance=647368 kB, estimate=719834 kB; lsn=29/22402090, redo lsn=29/2D89E18
postgres_container  | 2024-11-04 19:27:46.782 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:27:46.782 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:27:46.782 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:27:47.058 UTC [9617] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:27:47.058 UTC [9617] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:28:00.796 UTC [26] LOG:  checkpoint complete: wrote 148 buffers (0.9%); 0 WAL file(s) added, 8 removed, 31 recycled; write=9.243 s, sync=2.798 s, total=14.014 s; sync files=185, longest=1.632 s, average=0.016 s; distance=641390 kB, estimate=711990 kB; lsn=29/49B86048, redo lsn=29/29FE5A10
postgres_container  | 2024-11-04 19:28:00.796 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:28:00.796 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:28:00.796 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:28:13.880 UTC [26] LOG:  checkpoint complete: wrote 8284 buffers (50.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.898 s, sync=2.902 s, total=13.084 s; sync files=81, longest=1.775 s, average=0.036 s; distance=689504 kB, estimate=709741 kB; lsn=29/73DFC9A0, redo lsn=29/5413DE00
postgres_container  | 2024-11-04 19:28:13.880 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:28:13.880 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:28:13.880 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:28:25.169 UTC [9630] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:28:25.169 UTC [9630] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:28:26.010 UTC [26] LOG:  checkpoint complete: wrote 6140 buffers (37.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.533 s, sync=0.714 s, total=12.131 s; sync files=105, longest=0.343 s, average=0.007 s; distance=694008 kB, estimate=708168 kB; lsn=29/9D024AB8, redo lsn=29/7E6FC188
postgres_container  | 2024-11-04 19:28:27.473 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:28:27.473 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:28:27.473 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:28:39.796 UTC [26] LOG:  checkpoint complete: wrote 3810 buffers (23.3%); 0 WAL file(s) added, 4 removed, 29 recycled; write=6.340 s, sync=4.184 s, total=12.324 s; sync files=219, longest=1.983 s, average=0.020 s; distance=534894 kB, estimate=690840 kB; lsn=29/C10CC200, redo lsn=29/9F157A58
postgres_container  | 2024-11-04 19:28:39.797 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:28:39.797 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:28:39.810 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:28:51.784 UTC [26] LOG:  checkpoint complete: wrote 4575 buffers (27.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.733 s, sync=1.135 s, total=11.987 s; sync files=45, longest=0.932 s, average=0.026 s; distance=697161 kB, estimate=697161 kB; lsn=29/E8B44050, redo lsn=29/C9A2A100
postgres_container  | 2024-11-04 19:28:51.784 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:28:51.784 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:28:51.784 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:28:58.452 UTC [9642] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:28:58.452 UTC [9642] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:29:05.740 UTC [26] LOG:  checkpoint complete: wrote 2640 buffers (16.1%); 0 WAL file(s) added, 12 removed, 30 recycled; write=11.478 s, sync=1.247 s, total=13.956 s; sync files=191, longest=0.060 s, average=0.007 s; distance=686308 kB, estimate=696076 kB; lsn=2A/147583C0, redo lsn=29/F3863158
postgres_container  | 2024-11-04 19:29:05.740 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:29:05.740 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:29:05.740 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:29:17.100 UTC [26] LOG:  checkpoint complete: wrote 3869 buffers (23.6%); 0 WAL file(s) added, 5 removed, 32 recycled; write=7.392 s, sync=2.331 s, total=11.360 s; sync files=77, longest=1.167 s, average=0.031 s; distance=603197 kB, estimate=686788 kB; lsn=2A/3741CF80, redo lsn=2A/185726C0
postgres_container  | 2024-11-04 19:29:17.101 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:29:17.101 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:29:17.101 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:29:28.723 UTC [26] LOG:  checkpoint complete: wrote 4569 buffers (27.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.838 s, sync=2.670 s, total=11.623 s; sync files=43, longest=1.872 s, average=0.063 s; distance=666642 kB, estimate=684773 kB; lsn=2A/60BEEFB8, redo lsn=2A/41076FE8
postgres_container  | 2024-11-04 19:29:28.723 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:29:28.723 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:29:28.724 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:29:33.623 UTC [9655] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:29:33.623 UTC [9655] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:29:44.981 UTC [26] LOG:  checkpoint complete: wrote 2131 buffers (13.0%); 0 WAL file(s) added, 12 removed, 29 recycled; write=10.888 s, sync=2.477 s, total=16.258 s; sync files=188, longest=0.367 s, average=0.014 s; distance=678932 kB, estimate=684189 kB; lsn=2A/8C4001A8, redo lsn=2A/6A77C0F8
postgres_container  | 2024-11-04 19:29:44.981 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:29:44.981 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:29:45.016 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:30:01.424 UTC [26] LOG:  checkpoint complete: wrote 6284 buffers (38.4%); 0 WAL file(s) added, 14 removed, 32 recycled; write=13.194 s, sync=0.564 s, total=16.443 s; sync files=66, longest=0.063 s, average=0.009 s; distance=750087 kB, estimate=750087 kB; lsn=2A/B7E21620, redo lsn=2A/983FE0D8
postgres_container  | 2024-11-04 19:30:01.425 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:30:01.425 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:30:01.444 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:30:14.294 UTC [26] LOG:  checkpoint complete: wrote 2023 buffers (12.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.879 s, sync=1.815 s, total=12.870 s; sync files=63, longest=1.248 s, average=0.029 s; distance=720895 kB, estimate=747168 kB; lsn=2A/E38AF420, redo lsn=2A/C43FE068
postgres_container  | 2024-11-04 19:30:14.294 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:30:14.294 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:30:14.294 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:30:15.378 UTC [9668] ERROR:  relation "cdm_location" already exists
postgres_container  | 2024-11-04 19:30:15.378 UTC [9668] STATEMENT:  CREATE TABLE cdm_location
postgres_container  | 	(
postgres_container  | 	    location_id           INTEGER     NOT NULL ,
postgres_container  | 	    address_1             text             ,
postgres_container  | 	    address_2             text             ,
postgres_container  | 	    city                  text             ,
postgres_container  | 	    STATE                 text             ,
postgres_container  | 	    zip                   text             ,
postgres_container  | 	    county                text             ,
postgres_container  | 	    location_source_value text             ,
postgres_container  | 	    -- 
postgres_container  | 	    unit_id                       text,
postgres_container  | 	    load_table_id                 text,
postgres_container  | 	    load_row_id                   INTEGER,
postgres_container  | 	    trace_id                      text
postgres_container  | 	)
postgres_container  | 	;
postgres_container  | 2024-11-04 19:30:19.176 UTC [9667] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:30:19.176 UTC [9667] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:30:32.978 UTC [26] LOG:  checkpoint complete: wrote 1498 buffers (9.1%); 0 WAL file(s) added, 17 removed, 24 recycled; write=10.679 s, sync=6.187 s, total=18.684 s; sync files=292, longest=2.068 s, average=0.022 s; distance=673780 kB, estimate=739829 kB; lsn=2B/14455FB8, redo lsn=2A/ED5FB400
postgres_container  | 2024-11-04 19:30:32.979 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:30:32.979 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:30:32.979 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:30:47.295 UTC [26] LOG:  checkpoint complete: wrote 12178 buffers (74.3%); 0 WAL file(s) added, 14 removed, 31 recycled; write=9.370 s, sync=2.965 s, total=14.316 s; sync files=159, longest=2.436 s, average=0.019 s; distance=745841 kB, estimate=745841 kB; lsn=2B/3A438528, redo lsn=2B/1AE57828
postgres_container  | 2024-11-04 19:30:47.296 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:30:47.296 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:30:47.296 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:30:57.321 UTC [9789] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:30:57.321 UTC [9789] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:30:57.321 UTC [9789] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:30:58.651 UTC [26] LOG:  checkpoint complete: wrote 3041 buffers (18.6%); 0 WAL file(s) added, 6 removed, 33 recycled; write=8.959 s, sync=0.241 s, total=11.356 s; sync files=101, longest=0.199 s, average=0.003 s; distance=635331 kB, estimate=734790 kB; lsn=2B/5F479688, redo lsn=2B/41AC86E0
postgres_container  | 2024-11-04 19:30:58.651 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:30:58.651 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:30:58.651 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:31:18.159 UTC [26] LOG:  checkpoint complete: wrote 575 buffers (3.5%); 0 WAL file(s) added, 5 removed, 30 recycled; write=13.011 s, sync=1.962 s, total=19.508 s; sync files=260, longest=0.673 s, average=0.008 s; distance=570864 kB, estimate=718397 kB; lsn=2B/854871E8, redo lsn=2B/648448B8
postgres_container  | 2024-11-04 19:31:18.159 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 19:31:18.159 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:31:18.159 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:31:21.912 UTC [9813] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:31:21.912 UTC [9813] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:31:21.912 UTC [9813] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:31:31.253 UTC [9807] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 19:31:31.253 UTC [9807] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 19:31:31.253 UTC [9807] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 19:32:01.316 UTC [26] LOG:  checkpoint complete: wrote 5995 buffers (36.6%); 0 WAL file(s) added, 13 removed, 29 recycled; write=29.507 s, sync=4.617 s, total=43.157 s; sync files=334, longest=1.259 s, average=0.014 s; distance=683843 kB, estimate=714942 kB; lsn=2B/B076C040, redo lsn=2B/8E415560
postgres_container  | 2024-11-04 19:32:01.341 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:32:32.100 UTC [26] LOG:  checkpoint complete: wrote 6540 buffers (39.9%); 0 WAL file(s) added, 17 removed, 32 recycled; write=23.463 s, sync=2.261 s, total=30.783 s; sync files=128, longest=0.696 s, average=0.018 s; distance=802725 kB, estimate=802725 kB; lsn=2B/DE406CF0, redo lsn=2B/BF3FEB10
postgres_container  | 2024-11-04 19:32:32.100 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:32:51.323 UTC [26] LOG:  checkpoint complete: wrote 2517 buffers (15.4%); 0 WAL file(s) added, 9 removed, 32 recycled; write=14.363 s, sync=2.663 s, total=19.224 s; sync files=92, longest=1.536 s, average=0.029 s; distance=676828 kB, estimate=790135 kB; lsn=2C/7E3A788, redo lsn=2B/E88F5F00
postgres_container  | 2024-11-04 19:32:51.324 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 19:32:51.324 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:32:51.324 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:32:57.273 UTC [9827] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:32:57.273 UTC [9827] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:32:57.273 UTC [9827] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:33:11.677 UTC [26] LOG:  checkpoint complete: wrote 2509 buffers (15.3%); 0 WAL file(s) added, 11 removed, 30 recycled; write=15.315 s, sync=2.994 s, total=20.353 s; sync files=231, longest=1.049 s, average=0.013 s; distance=669038 kB, estimate=778026 kB; lsn=2C/32BED180, redo lsn=2C/116517D0
postgres_container  | 2024-11-04 19:33:11.677 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 19:33:11.677 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:33:11.678 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:33:25.319 UTC [26] LOG:  checkpoint complete: wrote 8438 buffers (51.5%); 0 WAL file(s) added, 13 removed, 31 recycled; write=8.791 s, sync=2.740 s, total=13.642 s; sync files=91, longest=0.470 s, average=0.031 s; distance=727478 kB, estimate=772971 kB; lsn=2C/5D7B77E8, redo lsn=2C/3DCBF0C0
postgres_container  | 2024-11-04 19:33:25.319 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:33:25.319 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:33:25.343 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:33:38.001 UTC [26] LOG:  checkpoint complete: wrote 1062 buffers (6.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.404 s, sync=2.395 s, total=12.682 s; sync files=30, longest=1.354 s, average=0.080 s; distance=667844 kB, estimate=762458 kB; lsn=2C/85401350, redo lsn=2C/668F02E0
postgres_container  | 2024-11-04 19:33:38.002 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:33:38.002 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:33:38.043 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:33:38.723 UTC [9841] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:33:38.723 UTC [9841] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:33:38.723 UTC [9841] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:33:55.566 UTC [26] LOG:  checkpoint complete: wrote 476 buffers (2.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=11.800 s, sync=3.563 s, total=17.564 s; sync files=198, longest=1.068 s, average=0.018 s; distance=649407 kB, estimate=751153 kB; lsn=2C/ADEDC4B0, redo lsn=2C/8E3202A0
postgres_container  | 2024-11-04 19:33:55.567 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:33:55.567 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:33:55.567 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:34:09.228 UTC [26] LOG:  checkpoint complete: wrote 5991 buffers (36.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=9.567 s, sync=2.105 s, total=13.662 s; sync files=77, longest=1.774 s, average=0.028 s; distance=640020 kB, estimate=740040 kB; lsn=2C/D486F120, redo lsn=2C/B5425590
postgres_container  | 2024-11-04 19:34:09.229 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:34:09.229 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:34:09.229 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:34:21.769 UTC [9855] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:34:21.769 UTC [9855] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:34:21.769 UTC [9855] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:34:22.037 UTC [26] LOG:  checkpoint complete: wrote 5609 buffers (34.2%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.140 s, sync=2.860 s, total=12.809 s; sync files=101, longest=2.476 s, average=0.029 s; distance=653723 kB, estimate=731408 kB; lsn=2C/FCD88538, redo lsn=2C/DD28C260
postgres_container  | 2024-11-04 19:34:22.038 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:34:22.038 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:34:22.038 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:34:24.362 UTC [9853] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:34:37.189 UTC [26] LOG:  checkpoint complete: wrote 118 buffers (0.7%); 0 WAL file(s) added, 10 removed, 28 recycled; write=8.947 s, sync=3.807 s, total=15.151 s; sync files=209, longest=0.965 s, average=0.019 s; distance=630322 kB, estimate=721299 kB; lsn=2D/26410CE0, redo lsn=2D/3A18DD0
postgres_container  | 2024-11-04 19:34:37.190 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:34:37.190 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:34:37.190 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:34:49.165 UTC [26] LOG:  checkpoint complete: wrote 6886 buffers (42.0%); 0 WAL file(s) added, 13 removed, 31 recycled; write=6.948 s, sync=3.300 s, total=11.975 s; sync files=79, longest=2.944 s, average=0.042 s; distance=723546 kB, estimate=723546 kB; lsn=2D/4F4022D0, redo lsn=2D/2FCAF7E8
postgres_container  | 2024-11-04 19:34:49.165 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:34:49.165 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:34:49.165 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:34:56.751 UTC [9868] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:34:56.751 UTC [9868] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:34:56.751 UTC [9868] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:35:02.757 UTC [26] LOG:  checkpoint complete: wrote 4130 buffers (25.2%); 0 WAL file(s) added, 10 removed, 31 recycled; write=11.256 s, sync=1.044 s, total=13.592 s; sync files=159, longest=0.057 s, average=0.007 s; distance=665992 kB, estimate=717791 kB; lsn=2D/78836960, redo lsn=2D/58711A60
postgres_container  | 2024-11-04 19:35:02.758 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:35:02.758 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:35:02.758 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:35:14.894 UTC [26] LOG:  checkpoint complete: wrote 3971 buffers (24.2%); 0 WAL file(s) added, 4 removed, 32 recycled; write=9.055 s, sync=0.920 s, total=12.137 s; sync files=116, longest=0.640 s, average=0.008 s; distance=592209 kB, estimate=705232 kB; lsn=2D/9B4001F8, redo lsn=2D/7C9660B8
postgres_container  | 2024-11-04 19:35:14.895 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:35:14.895 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:35:14.895 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:35:26.483 UTC [26] LOG:  checkpoint complete: wrote 4643 buffers (28.3%); 0 WAL file(s) added, 9 removed, 31 recycled; write=8.325 s, sync=1.648 s, total=11.588 s; sync files=62, longest=1.277 s, average=0.027 s; distance=655610 kB, estimate=700270 kB; lsn=2D/C418A9B0, redo lsn=2D/A49A4970
postgres_container  | 2024-11-04 19:35:26.483 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:35:26.483 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:35:26.483 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:35:33.388 UTC [9882] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:35:33.388 UTC [9882] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:35:33.388 UTC [9882] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:35:39.496 UTC [26] LOG:  checkpoint complete: wrote 2351 buffers (14.3%); 0 WAL file(s) added, 9 removed, 30 recycled; write=10.940 s, sync=1.075 s, total=13.013 s; sync files=193, longest=0.088 s, average=0.006 s; distance=640793 kB, estimate=694323 kB; lsn=2D/EC48F0B8, redo lsn=2D/CBB6B168
postgres_container  | 2024-11-04 19:35:39.496 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:35:39.496 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:35:39.497 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:35:51.160 UTC [26] LOG:  checkpoint complete: wrote 3812 buffers (23.3%); 0 WAL file(s) added, 5 removed, 31 recycled; write=7.821 s, sync=1.958 s, total=11.664 s; sync files=72, longest=1.009 s, average=0.028 s; distance=591439 kB, estimate=684034 kB; lsn=2E/F400218, redo lsn=2D/EFCFF038
postgres_container  | 2024-11-04 19:35:51.161 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:35:51.161 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:35:51.161 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:36:02.937 UTC [26] LOG:  checkpoint complete: wrote 4569 buffers (27.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.530 s, sync=2.419 s, total=11.777 s; sync files=41, longest=1.656 s, average=0.059 s; distance=662606 kB, estimate=681891 kB; lsn=2E/37EAAD98, redo lsn=2E/18412C28
postgres_container  | 2024-11-04 19:36:02.938 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:36:02.938 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:36:02.938 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:36:09.554 UTC [9896] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:36:09.554 UTC [9896] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:36:09.554 UTC [9896] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:36:14.479 UTC [9894] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:36:18.909 UTC [26] LOG:  checkpoint complete: wrote 4207 buffers (25.7%); 0 WAL file(s) added, 9 removed, 30 recycled; write=13.421 s, sync=1.386 s, total=15.972 s; sync files=225, longest=0.287 s, average=0.007 s; distance=649312 kB, estimate=678633 kB; lsn=2E/60DF99A8, redo lsn=2E/3FE2AC70
postgres_container  | 2024-11-04 19:36:18.910 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:36:18.910 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:36:18.910 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:36:30.244 UTC [26] LOG:  checkpoint complete: wrote 4509 buffers (27.5%); 0 WAL file(s) added, 5 removed, 32 recycled; write=6.980 s, sync=2.567 s, total=11.335 s; sync files=74, longest=1.208 s, average=0.035 s; distance=600507 kB, estimate=670821 kB; lsn=2E/83536C08, redo lsn=2E/64899910
postgres_container  | 2024-11-04 19:36:30.245 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:36:30.245 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:36:30.245 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:36:41.673 UTC [26] LOG:  checkpoint complete: wrote 3848 buffers (23.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.088 s, sync=2.620 s, total=11.428 s; sync files=43, longest=1.743 s, average=0.061 s; distance=667143 kB, estimate=670453 kB; lsn=2E/AC4002D0, redo lsn=2E/8D41B568
postgres_container  | 2024-11-04 19:36:41.674 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:36:41.674 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:36:41.674 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:36:46.504 UTC [9909] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:36:46.504 UTC [9909] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:36:46.504 UTC [9909] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:36:55.640 UTC [26] LOG:  checkpoint complete: wrote 2390 buffers (14.6%); 0 WAL file(s) added, 9 removed, 29 recycled; write=10.786 s, sync=1.693 s, total=13.966 s; sync files=191, longest=0.420 s, average=0.009 s; distance=633279 kB, estimate=666736 kB; lsn=2E/D54021D8, redo lsn=2E/B3E8B208
postgres_container  | 2024-11-04 19:36:55.641 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:36:55.641 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:36:55.641 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:37:08.066 UTC [26] LOG:  checkpoint complete: wrote 6123 buffers (37.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.771 s, sync=1.783 s, total=12.426 s; sync files=70, longest=1.586 s, average=0.026 s; distance=668206 kB, estimate=668206 kB; lsn=2E/FC1C9BD0, redo lsn=2E/DCB16D80
postgres_container  | 2024-11-04 19:37:08.067 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:37:08.067 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:37:08.067 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:37:20.620 UTC [26] LOG:  checkpoint complete: wrote 5795 buffers (35.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=8.522 s, sync=1.920 s, total=12.553 s; sync files=105, longest=1.280 s, average=0.019 s; distance=641523 kB, estimate=665538 kB; lsn=2F/22990050, redo lsn=2F/3D93B30
postgres_container  | 2024-11-04 19:37:20.621 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:37:20.621 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:37:20.621 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:37:26.251 UTC [9923] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:37:26.251 UTC [9923] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:37:26.251 UTC [9923] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:37:38.375 UTC [26] LOG:  checkpoint complete: wrote 3282 buffers (20.0%); 0 WAL file(s) added, 13 removed, 26 recycled; write=12.589 s, sync=3.466 s, total=17.755 s; sync files=210, longest=1.141 s, average=0.017 s; distance=630556 kB, estimate=662040 kB; lsn=2F/4F41E810, redo lsn=2F/2A55ABE8
postgres_container  | 2024-11-04 19:37:38.376 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:37:38.376 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:37:38.376 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:37:51.478 UTC [26] LOG:  checkpoint complete: wrote 8374 buffers (51.1%); 0 WAL file(s) added, 16 removed, 31 recycled; write=8.715 s, sync=2.459 s, total=13.102 s; sync files=74, longest=1.918 s, average=0.034 s; distance=779748 kB, estimate=779748 kB; lsn=2F/795F3998, redo lsn=2F/59ED3D30
postgres_container  | 2024-11-04 19:37:51.479 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:37:51.479 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:37:51.479 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:38:02.645 UTC [26] LOG:  checkpoint complete: wrote 67 buffers (0.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.681 s, sync=2.509 s, total=11.166 s; sync files=17, longest=2.355 s, average=0.148 s; distance=687531 kB, estimate=770526 kB; lsn=2F/A27BEF98, redo lsn=2F/83E3ECC0
postgres_container  | 2024-11-04 19:38:02.645 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:38:02.645 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:38:02.645 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:38:04.466 UTC [9937] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:38:04.466 UTC [9937] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:38:04.466 UTC [9937] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:38:07.119 UTC [9935] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:38:07.119 UTC [9935] CONTEXT:  while scanning block 6099 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:38:18.514 UTC [26] LOG:  checkpoint complete: wrote 827 buffers (5.0%); 0 WAL file(s) added, 9 removed, 30 recycled; write=10.426 s, sync=3.651 s, total=15.870 s; sync files=219, longest=1.734 s, average=0.017 s; distance=628331 kB, estimate=756307 kB; lsn=2F/CBDC2C48, redo lsn=2F/AA3D9AA8
postgres_container  | 2024-11-04 19:38:18.515 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:38:18.515 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:38:18.515 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:38:30.727 UTC [26] LOG:  checkpoint complete: wrote 8341 buffers (50.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.151 s, sync=3.163 s, total=12.212 s; sync files=75, longest=3.086 s, average=0.043 s; distance=693993 kB, estimate=750075 kB; lsn=2F/F34B37F0, redo lsn=2F/D4993F10
postgres_container  | 2024-11-04 19:38:30.728 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:38:30.728 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:38:30.728 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:38:42.101 UTC [9950] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:38:42.101 UTC [9950] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:38:42.101 UTC [9950] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:38:42.240 UTC [26] LOG:  checkpoint complete: wrote 1261 buffers (7.7%); 0 WAL file(s) added, 8 removed, 33 recycled; write=9.522 s, sync=0.354 s, total=11.513 s; sync files=38, longest=0.252 s, average=0.010 s; distance=663682 kB, estimate=741436 kB; lsn=30/1B403030, redo lsn=2F/FD1B49A8
postgres_container  | 2024-11-04 19:38:42.241 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:38:42.241 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:38:42.241 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:38:57.223 UTC [26] LOG:  checkpoint complete: wrote 52 buffers (0.3%); 0 WAL file(s) added, 11 removed, 25 recycled; write=7.972 s, sync=5.682 s, total=14.982 s; sync files=194, longest=1.731 s, average=0.030 s; distance=600469 kB, estimate=727339 kB; lsn=30/47B7A300, redo lsn=30/21C1A0D8
postgres_container  | 2024-11-04 19:38:57.223 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:38:57.223 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:38:57.223 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:39:09.631 UTC [26] LOG:  checkpoint complete: wrote 8281 buffers (50.5%); 0 WAL file(s) added, 14 removed, 32 recycled; write=8.909 s, sync=1.547 s, total=12.408 s; sync files=83, longest=0.990 s, average=0.019 s; distance=741590 kB, estimate=741590 kB; lsn=30/6EAE6E78, redo lsn=30/4F04FB30
postgres_container  | 2024-11-04 19:39:09.632 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:39:09.632 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:39:09.632 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:39:18.814 UTC [9964] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:39:18.814 UTC [9964] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:39:18.814 UTC [9964] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:39:26.021 UTC [26] LOG:  checkpoint complete: wrote 6594 buffers (40.2%); 0 WAL file(s) added, 10 removed, 30 recycled; write=13.492 s, sync=0.942 s, total=16.389 s; sync files=221, longest=0.063 s, average=0.005 s; distance=665715 kB, estimate=734003 kB; lsn=30/9827F730, redo lsn=30/77A6C758
postgres_container  | 2024-11-04 19:39:26.021 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:39:26.021 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:39:26.021 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:39:36.630 UTC [26] LOG:  checkpoint complete: wrote 3845 buffers (23.5%); 0 WAL file(s) added, 4 removed, 33 recycled; write=8.001 s, sync=0.901 s, total=10.609 s; sync files=86, longest=0.545 s, average=0.011 s; distance=601136 kB, estimate=720716 kB; lsn=30/BACE1320, redo lsn=30/9C5789E8
postgres_container  | 2024-11-04 19:39:36.638 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 19:39:36.638 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:39:36.683 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:39:47.335 UTC [26] LOG:  checkpoint complete: wrote 4569 buffers (27.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.440 s, sync=0.710 s, total=10.697 s; sync files=42, longest=0.370 s, average=0.017 s; distance=653846 kB, estimate=714029 kB; lsn=30/E340E9B0, redo lsn=30/C43FE238
postgres_container  | 2024-11-04 19:39:47.335 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:39:47.335 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:39:47.335 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:39:52.673 UTC [9977] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:39:52.673 UTC [9977] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:39:52.673 UTC [9977] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:40:00.657 UTC [26] LOG:  checkpoint complete: wrote 2300 buffers (14.0%); 0 WAL file(s) added, 8 removed, 30 recycled; write=10.693 s, sync=1.245 s, total=13.322 s; sync files=191, longest=0.058 s, average=0.007 s; distance=634623 kB, estimate=706088 kB; lsn=31/BDA5B20, redo lsn=30/EAFBDF50
postgres_container  | 2024-11-04 19:40:00.657 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:40:00.657 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:40:00.657 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:40:12.994 UTC [26] LOG:  checkpoint complete: wrote 3761 buffers (23.0%); 0 WAL file(s) added, 7 removed, 30 recycled; write=7.343 s, sync=3.106 s, total=12.338 s; sync files=89, longest=1.213 s, average=0.035 s; distance=596241 kB, estimate=695104 kB; lsn=31/30404810, redo lsn=31/F602688
postgres_container  | 2024-11-04 19:40:12.995 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:40:12.995 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:40:12.995 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:40:25.950 UTC [26] LOG:  checkpoint complete: wrote 8499 buffers (51.9%); 0 WAL file(s) added, 12 removed, 30 recycled; write=8.462 s, sync=2.824 s, total=12.956 s; sync files=104, longest=0.622 s, average=0.028 s; distance=690942 kB, estimate=694687 kB; lsn=31/5A0E62B8, redo lsn=31/398C2078
postgres_container  | 2024-11-04 19:40:25.951 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:40:25.951 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:40:25.951 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:40:31.103 UTC [9991] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:40:31.103 UTC [9991] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:40:31.103 UTC [9991] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:40:40.531 UTC [26] LOG:  checkpoint complete: wrote 4165 buffers (25.4%); 0 WAL file(s) added, 10 removed, 30 recycled; write=10.816 s, sync=2.188 s, total=14.581 s; sync files=204, longest=0.625 s, average=0.011 s; distance=653869 kB, estimate=690606 kB; lsn=31/82C77088, redo lsn=31/6174D4A0
postgres_container  | 2024-11-04 19:40:40.532 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:40:40.532 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:40:40.532 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:40:52.553 UTC [26] LOG:  checkpoint complete: wrote 6364 buffers (38.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.870 s, sync=1.206 s, total=12.021 s; sync files=70, longest=1.039 s, average=0.018 s; distance=690769 kB, estimate=690769 kB; lsn=31/AA402150, redo lsn=31/8B9E1A68
postgres_container  | 2024-11-04 19:40:52.554 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:40:52.554 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:40:52.554 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:41:04.386 UTC [26] LOG:  checkpoint complete: wrote 2024 buffers (12.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.673 s, sync=1.158 s, total=11.832 s; sync files=35, longest=0.818 s, average=0.034 s; distance=674017 kB, estimate=689094 kB; lsn=31/D4089780, redo lsn=31/B4C1A050
postgres_container  | 2024-11-04 19:41:04.386 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:41:04.386 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:41:04.386 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:41:08.314 UTC [10005] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:41:08.314 UTC [10005] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:41:08.314 UTC [10005] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:41:12.191 UTC [10003] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:41:12.191 UTC [10003] CONTEXT:  while scanning block 14774 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:41:23.743 UTC [26] LOG:  checkpoint complete: wrote 3590 buffers (21.9%); 0 WAL file(s) added, 16 removed, 23 recycled; write=12.645 s, sync=5.098 s, total=19.358 s; sync files=234, longest=1.363 s, average=0.022 s; distance=631889 kB, estimate=683373 kB; lsn=32/3504E80, redo lsn=31/DB52E558
postgres_container  | 2024-11-04 19:41:23.746 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 19:41:23.746 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:41:23.746 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:41:36.502 UTC [26] LOG:  checkpoint complete: wrote 8340 buffers (50.9%); 0 WAL file(s) added, 16 removed, 33 recycled; write=9.710 s, sync=0.779 s, total=12.757 s; sync files=73, longest=0.674 s, average=0.011 s; distance=799477 kB, estimate=799477 kB; lsn=32/2A402128, redo lsn=32/C1EBAA8
postgres_container  | 2024-11-04 19:41:36.503 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:41:36.503 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:41:36.504 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:41:47.997 UTC [26] LOG:  checkpoint complete: wrote 1247 buffers (7.6%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.499 s, sync=2.127 s, total=11.494 s; sync files=38, longest=1.689 s, average=0.056 s; distance=678098 kB, estimate=787339 kB; lsn=32/53D1C2B0, redo lsn=32/35820368
postgres_container  | 2024-11-04 19:41:47.997 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:41:47.997 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:41:47.997 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:41:48.039 UTC [10018] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:41:48.039 UTC [10018] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:41:48.039 UTC [10018] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:42:02.171 UTC [26] LOG:  checkpoint complete: wrote 54 buffers (0.3%); 0 WAL file(s) added, 9 removed, 29 recycled; write=8.591 s, sync=3.984 s, total=14.174 s; sync files=195, longest=1.767 s, average=0.021 s; distance=629861 kB, estimate=771591 kB; lsn=32/7D63F350, redo lsn=32/5BF398D0
postgres_container  | 2024-11-04 19:42:02.172 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:42:02.172 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:42:02.172 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:42:15.593 UTC [26] LOG:  checkpoint complete: wrote 8355 buffers (51.0%); 0 WAL file(s) added, 13 removed, 29 recycled; write=7.916 s, sync=3.226 s, total=13.422 s; sync files=90, longest=2.002 s, average=0.036 s; distance=685559 kB, estimate=762988 kB; lsn=32/A73CC020, redo lsn=32/85CB7778
postgres_container  | 2024-11-04 19:42:15.594 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:42:15.594 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:42:15.594 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:42:25.129 UTC [10032] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:42:25.129 UTC [10032] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:42:25.129 UTC [10032] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:42:29.672 UTC [26] LOG:  checkpoint complete: wrote 5132 buffers (31.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=12.202 s, sync=0.690 s, total=14.078 s; sync files=197, longest=0.060 s, average=0.004 s; distance=699502 kB, estimate=756639 kB; lsn=32/CFE5C140, redo lsn=32/B07D2FA8
postgres_container  | 2024-11-04 19:42:29.672 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:42:29.672 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:42:29.672 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:42:40.936 UTC [26] LOG:  checkpoint complete: wrote 3831 buffers (23.4%); 0 WAL file(s) added, 3 removed, 32 recycled; write=5.708 s, sync=3.163 s, total=11.264 s; sync files=106, longest=1.287 s, average=0.030 s; distance=574486 kB, estimate=738424 kB; lsn=32/F2400178, redo lsn=32/D38D8828
postgres_container  | 2024-11-04 19:42:40.937 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:42:40.937 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:42:40.937 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:42:52.808 UTC [26] LOG:  checkpoint complete: wrote 4568 buffers (27.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.553 s, sync=3.233 s, total=11.871 s; sync files=42, longest=1.201 s, average=0.077 s; distance=649073 kB, estimate=729489 kB; lsn=33/1A402070, redo lsn=32/FB2B4C48
postgres_container  | 2024-11-04 19:42:52.808 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:42:52.808 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:42:52.808 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:43:00.333 UTC [10045] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:43:00.333 UTC [10045] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:43:00.333 UTC [10045] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:43:04.010 UTC [10046] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 19:43:04.010 UTC [10046] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 19:43:04.010 UTC [10046] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 19:43:04.010 UTC [10046] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 19:43:04.010 UTC [10046] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:43:04.011 UTC [10046] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:43:04.011 UTC [10046] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 19:43:04.011 UTC [10046] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:43:04.011 UTC [10046] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 19:43:04.011 UTC [10046] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 19:43:04.019 UTC [10046] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 19:43:04.019 UTC [10046] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 19:43:04.020 UTC [10046] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 19:43:04.026 UTC [10046] LOG:  skipping vacuum of "pg_toast_258924" --- lock not available
postgres_container  | 2024-11-04 19:43:06.188 UTC [26] LOG:  checkpoint complete: wrote 2593 buffers (15.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=11.682 s, sync=0.721 s, total=13.380 s; sync files=161, longest=0.054 s, average=0.005 s; distance=655010 kB, estimate=722041 kB; lsn=33/42B05330, redo lsn=33/2325D690
postgres_container  | 2024-11-04 19:43:06.188 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:43:06.188 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:06.188 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:43:17.174 UTC [26] LOG:  checkpoint complete: wrote 3935 buffers (24.0%); 0 WAL file(s) added, 2 removed, 32 recycled; write=7.526 s, sync=1.707 s, total=10.986 s; sync files=101, longest=1.127 s, average=0.017 s; distance=566905 kB, estimate=706527 kB; lsn=33/64988710, redo lsn=33/45BFBD90
postgres_container  | 2024-11-04 19:43:17.174 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:43:17.174 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:17.177 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:43:28.099 UTC [26] LOG:  checkpoint complete: wrote 4567 buffers (27.9%); 0 WAL file(s) added, 8 removed, 31 recycled; write=7.680 s, sync=1.705 s, total=10.923 s; sync files=40, longest=1.226 s, average=0.043 s; distance=636959 kB, estimate=699570 kB; lsn=33/8C32AF30, redo lsn=33/6CA03A50
postgres_container  | 2024-11-04 19:43:28.100 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:43:28.100 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:28.145 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:43:36.040 UTC [10059] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:43:36.040 UTC [10059] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:43:36.040 UTC [10059] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:43:38.730 UTC [26] LOG:  checkpoint complete: wrote 1345 buffers (8.2%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.521 s, sync=2.205 s, total=10.630 s; sync files=32, longest=1.922 s, average=0.069 s; distance=649193 kB, estimate=694533 kB; lsn=33/B20027B8, redo lsn=33/943FE098
postgres_container  | 2024-11-04 19:43:38.730 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 19:43:38.730 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:40.350 UTC [26] LOG:  checkpoints are occurring too frequently (2 seconds apart)
postgres_container  | 2024-11-04 19:43:40.350 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:40.350 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:43:52.149 UTC [26] LOG:  checkpoint complete: wrote 3768 buffers (23.0%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.130 s, sync=4.106 s, total=11.799 s; sync files=211, longest=1.987 s, average=0.020 s; distance=540677 kB, estimate=679147 kB; lsn=33/D6402338, redo lsn=33/B53FF630
postgres_container  | 2024-11-04 19:43:52.149 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:43:52.149 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:43:52.149 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:44:03.344 UTC [26] LOG:  checkpoint complete: wrote 4565 buffers (27.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.765 s, sync=1.385 s, total=11.195 s; sync files=40, longest=1.007 s, average=0.035 s; distance=674927 kB, estimate=678725 kB; lsn=33/FE3FEDD8, redo lsn=33/DE71B5D8
postgres_container  | 2024-11-04 19:44:03.345 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:44:03.345 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:44:03.345 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:44:11.989 UTC [10073] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:44:11.989 UTC [10073] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:44:11.989 UTC [10073] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:44:15.664 UTC [10071] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:44:15.664 UTC [10071] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:44:15.664 UTC [10071] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:44:18.248 UTC [26] LOG:  checkpoint complete: wrote 5596 buffers (34.2%); 0 WAL file(s) added, 10 removed, 31 recycled; write=12.922 s, sync=0.813 s, total=14.904 s; sync files=192, longest=0.067 s, average=0.005 s; distance=672157 kB, estimate=678068 kB; lsn=34/273FC948, redo lsn=34/7782B28
postgres_container  | 2024-11-04 19:44:18.249 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:44:18.249 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:44:18.249 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:44:29.653 UTC [26] LOG:  checkpoint complete: wrote 3809 buffers (23.2%); 0 WAL file(s) added, 3 removed, 32 recycled; write=8.627 s, sync=0.878 s, total=11.404 s; sync files=100, longest=0.665 s, average=0.009 s; distance=577840 kB, estimate=668046 kB; lsn=34/49400178, redo lsn=34/2ABCEEC0
postgres_container  | 2024-11-04 19:44:29.653 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:44:29.653 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:44:29.683 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:44:41.430 UTC [26] LOG:  checkpoint complete: wrote 4570 buffers (27.9%); 0 WAL file(s) added, 9 removed, 31 recycled; write=8.210 s, sync=1.922 s, total=11.777 s; sync files=43, longest=1.328 s, average=0.045 s; distance=651596 kB, estimate=666401 kB; lsn=34/724007F0, redo lsn=34/52822190
postgres_container  | 2024-11-04 19:44:41.431 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:44:41.431 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:44:41.431 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:44:48.770 UTC [10086] ERROR:  function min(json) does not exist at character 173
postgres_container  | 2024-11-04 19:44:48.770 UTC [10086] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:44:48.770 UTC [10086] STATEMENT:  CREATE TABLE lk_trans_careunit_clean AS
postgres_container  | 	SELECT src.careunit      AS source_code,
postgres_container  | 	       src.load_table_id AS load_table_id,
postgres_container  | 	       0                 AS load_row_id,
postgres_container  | 	       MIN(src.trace_id) AS trace_id
postgres_container  | 	FROM src_transfers src
postgres_container  | 	WHERE src.careunit IS NOT NULL
postgres_container  | 	GROUP BY careunit,
postgres_container  | 	         load_table_id
postgres_container  | 	;
postgres_container  | 2024-11-04 19:44:54.637 UTC [26] LOG:  checkpoint complete: wrote 2341 buffers (14.3%); 0 WAL file(s) added, 8 removed, 32 recycled; write=11.391 s, sync=0.472 s, total=13.206 s; sync files=193, longest=0.052 s, average=0.003 s; distance=652879 kB, estimate=665048 kB; lsn=34/993A9D08, redo lsn=34/7A5B60B8
postgres_container  | 2024-11-04 19:44:54.637 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:44:54.637 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:44:54.637 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:45:10.751 UTC [26] LOG:  checkpoint complete: wrote 3764 buffers (23.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=11.793 s, sync=1.942 s, total=16.115 s; sync files=75, longest=1.085 s, average=0.026 s; distance=545792 kB, estimate=653123 kB; lsn=34/BB1566F8, redo lsn=34/9BAB61A0
postgres_container  | 2024-11-04 19:45:10.752 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:45:10.752 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:45:10.752 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:45:24.287 UTC [26] LOG:  checkpoint complete: wrote 8521 buffers (52.0%); 0 WAL file(s) added, 12 removed, 30 recycled; write=9.917 s, sync=1.425 s, total=13.536 s; sync files=106, longest=0.364 s, average=0.014 s; distance=686811 kB, estimate=686811 kB; lsn=34/E685F6A8, redo lsn=34/C596D040
postgres_container  | 2024-11-04 19:45:24.288 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:45:24.288 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:45:24.406 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:45:30.728 UTC [10097] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-04 19:45:38.184 UTC [26] LOG:  checkpoint complete: wrote 4174 buffers (25.5%); 0 WAL file(s) added, 17 removed, 25 recycled; write=9.458 s, sync=2.571 s, total=13.897 s; sync files=264, longest=0.143 s, average=0.010 s; distance=682572 kB, estimate=686387 kB; lsn=35/15D5C360, redo lsn=34/EF4000C0
postgres_container  | 2024-11-04 19:45:38.185 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:45:38.185 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:45:38.185 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:45:54.220 UTC [26] LOG:  checkpoint complete: wrote 7082 buffers (43.2%); 0 WAL file(s) added, 17 removed, 29 recycled; write=11.758 s, sync=2.447 s, total=16.036 s; sync files=145, longest=0.489 s, average=0.017 s; distance=762827 kB, estimate=762827 kB; lsn=35/3F2D4180, redo lsn=35/1DCF2E18
postgres_container  | 2024-11-04 19:45:54.221 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:45:54.221 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:45:54.228 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:46:09.011 UTC [26] LOG:  checkpoint complete: wrote 10237 buffers (62.5%); 0 WAL file(s) added, 10 removed, 30 recycled; write=9.208 s, sync=3.829 s, total=14.790 s; sync files=134, longest=1.296 s, average=0.029 s; distance=653328 kB, estimate=751877 kB; lsn=35/666AC808, redo lsn=35/45AF6F10
postgres_container  | 2024-11-04 19:46:09.011 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:46:09.011 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:46:09.011 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:46:13.328 UTC [10221] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:46:13.328 UTC [10221] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:46:13.328 UTC [10221] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:46:25.915 UTC [26] LOG:  checkpoint complete: wrote 2308 buffers (14.1%); 0 WAL file(s) added, 8 removed, 32 recycled; write=13.158 s, sync=2.501 s, total=16.904 s; sync files=300, longest=1.741 s, average=0.009 s; distance=647792 kB, estimate=741468 kB; lsn=35/8CA57318, redo lsn=35/6D393020
postgres_container  | 2024-11-04 19:46:25.915 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:46:25.915 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:46:25.915 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:46:32.728 UTC [10243] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:46:32.728 UTC [10243] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:46:32.728 UTC [10243] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:46:41.915 UTC [26] LOG:  checkpoint complete: wrote 2439 buffers (14.9%); 0 WAL file(s) added, 4 removed, 30 recycled; write=12.740 s, sync=2.358 s, total=16.000 s; sync files=316, longest=1.118 s, average=0.008 s; distance=566180 kB, estimate=723940 kB; lsn=35/B04035B0, redo lsn=35/8FC7C258
postgres_container  | 2024-11-04 19:46:41.915 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:46:41.915 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:46:41.915 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:46:55.036 UTC [10256] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:46:55.036 UTC [10256] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:46:55.036 UTC [10256] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:46:57.915 UTC [26] LOG:  checkpoint complete: wrote 2563 buffers (15.6%); 0 WAL file(s) added, 3 removed, 32 recycled; write=12.837 s, sync=1.606 s, total=16.000 s; sync files=77, longest=0.778 s, average=0.021 s; distance=569593 kB, estimate=708505 kB; lsn=35/D1425090, redo lsn=35/B28BA6F0
postgres_container  | 2024-11-04 19:46:57.916 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:46:57.916 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:46:57.916 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:47:14.591 UTC [26] LOG:  checkpoint complete: wrote 3732 buffers (22.8%); 0 WAL file(s) added, 5 removed, 29 recycled; write=11.610 s, sync=3.185 s, total=16.675 s; sync files=227, longest=1.228 s, average=0.015 s; distance=550412 kB, estimate=692696 kB; lsn=35/F630AD40, redo lsn=35/D423D7C0
postgres_container  | 2024-11-04 19:47:14.592 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:47:14.592 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:47:14.592 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:47:32.659 UTC [26] LOG:  checkpoint complete: wrote 8100 buffers (49.4%); 0 WAL file(s) added, 11 removed, 32 recycled; write=13.032 s, sync=2.955 s, total=18.068 s; sync files=73, longest=1.171 s, average=0.041 s; distance=715869 kB, estimate=715869 kB; lsn=36/1EC90198, redo lsn=35/FFD54CA0
postgres_container  | 2024-11-04 19:47:32.660 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:47:32.660 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:47:32.660 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:47:49.644 UTC [10270] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:47:49.644 UTC [10270] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:47:49.644 UTC [10270] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:47:49.749 UTC [26] LOG:  checkpoint complete: wrote 2215 buffers (13.5%); 0 WAL file(s) added, 10 removed, 31 recycled; write=12.069 s, sync=3.169 s, total=17.089 s; sync files=56, longest=1.613 s, average=0.057 s; distance=673740 kB, estimate=711656 kB; lsn=36/48402080, redo lsn=36/28F47CE0
postgres_container  | 2024-11-04 19:47:49.749 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:47:49.749 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:47:49.749 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:48:06.985 UTC [26] LOG:  checkpoint complete: wrote 2165 buffers (13.2%); 0 WAL file(s) added, 9 removed, 30 recycled; write=11.024 s, sync=3.642 s, total=17.236 s; sync files=206, longest=1.952 s, average=0.018 s; distance=632356 kB, estimate=703726 kB; lsn=36/70621480, redo lsn=36/4F8D0E08
postgres_container  | 2024-11-04 19:48:06.985 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:48:06.985 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:48:07.029 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:48:21.665 UTC [26] LOG:  checkpoint complete: wrote 5950 buffers (36.3%); 0 WAL file(s) added, 12 removed, 31 recycled; write=11.121 s, sync=1.273 s, total=14.680 s; sync files=75, longest=0.329 s, average=0.017 s; distance=708501 kB, estimate=708501 kB; lsn=36/9A402278, redo lsn=36/7ACB62A8
postgres_container  | 2024-11-04 19:48:21.666 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:48:21.666 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:48:21.666 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:48:31.852 UTC [10284] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:48:31.852 UTC [10284] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:48:31.852 UTC [10284] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:48:39.949 UTC [26] LOG:  checkpoint complete: wrote 4392 buffers (26.8%); 0 WAL file(s) added, 13 removed, 29 recycled; write=14.136 s, sync=1.771 s, total=18.283 s; sync files=192, longest=0.394 s, average=0.010 s; distance=685096 kB, estimate=706160 kB; lsn=36/C6377AC8, redo lsn=36/A49C02E0
postgres_container  | 2024-11-04 19:48:39.950 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:48:39.950 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:48:39.950 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:48:52.103 UTC [26] LOG:  checkpoint complete: wrote 4317 buffers (26.3%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.827 s, sync=2.281 s, total=12.154 s; sync files=107, longest=0.993 s, average=0.022 s; distance=635254 kB, estimate=699070 kB; lsn=36/EA400178, redo lsn=36/CB61DDB0
postgres_container  | 2024-11-04 19:48:52.103 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:48:52.103 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:48:52.103 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:49:06.943 UTC [26] LOG:  checkpoint complete: wrote 4726 buffers (28.8%); 0 WAL file(s) added, 10 removed, 31 recycled; write=11.369 s, sync=1.262 s, total=14.840 s; sync files=49, longest=0.564 s, average=0.026 s; distance=672745 kB, estimate=696437 kB; lsn=37/143803D0, redo lsn=36/F47183C0
postgres_container  | 2024-11-04 19:49:06.944 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:49:06.944 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:49:06.944 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:49:13.674 UTC [10298] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:49:13.674 UTC [10298] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:49:13.674 UTC [10298] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:49:16.780 UTC [10296] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 19:49:23.118 UTC [26] LOG:  checkpoint complete: wrote 6308 buffers (38.5%); 0 WAL file(s) added, 11 removed, 29 recycled; write=12.518 s, sync=1.780 s, total=16.174 s; sync files=244, longest=0.423 s, average=0.008 s; distance=660130 kB, estimate=692806 kB; lsn=37/3E4001E8, redo lsn=37/1CBC0CB0
postgres_container  | 2024-11-04 19:49:23.119 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:49:23.119 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:49:23.119 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:49:35.993 UTC [26] LOG:  checkpoint complete: wrote 6324 buffers (38.6%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.011 s, sync=2.738 s, total=12.874 s; sync files=66, longest=1.880 s, average=0.042 s; distance=706638 kB, estimate=706638 kB; lsn=37/67638A20, redo lsn=37/47DD4888
postgres_container  | 2024-11-04 19:49:35.994 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:49:35.994 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:49:35.994 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:49:47.447 UTC [26] LOG:  checkpoint complete: wrote 2024 buffers (12.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.245 s, sync=1.992 s, total=11.454 s; sync files=35, longest=1.103 s, average=0.057 s; distance=681329 kB, estimate=704107 kB; lsn=37/903FEBB8, redo lsn=37/71730CE0
postgres_container  | 2024-11-04 19:49:47.448 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:49:47.448 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:49:47.448 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:49:50.132 UTC [10311] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:49:50.132 UTC [10311] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:49:50.132 UTC [10311] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:50:04.161 UTC [26] LOG:  checkpoint complete: wrote 1596 buffers (9.7%); 0 WAL file(s) added, 18 removed, 23 recycled; write=10.286 s, sync=4.434 s, total=16.713 s; sync files=197, longest=1.156 s, average=0.023 s; distance=674606 kB, estimate=701157 kB; lsn=37/C2C13970, redo lsn=37/9A9FC5C0
postgres_container  | 2024-11-04 19:50:04.161 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:50:04.161 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:50:04.161 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:50:17.990 UTC [26] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 17 removed, 33 recycled; write=11.103 s, sync=0.725 s, total=13.829 s; sync files=83, longest=0.475 s, average=0.009 s; distance=812438 kB, estimate=812438 kB; lsn=37/EACA7E98, redo lsn=37/CC361E60
postgres_container  | 2024-11-04 19:50:17.991 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:50:17.991 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:50:18.038 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:50:29.218 UTC [10325] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:50:29.218 UTC [10325] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:50:29.218 UTC [10325] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:50:29.764 UTC [26] LOG:  checkpoint complete: wrote 3798 buffers (23.2%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.029 s, sync=3.255 s, total=11.774 s; sync files=64, longest=2.042 s, average=0.051 s; distance=672377 kB, estimate=798432 kB; lsn=38/1442E5E8, redo lsn=37/F54002D8
postgres_container  | 2024-11-04 19:50:29.765 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:50:29.765 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:50:29.765 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:50:42.109 UTC [26] LOG:  checkpoint complete: wrote 456 buffers (2.8%); 0 WAL file(s) added, 3 removed, 32 recycled; write=7.651 s, sync=3.136 s, total=12.344 s; sync files=223, longest=1.882 s, average=0.015 s; distance=569744 kB, estimate=775563 kB; lsn=38/375F0D00, redo lsn=38/18064400
postgres_container  | 2024-11-04 19:50:42.109 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:50:42.109 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:50:42.109 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:50:54.058 UTC [26] LOG:  checkpoint complete: wrote 8142 buffers (49.7%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.394 s, sync=2.973 s, total=11.949 s; sync files=58, longest=2.906 s, average=0.052 s; distance=655217 kB, estimate=763528 kB; lsn=38/5E45F768, redo lsn=38/400408C0
postgres_container  | 2024-11-04 19:50:54.059 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:50:54.059 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:50:54.059 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:51:05.091 UTC [10339] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:51:05.091 UTC [10339] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:51:05.091 UTC [10339] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:51:05.684 UTC [26] LOG:  checkpoint complete: wrote 3044 buffers (18.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.242 s, sync=2.854 s, total=11.625 s; sync files=38, longest=2.666 s, average=0.076 s; distance=652106 kB, estimate=752386 kB; lsn=38/86FCAA50, redo lsn=38/67D13238
postgres_container  | 2024-11-04 19:51:05.684 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:51:05.684 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:51:05.684 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:51:07.673 UTC [10337] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:51:07.673 UTC [10337] CONTEXT:  while scanning block 4425 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:51:19.636 UTC [26] LOG:  checkpoint complete: wrote 332 buffers (2.0%); 0 WAL file(s) added, 5 removed, 30 recycled; write=8.583 s, sync=3.640 s, total=13.952 s; sync files=230, longest=1.976 s, average=0.016 s; distance=560720 kB, estimate=733219 kB; lsn=38/AB400598, redo lsn=38/8A0A74A8
postgres_container  | 2024-11-04 19:51:19.636 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:51:19.636 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:51:19.656 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:51:31.262 UTC [26] LOG:  checkpoint complete: wrote 8185 buffers (50.0%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.702 s, sync=2.132 s, total=11.627 s; sync files=56, longest=2.037 s, average=0.039 s; distance=691547 kB, estimate=729052 kB; lsn=38/D2D14DA8, redo lsn=38/B43FE268
postgres_container  | 2024-11-04 19:51:31.263 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:51:31.263 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:51:31.263 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:51:41.704 UTC [10352] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:51:41.704 UTC [10352] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:51:41.704 UTC [10352] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:51:42.380 UTC [26] LOG:  checkpoint complete: wrote 2991 buffers (18.3%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.852 s, sync=3.251 s, total=11.117 s; sync files=40, longest=3.213 s, average=0.082 s; distance=663204 kB, estimate=722467 kB; lsn=38/FB403948, redo lsn=38/DCBA72F8
postgres_container  | 2024-11-04 19:51:43.593 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:51:43.593 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:51:43.593 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:51:57.090 UTC [26] LOG:  checkpoint complete: wrote 3052 buffers (18.6%); 0 WAL file(s) added, 8 removed, 25 recycled; write=6.022 s, sync=5.680 s, total=13.497 s; sync files=218, longest=1.760 s, average=0.027 s; distance=532267 kB, estimate=703447 kB; lsn=39/2327E060, redo lsn=38/FD372298
postgres_container  | 2024-11-04 19:51:57.091 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:51:57.091 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:51:57.125 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:52:10.273 UTC [26] LOG:  checkpoint complete: wrote 5264 buffers (32.1%); 0 WAL file(s) added, 16 removed, 30 recycled; write=8.154 s, sync=2.545 s, total=13.183 s; sync files=54, longest=1.746 s, average=0.048 s; distance=760135 kB, estimate=760135 kB; lsn=39/4C403DD0, redo lsn=39/2B9C4158
postgres_container  | 2024-11-04 19:52:10.275 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:52:10.275 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:52:10.275 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:52:17.292 UTC [10366] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:52:17.292 UTC [10366] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:52:17.292 UTC [10366] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping vacuum of "src_transfers" --- lock not available
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping analyze of "src_patients" --- lock not available
postgres_container  | 2024-11-04 19:52:21.464 UTC [10364] LOG:  skipping analyze of "src_admissions" --- lock not available
postgres_container  | 2024-11-04 19:52:27.054 UTC [26] LOG:  checkpoint complete: wrote 4844 buffers (29.6%); 0 WAL file(s) added, 13 removed, 30 recycled; write=13.529 s, sync=1.710 s, total=16.780 s; sync files=229, longest=0.484 s, average=0.008 s; distance=698688 kB, estimate=753990 kB; lsn=39/775D73F0, redo lsn=39/56414468
postgres_container  | 2024-11-04 19:52:27.055 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:52:27.055 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:52:27.055 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:52:38.727 UTC [26] LOG:  checkpoint complete: wrote 6177 buffers (37.7%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.908 s, sync=2.372 s, total=11.672 s; sync files=74, longest=1.250 s, average=0.033 s; distance=642915 kB, estimate=742883 kB; lsn=39/9C400130, redo lsn=39/7D7ED090
postgres_container  | 2024-11-04 19:52:38.727 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:52:38.727 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:52:38.727 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:52:50.686 UTC [26] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.864 s, sync=1.019 s, total=11.959 s; sync files=38, longest=0.480 s, average=0.027 s; distance=677431 kB, estimate=736338 kB; lsn=39/C5AC6A90, redo lsn=39/A6D7AF00
postgres_container  | 2024-11-04 19:52:50.687 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:52:50.687 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:52:50.687 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:52:53.717 UTC [10379] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:52:53.717 UTC [10379] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:52:53.717 UTC [10379] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:53:07.381 UTC [26] LOG:  checkpoint complete: wrote 2135 buffers (13.0%); 0 WAL file(s) added, 18 removed, 24 recycled; write=10.908 s, sync=3.817 s, total=16.695 s; sync files=203, longest=1.211 s, average=0.019 s; distance=674724 kB, estimate=730176 kB; lsn=39/F740EB50, redo lsn=39/D0064160
postgres_container  | 2024-11-04 19:53:07.381 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:53:07.381 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:53:07.382 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:53:22.103 UTC [26] LOG:  checkpoint complete: wrote 8314 buffers (50.7%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.944 s, sync=2.584 s, total=14.722 s; sync files=79, longest=2.154 s, average=0.033 s; distance=809904 kB, estimate=809904 kB; lsn=3A/2010C9D0, redo lsn=3A/17504D0
postgres_container  | 2024-11-04 19:53:22.104 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 19:53:22.104 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:53:22.104 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:53:33.742 UTC [26] LOG:  checkpoint complete: wrote 1288 buffers (7.9%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.222 s, sync=2.844 s, total=11.638 s; sync files=93, longest=1.383 s, average=0.031 s; distance=639710 kB, estimate=792885 kB; lsn=3A/47128028, redo lsn=3A/28808028
postgres_container  | 2024-11-04 19:53:33.743 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:53:33.743 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:53:33.743 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:53:34.823 UTC [10393] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:53:34.823 UTC [10393] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:53:34.823 UTC [10393] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:53:49.066 UTC [26] LOG:  checkpoint complete: wrote 429 buffers (2.6%); 0 WAL file(s) added, 10 removed, 30 recycled; write=8.963 s, sync=3.556 s, total=15.324 s; sync files=205, longest=1.850 s, average=0.018 s; distance=655120 kB, estimate=779108 kB; lsn=3A/7144F650, redo lsn=3A/507CC050
postgres_container  | 2024-11-04 19:53:49.067 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:53:49.067 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:53:49.067 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:54:01.537 UTC [26] LOG:  checkpoint complete: wrote 8338 buffers (50.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.224 s, sync=2.111 s, total=12.470 s; sync files=67, longest=2.044 s, average=0.032 s; distance=688726 kB, estimate=770070 kB; lsn=3A/984FE900, redo lsn=3A/7A861930
postgres_container  | 2024-11-04 19:54:01.539 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:54:01.539 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:54:01.539 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:54:11.497 UTC [10407] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:54:11.497 UTC [10407] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:54:11.497 UTC [10407] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:54:13.238 UTC [26] LOG:  checkpoint complete: wrote 2907 buffers (17.7%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.005 s, sync=3.006 s, total=11.700 s; sync files=75, longest=0.640 s, average=0.041 s; distance=682937 kB, estimate=761357 kB; lsn=3A/C43838E0, redo lsn=3A/A4350108
postgres_container  | 2024-11-04 19:54:14.159 UTC [10405] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:54:14.159 UTC [10405] CONTEXT:  while scanning block 15125 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:54:14.753 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:54:14.753 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:54:14.753 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:54:26.414 UTC [26] LOG:  checkpoint complete: wrote 2406 buffers (14.7%); 0 WAL file(s) added, 4 removed, 29 recycled; write=6.029 s, sync=4.009 s, total=11.661 s; sync files=231, longest=1.343 s, average=0.018 s; distance=541377 kB, estimate=739359 kB; lsn=3A/E7400560, redo lsn=3A/C54005B8
postgres_container  | 2024-11-04 19:54:26.415 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:54:26.415 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:54:26.415 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:54:38.651 UTC [26] LOG:  checkpoint complete: wrote 6067 buffers (37.0%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.654 s, sync=1.479 s, total=12.236 s; sync files=54, longest=1.051 s, average=0.028 s; distance=703613 kB, estimate=735784 kB; lsn=3B/1042B788, redo lsn=3A/F031FA68
postgres_container  | 2024-11-04 19:54:38.652 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:54:38.652 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:54:38.652 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:54:45.087 UTC [10420] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:54:45.087 UTC [10420] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:54:45.087 UTC [10420] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:54:52.232 UTC [26] LOG:  checkpoint complete: wrote 2394 buffers (14.6%); 0 WAL file(s) added, 13 removed, 30 recycled; write=10.776 s, sync=1.557 s, total=13.581 s; sync files=201, longest=0.186 s, average=0.008 s; distance=705492 kB, estimate=732755 kB; lsn=3B/3C59ECC0, redo lsn=3B/1B414D30
postgres_container  | 2024-11-04 19:54:52.233 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:54:52.233 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:54:52.233 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:55:03.975 UTC [26] LOG:  checkpoint complete: wrote 3758 buffers (22.9%); 0 WAL file(s) added, 5 removed, 32 recycled; write=5.045 s, sync=4.377 s, total=11.742 s; sync files=65, longest=2.890 s, average=0.068 s; distance=606849 kB, estimate=720164 kB; lsn=3B/5F400130, redo lsn=3B/404B5148
postgres_container  | 2024-11-04 19:55:03.975 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:55:03.975 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:55:03.975 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:55:16.958 UTC [26] LOG:  checkpoint complete: wrote 6703 buffers (40.9%); 0 WAL file(s) added, 10 removed, 30 recycled; write=9.164 s, sync=1.670 s, total=12.983 s; sync files=75, longest=0.584 s, average=0.023 s; distance=662367 kB, estimate=714385 kB; lsn=3B/89DC0058, redo lsn=3B/68B8D050
postgres_container  | 2024-11-04 19:55:16.959 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:55:16.959 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:55:16.959 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:55:23.276 UTC [10434] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:55:23.276 UTC [10434] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:55:23.276 UTC [10434] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:55:34.273 UTC [26] LOG:  checkpoint complete: wrote 3491 buffers (21.3%); 0 WAL file(s) added, 17 removed, 26 recycled; write=12.240 s, sync=3.390 s, total=17.315 s; sync files=228, longest=1.330 s, average=0.015 s; distance=708491 kB, estimate=713795 kB; lsn=3B/B8B137E0, redo lsn=3B/93F6FE78
postgres_container  | 2024-11-04 19:55:34.274 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:55:34.274 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:55:34.274 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:55:47.151 UTC [26] LOG:  checkpoint complete: wrote 8348 buffers (51.0%); 0 WAL file(s) added, 15 removed, 33 recycled; write=9.494 s, sync=1.273 s, total=12.878 s; sync files=75, longest=1.178 s, average=0.017 s; distance=778036 kB, estimate=778036 kB; lsn=3B/E142E998, redo lsn=3B/C373D200
postgres_container  | 2024-11-04 19:55:47.153 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:55:47.153 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:55:47.153 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:55:58.550 UTC [26] LOG:  checkpoint complete: wrote 56 buffers (0.3%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.841 s, sync=0.753 s, total=11.398 s; sync files=18, longest=0.652 s, average=0.042 s; distance=671182 kB, estimate=767351 kB; lsn=3C/A4022C8, redo lsn=3B/EC6B0BA8
postgres_container  | 2024-11-04 19:55:58.550 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:55:58.550 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:55:58.550 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:56:02.268 UTC [10447] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:56:02.268 UTC [10447] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:56:02.268 UTC [10447] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:56:06.834 UTC [10448] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:56:06.834 UTC [10448] CONTEXT:  while scanning block 10121 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 19:56:06.842 UTC [10448] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 19:56:06.842 UTC [10448] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 19:56:06.842 UTC [10448] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 19:56:16.821 UTC [26] LOG:  checkpoint complete: wrote 1495 buffers (9.1%); 0 WAL file(s) added, 8 removed, 27 recycled; write=13.389 s, sync=3.170 s, total=18.271 s; sync files=202, longest=1.229 s, average=0.016 s; distance=581989 kB, estimate=748815 kB; lsn=3C/33402488, redo lsn=3C/FF0A318
postgres_container  | 2024-11-04 19:56:16.822 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 19:56:16.822 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:56:16.822 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:56:29.430 UTC [26] LOG:  checkpoint complete: wrote 8440 buffers (51.5%); 0 WAL file(s) added, 12 removed, 33 recycled; write=10.335 s, sync=0.279 s, total=12.609 s; sync files=78, longest=0.148 s, average=0.004 s; distance=724395 kB, estimate=746373 kB; lsn=3C/5AAE8128, redo lsn=3C/3C274F60
postgres_container  | 2024-11-04 19:56:29.431 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:56:29.431 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:56:29.431 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:56:40.996 UTC [10461] ERROR:  function uuid_nil() does not exist at character 44
postgres_container  | 2024-11-04 19:56:40.996 UTC [10461] HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-04 19:56:40.996 UTC [10461] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT uuid_hash(uuid_nil())          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:56:41.983 UTC [26] LOG:  checkpoint complete: wrote 996 buffers (6.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.121 s, sync=1.530 s, total=12.553 s; sync files=38, longest=1.446 s, average=0.041 s; distance=679280 kB, estimate=739663 kB; lsn=3C/84402350, redo lsn=3C/659D0FF0
postgres_container  | 2024-11-04 19:56:41.984 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:56:41.984 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:56:41.984 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:56:55.709 UTC [26] LOG:  checkpoint complete: wrote 69 buffers (0.4%); 0 WAL file(s) added, 11 removed, 28 recycled; write=7.625 s, sync=4.312 s, total=13.726 s; sync files=203, longest=1.040 s, average=0.022 s; distance=633144 kB, estimate=729012 kB; lsn=3C/AF400670, redo lsn=3C/8C41F238
postgres_container  | 2024-11-04 19:56:55.710 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:56:55.710 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:56:55.710 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:57:08.414 UTC [26] LOG:  checkpoint complete: wrote 8270 buffers (50.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=9.841 s, sync=0.629 s, total=12.705 s; sync files=69, longest=0.407 s, average=0.010 s; distance=703265 kB, estimate=726437 kB; lsn=3C/D5FE8B30, redo lsn=3C/B72E79B8
postgres_container  | 2024-11-04 19:57:08.415 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:57:08.415 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:57:08.415 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:57:19.580 UTC [10472] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-04 19:57:20.581 UTC [10473] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 19:57:20.581 UTC [10473] CONTEXT:  while scanning block 17518 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 19:57:21.198 UTC [26] LOG:  checkpoint complete: wrote 5061 buffers (30.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=10.187 s, sync=0.722 s, total=12.783 s; sync files=101, longest=0.249 s, average=0.008 s; distance=656544 kB, estimate=719448 kB; lsn=3C/FE14DAF0, redo lsn=3C/DF40FC70
postgres_container  | 2024-11-04 19:57:21.199 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 19:57:21.199 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:57:21.199 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:57:33.128 UTC [26] LOG:  checkpoint complete: wrote 6265 buffers (38.2%); 0 WAL file(s) added, 4 removed, 29 recycled; write=8.264 s, sync=1.837 s, total=11.930 s; sync files=297, longest=0.691 s, average=0.007 s; distance=545881 kB, estimate=702091 kB; lsn=3D/221992C8, redo lsn=3D/9262F8
postgres_container  | 2024-11-04 19:57:33.128 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 19:57:33.128 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:57:33.129 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:57:47.564 UTC [26] LOG:  checkpoint complete: wrote 11420 buffers (69.7%); 0 WAL file(s) added, 11 removed, 30 recycled; write=10.953 s, sync=1.672 s, total=14.436 s; sync files=127, longest=0.392 s, average=0.014 s; distance=663142 kB, estimate=698196 kB; lsn=3D/4A34A2A0, redo lsn=3D/290BFD80
postgres_container  | 2024-11-04 19:57:47.564 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 19:57:47.564 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:57:47.564 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:57:54.683 UTC [10595] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 19:57:54.683 UTC [10595] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 19:57:54.683 UTC [10595] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:57:58.879 UTC [26] LOG:  checkpoint complete: wrote 3244 buffers (19.8%); 0 WAL file(s) added, 6 removed, 33 recycled; write=6.775 s, sync=2.648 s, total=11.315 s; sync files=90, longest=2.056 s, average=0.030 s; distance=641144 kB, estimate=692491 kB; lsn=3D/6EE9B0D8, redo lsn=3D/502DE030
postgres_container  | 2024-11-04 19:57:58.880 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 19:57:58.880 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:57:58.880 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:58:15.872 UTC [26] LOG:  checkpoint complete: wrote 606 buffers (3.7%); 0 WAL file(s) added, 6 removed, 28 recycled; write=12.048 s, sync=3.312 s, total=16.993 s; sync files=269, longest=0.867 s, average=0.013 s; distance=557150 kB, estimate=678957 kB; lsn=3D/94DAC228, redo lsn=3D/722F5B98
postgres_container  | 2024-11-04 19:58:15.873 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:58:15.873 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:58:15.873 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:58:16.283 UTC [10619] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 19:58:16.283 UTC [10619] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 19:58:16.283 UTC [10619] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:58:36.399 UTC [26] LOG:  checkpoint complete: wrote 5690 buffers (34.7%); 0 WAL file(s) added, 10 removed, 31 recycled; write=15.833 s, sync=2.625 s, total=20.527 s; sync files=309, longest=1.119 s, average=0.009 s; distance=675300 kB, estimate=678591 kB; lsn=3D/BB59B800, redo lsn=3D/9B66EED0
postgres_container  | 2024-11-04 19:58:36.399 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 19:58:36.399 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:58:36.400 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:58:42.596 UTC [10632] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 19:58:42.596 UTC [10632] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 19:58:42.596 UTC [10632] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:58:56.694 UTC [26] LOG:  checkpoint complete: wrote 3239 buffers (19.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=16.192 s, sync=2.771 s, total=20.295 s; sync files=296, longest=1.920 s, average=0.010 s; distance=673941 kB, estimate=678126 kB; lsn=3D/E3400170, redo lsn=3D/C4894670
postgres_container  | 2024-11-04 19:58:56.694 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 19:58:56.694 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:58:56.737 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:59:12.433 UTC [26] LOG:  checkpoint complete: wrote 8300 buffers (50.7%); 0 WAL file(s) added, 4 removed, 32 recycled; write=10.281 s, sync=3.124 s, total=15.739 s; sync files=77, longest=1.423 s, average=0.041 s; distance=585127 kB, estimate=668826 kB; lsn=3E/7590398, redo lsn=3D/E83FE638
postgres_container  | 2024-11-04 19:59:12.434 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 19:59:12.434 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:59:12.470 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:59:29.100 UTC [26] LOG:  checkpoint complete: wrote 2624 buffers (16.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=12.565 s, sync=1.541 s, total=16.667 s; sync files=74, longest=0.525 s, average=0.021 s; distance=655386 kB, estimate=667482 kB; lsn=3E/2FEEAA68, redo lsn=3E/10405048
postgres_container  | 2024-11-04 19:59:29.101 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 19:59:29.101 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:59:29.102 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 19:59:35.677 UTC [10646] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 19:59:35.677 UTC [10646] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 19:59:35.677 UTC [10646] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 19:59:53.718 UTC [26] LOG:  checkpoint complete: wrote 4218 buffers (25.7%); 0 WAL file(s) added, 16 removed, 24 recycled; write=16.895 s, sync=4.963 s, total=24.617 s; sync files=206, longest=1.142 s, average=0.025 s; distance=662097 kB, estimate=666944 kB; lsn=3E/5F4A8DE0, redo lsn=3E/38A99778
postgres_container  | 2024-11-04 19:59:53.718 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 19:59:53.718 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 19:59:53.762 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:00:09.306 UTC [26] LOG:  checkpoint complete: wrote 7941 buffers (48.5%); 0 WAL file(s) added, 19 removed, 30 recycled; write=10.473 s, sync=2.771 s, total=15.588 s; sync files=82, longest=2.175 s, average=0.034 s; distance=802482 kB, estimate=802482 kB; lsn=3E/8A404DE0, redo lsn=3E/69A460A8
postgres_container  | 2024-11-04 20:00:09.307 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:00:09.307 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:00:09.307 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:00:22.307 UTC [26] LOG:  checkpoint complete: wrote 4134 buffers (25.2%); 0 WAL file(s) added, 13 removed, 31 recycled; write=8.102 s, sync=2.924 s, total=13.001 s; sync files=71, longest=0.908 s, average=0.042 s; distance=719877 kB, estimate=794221 kB; lsn=3E/B57A7368, redo lsn=3E/95947608
postgres_container  | 2024-11-04 20:00:22.307 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:00:22.307 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:00:22.307 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:00:22.416 UTC [10660] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:00:22.416 UTC [10660] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:00:22.416 UTC [10660] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:00:39.552 UTC [26] LOG:  checkpoint complete: wrote 125 buffers (0.8%); 0 WAL file(s) added, 10 removed, 31 recycled; write=12.846 s, sync=1.727 s, total=17.245 s; sync files=210, longest=1.429 s, average=0.009 s; distance=677169 kB, estimate=782516 kB; lsn=3E/DE3FE168, redo lsn=3E/BEE93CB8
postgres_container  | 2024-11-04 20:00:39.553 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:00:39.553 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:00:39.553 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:00:53.169 UTC [26] LOG:  checkpoint complete: wrote 8850 buffers (54.0%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.968 s, sync=1.946 s, total=13.616 s; sync files=78, longest=1.694 s, average=0.025 s; distance=661051 kB, estimate=770370 kB; lsn=3F/5CF0CE8, redo lsn=3E/E7422C58
postgres_container  | 2024-11-04 20:00:53.169 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:00:53.169 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:00:53.169 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:01:04.132 UTC [10674] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:01:04.132 UTC [10674] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:01:04.132 UTC [10674] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:01:05.588 UTC [26] LOG:  checkpoint complete: wrote 3207 buffers (19.6%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.334 s, sync=2.327 s, total=12.419 s; sync files=40, longest=1.946 s, average=0.059 s; distance=704463 kB, estimate=763779 kB; lsn=3F/30A6C488, redo lsn=3F/12416B70
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:01:05.936 UTC [10672] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:01:06.872 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:01:06.872 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:01:06.872 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:01:18.383 UTC [26] LOG:  checkpoint complete: wrote 3952 buffers (24.1%); 0 WAL file(s) added, 3 removed, 30 recycled; write=5.955 s, sync=3.637 s, total=11.511 s; sync files=237, longest=1.404 s, average=0.016 s; distance=540581 kB, estimate=741459 kB; lsn=3F/54400228, redo lsn=3F/33400098
postgres_container  | 2024-11-04 20:01:18.384 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:01:18.384 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:01:18.433 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:01:31.068 UTC [26] LOG:  checkpoint complete: wrote 4565 buffers (27.9%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.004 s, sync=2.140 s, total=12.685 s; sync files=40, longest=1.654 s, average=0.054 s; distance=701344 kB, estimate=737448 kB; lsn=3F/7D4AF090, redo lsn=3F/5E0E81B0
postgres_container  | 2024-11-04 20:01:31.069 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:01:31.069 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:01:31.069 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:01:36.427 UTC [10687] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:01:36.427 UTC [10687] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:01:36.427 UTC [10687] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:01:45.875 UTC [26] LOG:  checkpoint complete: wrote 2146 buffers (13.1%); 0 WAL file(s) added, 14 removed, 30 recycled; write=11.416 s, sync=1.709 s, total=14.807 s; sync files=202, longest=0.299 s, average=0.009 s; distance=727531 kB, estimate=736456 kB; lsn=3F/ABA22B48, redo lsn=3F/8A763170
postgres_container  | 2024-11-04 20:01:45.876 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:01:45.876 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:01:45.876 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:01:58.488 UTC [26] LOG:  checkpoint complete: wrote 6128 buffers (37.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.022 s, sync=2.615 s, total=12.613 s; sync files=65, longest=1.444 s, average=0.041 s; distance=650702 kB, estimate=727881 kB; lsn=3F/D14001C8, redo lsn=3F/B22D6CF8
postgres_container  | 2024-11-04 20:01:58.489 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:01:58.489 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:01:58.523 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:02:11.135 UTC [26] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.670 s, sync=1.678 s, total=12.647 s; sync files=50, longest=0.473 s, average=0.034 s; distance=686852 kB, estimate=723778 kB; lsn=3F/FC402310, redo lsn=3F/DC1980A0
postgres_container  | 2024-11-04 20:02:11.136 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:02:11.136 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:02:11.136 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:02:14.031 UTC [10701] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:02:14.031 UTC [10701] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:02:14.031 UTC [10701] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:02:19.219 UTC [10699] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:02:19.219 UTC [10699] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:02:19.219 UTC [10699] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:02:30.916 UTC [26] LOG:  checkpoint complete: wrote 3351 buffers (20.5%); 0 WAL file(s) added, 20 removed, 22 recycled; write=13.172 s, sync=4.537 s, total=19.780 s; sync files=239, longest=1.213 s, average=0.019 s; distance=695528 kB, estimate=720953 kB; lsn=40/2F3FEC40, redo lsn=40/68D2300
postgres_container  | 2024-11-04 20:02:30.917 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 20:02:30.917 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:02:30.974 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:02:44.798 UTC [26] LOG:  checkpoint complete: wrote 8358 buffers (51.0%); 0 WAL file(s) added, 18 removed, 33 recycled; write=10.888 s, sync=0.506 s, total=13.881 s; sync files=72, longest=0.394 s, average=0.008 s; distance=830639 kB, estimate=830639 kB; lsn=40/57636CE8, redo lsn=40/393FE038
postgres_container  | 2024-11-04 20:02:44.798 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:02:44.798 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:02:44.846 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:02:56.504 UTC [10714] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:02:56.504 UTC [10714] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:02:56.504 UTC [10714] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:02:57.026 UTC [26] LOG:  checkpoint complete: wrote 3031 buffers (18.5%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.405 s, sync=2.132 s, total=12.228 s; sync files=40, longest=1.947 s, average=0.054 s; distance=704511 kB, estimate=818026 kB; lsn=40/82D200D8, redo lsn=40/643FE028
postgres_container  | 2024-11-04 20:02:57.029 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:02:57.029 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:02:57.029 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:03:11.106 UTC [26] LOG:  checkpoint complete: wrote 78 buffers (0.5%); 0 WAL file(s) added, 8 removed, 27 recycled; write=7.558 s, sync=4.761 s, total=14.078 s; sync files=222, longest=1.093 s, average=0.022 s; distance=571424 kB, estimate=793366 kB; lsn=40/AB404F08, redo lsn=40/872063A8
postgres_container  | 2024-11-04 20:03:11.107 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:03:11.107 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:03:11.107 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:03:25.123 UTC [26] LOG:  checkpoint complete: wrote 8543 buffers (52.1%); 0 WAL file(s) added, 14 removed, 30 recycled; write=9.449 s, sync=2.471 s, total=14.017 s; sync files=113, longest=1.145 s, average=0.022 s; distance=729864 kB, estimate=787016 kB; lsn=40/D4402280, redo lsn=40/B3AC8448
postgres_container  | 2024-11-04 20:03:25.124 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:03:25.124 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:03:25.147 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:03:31.108 UTC [10728] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:03:31.108 UTC [10728] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:03:31.108 UTC [10728] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:03:39.345 UTC [26] LOG:  checkpoint complete: wrote 3293 buffers (20.1%); 0 WAL file(s) added, 14 removed, 30 recycled; write=11.288 s, sync=1.609 s, total=14.222 s; sync files=209, longest=0.271 s, average=0.008 s; distance=713943 kB, estimate=779708 kB; lsn=41/B699E0, redo lsn=40/DF3FE3C8
postgres_container  | 2024-11-04 20:03:39.346 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:03:39.346 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:03:39.346 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:03:50.355 UTC [26] LOG:  checkpoint complete: wrote 5830 buffers (35.6%); 0 WAL file(s) added, 5 removed, 33 recycled; write=6.906 s, sync=1.755 s, total=11.010 s; sync files=71, longest=0.882 s, average=0.025 s; distance=618794 kB, estimate=763617 kB; lsn=41/23412948, redo lsn=41/5048ED0
postgres_container  | 2024-11-04 20:03:50.356 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:03:50.356 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:03:50.356 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:04:01.193 UTC [26] LOG:  checkpoint complete: wrote 2557 buffers (15.6%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.174 s, sync=1.738 s, total=10.837 s; sync files=38, longest=1.188 s, average=0.046 s; distance=658418 kB, estimate=753097 kB; lsn=41/4BFC6C28, redo lsn=41/2D345720
postgres_container  | 2024-11-04 20:04:01.194 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:04:01.194 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:04:01.194 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:04:05.507 UTC [10742] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:04:05.507 UTC [10742] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:04:05.507 UTC [10742] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:04:10.037 UTC [10740] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:04:10.037 UTC [10740] CONTEXT:  while scanning block 7818 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:04:16.831 UTC [26] LOG:  checkpoint complete: wrote 2744 buffers (16.7%); 0 WAL file(s) added, 12 removed, 28 recycled; write=12.080 s, sync=2.129 s, total=15.638 s; sync files=210, longest=0.527 s, average=0.011 s; distance=665278 kB, estimate=744315 kB; lsn=41/78A60408, redo lsn=41/55CF4F48
postgres_container  | 2024-11-04 20:04:16.831 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:04:16.831 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:04:16.832 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:04:29.985 UTC [26] LOG:  checkpoint complete: wrote 6456 buffers (39.4%); 0 WAL file(s) added, 12 removed, 33 recycled; write=8.994 s, sync=1.928 s, total=13.154 s; sync files=75, longest=1.757 s, average=0.026 s; distance=725397 kB, estimate=742423 kB; lsn=41/A0C102E8, redo lsn=41/8215A408
postgres_container  | 2024-11-04 20:04:29.986 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:04:29.986 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:04:29.986 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:04:42.985 UTC [26] LOG:  checkpoint complete: wrote 2026 buffers (12.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.824 s, sync=2.427 s, total=12.999 s; sync files=36, longest=1.251 s, average=0.068 s; distance=654040 kB, estimate=733585 kB; lsn=41/C9367080, redo lsn=41/AA010768
postgres_container  | 2024-11-04 20:04:42.986 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:04:42.986 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:04:42.997 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:04:45.870 UTC [10755] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:04:45.870 UTC [10755] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:04:45.870 UTC [10755] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:04:59.517 UTC [26] LOG:  checkpoint complete: wrote 1504 buffers (9.2%); 0 WAL file(s) added, 17 removed, 23 recycled; write=10.602 s, sync=4.440 s, total=16.531 s; sync files=197, longest=1.424 s, average=0.023 s; distance=665358 kB, estimate=726762 kB; lsn=41/FA400180, redo lsn=41/D29D4070
postgres_container  | 2024-11-04 20:04:59.517 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:04:59.517 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:04:59.517 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:05:13.126 UTC [26] LOG:  checkpoint complete: wrote 8305 buffers (50.7%); 0 WAL file(s) added, 17 removed, 31 recycled; write=10.399 s, sync=1.026 s, total=13.610 s; sync files=84, longest=0.308 s, average=0.013 s; distance=777380 kB, estimate=777380 kB; lsn=42/22400168, redo lsn=42/20FD428
postgres_container  | 2024-11-04 20:05:13.127 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:05:13.127 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:05:13.127 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:05:25.593 UTC [10769] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:05:25.593 UTC [10769] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:05:25.593 UTC [10769] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:05:26.143 UTC [26] LOG:  checkpoint complete: wrote 6875 buffers (42.0%); 0 WAL file(s) added, 11 removed, 32 recycled; write=9.881 s, sync=1.845 s, total=13.016 s; sync files=93, longest=1.542 s, average=0.020 s; distance=711923 kB, estimate=770835 kB; lsn=42/4C3ABFF0, redo lsn=42/2D83A0A8
postgres_container  | 2024-11-04 20:05:26.143 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:05:26.143 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:05:26.143 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:05:37.785 UTC [26] LOG:  checkpoint complete: wrote 85 buffers (0.5%); 0 WAL file(s) added, 2 removed, 32 recycled; write=7.487 s, sync=2.546 s, total=11.643 s; sync files=211, longest=1.316 s, average=0.013 s; distance=553635 kB, estimate=749115 kB; lsn=42/6EFC6C30, redo lsn=42/4F4E2D08
postgres_container  | 2024-11-04 20:05:37.786 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:05:37.786 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:05:37.786 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:05:49.365 UTC [26] LOG:  checkpoint complete: wrote 8317 buffers (50.8%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.234 s, sync=2.616 s, total=11.579 s; sync files=66, longest=2.499 s, average=0.040 s; distance=655972 kB, estimate=739800 kB; lsn=42/95E02880, redo lsn=42/7757C0C8
postgres_container  | 2024-11-04 20:05:49.366 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:05:49.366 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:05:49.366 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:05:59.610 UTC [10782] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:05:59.610 UTC [10782] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:05:59.610 UTC [10782] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:05:59.951 UTC [26] LOG:  checkpoint complete: wrote 3109 buffers (19.0%); 0 WAL file(s) added, 7 removed, 33 recycled; write=6.830 s, sync=2.567 s, total=10.586 s; sync files=40, longest=2.489 s, average=0.065 s; distance=653687 kB, estimate=731189 kB; lsn=42/BD718C08, redo lsn=42/9F3D9E80
postgres_container  | 2024-11-04 20:05:59.951 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:05:59.951 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:05:59.951 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:06:14.294 UTC [26] LOG:  checkpoint complete: wrote 65 buffers (0.4%); 0 WAL file(s) added, 9 removed, 25 recycled; write=7.088 s, sync=5.430 s, total=14.343 s; sync files=215, longest=1.395 s, average=0.026 s; distance=557518 kB, estimate=713822 kB; lsn=42/E71A8B00, redo lsn=42/C144D8E8
postgres_container  | 2024-11-04 20:06:14.295 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:06:14.295 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:06:14.295 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:06:26.650 UTC [26] LOG:  checkpoint complete: wrote 8533 buffers (52.1%); 0 WAL file(s) added, 14 removed, 32 recycled; write=9.641 s, sync=0.590 s, total=12.355 s; sync files=105, longest=0.237 s, average=0.006 s; distance=750584 kB, estimate=750584 kB; lsn=43/EE00130, redo lsn=42/EF14B9E0
postgres_container  | 2024-11-04 20:06:26.651 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:06:26.651 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:06:26.651 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:06:32.626 UTC [10796] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:06:32.626 UTC [10796] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:06:32.626 UTC [10796] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:06:39.814 UTC [26] LOG:  checkpoint complete: wrote 2536 buffers (15.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=10.705 s, sync=1.386 s, total=13.164 s; sync files=201, longest=0.235 s, average=0.007 s; distance=693272 kB, estimate=744853 kB; lsn=43/39AFE288, redo lsn=43/19651B60
postgres_container  | 2024-11-04 20:06:39.815 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:06:39.815 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:06:39.840 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:06:50.405 UTC [26] LOG:  checkpoint complete: wrote 3814 buffers (23.3%); 0 WAL file(s) added, 3 removed, 33 recycled; write=7.531 s, sync=1.181 s, total=10.590 s; sync files=69, longest=0.971 s, average=0.018 s; distance=584769 kB, estimate=728844 kB; lsn=43/5BA751E8, redo lsn=43/3D1620F8
postgres_container  | 2024-11-04 20:06:50.406 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:06:50.406 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:06:50.431 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:07:02.327 UTC [26] LOG:  checkpoint complete: wrote 4575 buffers (27.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.055 s, sync=2.027 s, total=11.922 s; sync files=44, longest=1.447 s, average=0.047 s; distance=664207 kB, estimate=722381 kB; lsn=43/846702C0, redo lsn=43/65A06058
postgres_container  | 2024-11-04 20:07:02.328 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:07:02.328 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:07:02.328 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:07:08.386 UTC [10810] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:07:08.386 UTC [10810] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:07:08.386 UTC [10810] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:07:12.377 UTC [10808] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:07:12.377 UTC [10808] CONTEXT:  while scanning block 11453 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:07:18.979 UTC [26] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 12 removed, 30 recycled; write=12.906 s, sync=2.254 s, total=16.652 s; sync files=210, longest=0.817 s, average=0.011 s; distance=678147 kB, estimate=717957 kB; lsn=43/B066D190, redo lsn=43/8F046C68
postgres_container  | 2024-11-04 20:07:18.980 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:07:18.980 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:07:18.980 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:07:30.712 UTC [26] LOG:  checkpoint complete: wrote 6430 buffers (39.2%); 0 WAL file(s) added, 9 removed, 33 recycled; write=6.566 s, sync=3.191 s, total=11.732 s; sync files=75, longest=1.525 s, average=0.043 s; distance=688847 kB, estimate=715046 kB; lsn=43/D7612338, redo lsn=43/B90FAC08
postgres_container  | 2024-11-04 20:07:30.713 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:07:30.713 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:07:30.713 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:07:41.709 UTC [26] LOG:  checkpoint complete: wrote 2026 buffers (12.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.559 s, sync=1.592 s, total=10.996 s; sync files=35, longest=0.786 s, average=0.046 s; distance=650695 kB, estimate=708611 kB; lsn=43/FFCD3360, redo lsn=43/E0C6C840
postgres_container  | 2024-11-04 20:07:41.710 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:07:41.710 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:07:41.710 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:07:46.252 UTC [10823] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:07:46.252 UTC [10823] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:07:46.252 UTC [10823] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:07:57.660 UTC [26] LOG:  checkpoint complete: wrote 1949 buffers (11.9%); 0 WAL file(s) added, 17 removed, 24 recycled; write=10.670 s, sync=3.802 s, total=15.950 s; sync files=199, longest=1.350 s, average=0.020 s; distance=665205 kB, estimate=704270 kB; lsn=44/30400760, redo lsn=44/9609E50
postgres_container  | 2024-11-04 20:07:57.661 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:07:57.661 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:07:57.661 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:08:11.722 UTC [26] LOG:  checkpoint complete: wrote 8301 buffers (50.7%); 0 WAL file(s) added, 16 removed, 31 recycled; write=9.592 s, sync=2.474 s, total=14.062 s; sync files=74, longest=2.146 s, average=0.034 s; distance=773968 kB, estimate=773968 kB; lsn=44/57FEE9F0, redo lsn=44/389DE1C0
postgres_container  | 2024-11-04 20:08:11.723 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:08:11.723 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:08:11.723 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:08:24.534 UTC [26] LOG:  checkpoint complete: wrote 4005 buffers (24.4%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.400 s, sync=3.363 s, total=12.812 s; sync files=94, longest=1.957 s, average=0.036 s; distance=656920 kB, estimate=762264 kB; lsn=44/8041D480, redo lsn=44/60B64530
postgres_container  | 2024-11-04 20:08:24.535 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:08:24.535 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:08:24.535 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:08:24.579 UTC [10837] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:08:24.579 UTC [10837] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:08:24.579 UTC [10837] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:08:40.950 UTC [26] LOG:  checkpoint complete: wrote 71 buffers (0.4%); 0 WAL file(s) added, 17 removed, 24 recycled; write=8.882 s, sync=5.474 s, total=16.415 s; sync files=208, longest=1.826 s, average=0.027 s; distance=666114 kB, estimate=752649 kB; lsn=44/B0046130, redo lsn=44/895E4D58
postgres_container  | 2024-11-04 20:08:40.951 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:08:40.951 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:08:40.951 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:08:53.697 UTC [26] LOG:  checkpoint complete: wrote 8390 buffers (51.2%); 0 WAL file(s) added, 17 removed, 30 recycled; write=9.380 s, sync=1.020 s, total=12.747 s; sync files=90, longest=0.422 s, average=0.012 s; distance=779157 kB, estimate=779157 kB; lsn=44/D93B1988, redo lsn=44/B8ECA428
postgres_container  | 2024-11-04 20:08:53.698 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:08:53.698 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:08:53.698 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:08:58.838 UTC [10850] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:08:58.838 UTC [10850] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:08:58.838 UTC [10850] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:09:08.073 UTC [26] LOG:  checkpoint complete: wrote 2237 buffers (13.7%); 0 WAL file(s) added, 14 removed, 30 recycled; write=11.191 s, sync=1.589 s, total=14.376 s; sync files=201, longest=0.538 s, average=0.008 s; distance=706964 kB, estimate=771938 kB; lsn=45/5117118, redo lsn=44/E412F430
postgres_container  | 2024-11-04 20:09:08.074 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:09:08.074 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:09:08.074 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:09:19.592 UTC [26] LOG:  checkpoint complete: wrote 6314 buffers (38.5%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.277 s, sync=2.341 s, total=11.519 s; sync files=80, longest=1.345 s, average=0.030 s; distance=665852 kB, estimate=761329 kB; lsn=45/2C400618, redo lsn=45/CB6E468
postgres_container  | 2024-11-04 20:09:19.593 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:09:19.593 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:09:19.593 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:09:31.637 UTC [26] LOG:  checkpoint complete: wrote 2205 buffers (13.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.690 s, sync=2.238 s, total=12.044 s; sync files=38, longest=1.052 s, average=0.059 s; distance=669487 kB, estimate=752145 kB; lsn=45/54F85528, redo lsn=45/3593A210
postgres_container  | 2024-11-04 20:09:31.638 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:09:31.638 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:09:31.638 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:09:34.949 UTC [10864] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:09:34.949 UTC [10864] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:09:34.949 UTC [10864] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:09:48.470 UTC [26] LOG:  checkpoint complete: wrote 2060 buffers (12.6%); 0 WAL file(s) added, 17 removed, 24 recycled; write=11.091 s, sync=3.065 s, total=16.833 s; sync files=196, longest=0.940 s, average=0.016 s; distance=675272 kB, estimate=744458 kB; lsn=45/85401528, redo lsn=45/5ECAC5D0
postgres_container  | 2024-11-04 20:09:48.471 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:09:48.471 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:09:48.480 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:10:03.636 UTC [26] LOG:  checkpoint complete: wrote 8330 buffers (50.8%); 0 WAL file(s) added, 16 removed, 33 recycled; write=11.862 s, sync=0.215 s, total=15.165 s; sync files=69, longest=0.119 s, average=0.004 s; distance=793927 kB, estimate=793927 kB; lsn=45/AD4021D0, redo lsn=45/8F3FE438
postgres_container  | 2024-11-04 20:10:03.637 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:10:03.637 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:10:03.637 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:10:17.920 UTC [10878] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:10:17.920 UTC [10878] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:10:17.920 UTC [10878] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:10:18.253 UTC [26] LOG:  checkpoint complete: wrote 1184 buffers (7.2%); 0 WAL file(s) added, 10 removed, 32 recycled; write=9.832 s, sync=2.879 s, total=14.616 s; sync files=94, longest=2.194 s, average=0.031 s; distance=688317 kB, estimate=783366 kB; lsn=45/D86390F8, redo lsn=45/B942D8E0
postgres_container  | 2024-11-04 20:10:18.253 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:10:18.253 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:10:18.253 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:10:20.389 UTC [10876] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:10:33.369 UTC [26] LOG:  checkpoint complete: wrote 105 buffers (0.6%); 0 WAL file(s) added, 10 removed, 28 recycled; write=8.258 s, sync=4.334 s, total=15.116 s; sync files=209, longest=1.517 s, average=0.021 s; distance=624665 kB, estimate=767496 kB; lsn=46/2400590, redo lsn=45/DF633F70
postgres_container  | 2024-11-04 20:10:33.370 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:10:33.370 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:10:33.370 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:10:45.916 UTC [26] LOG:  checkpoint complete: wrote 8314 buffers (50.7%); 0 WAL file(s) added, 12 removed, 31 recycled; write=9.984 s, sync=0.537 s, total=12.546 s; sync files=80, longest=0.110 s, average=0.007 s; distance=707879 kB, estimate=761534 kB; lsn=46/2AC31800, redo lsn=46/A97DDE8
postgres_container  | 2024-11-04 20:10:45.917 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:10:45.917 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:10:45.917 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:10:54.538 UTC [10891] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:10:54.538 UTC [10891] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:10:54.538 UTC [10891] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:11:00.020 UTC [26] LOG:  checkpoint complete: wrote 2889 buffers (17.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=12.336 s, sync=0.714 s, total=14.104 s; sync files=165, longest=0.065 s, average=0.005 s; distance=692184 kB, estimate=754599 kB; lsn=46/536A5250, redo lsn=46/34D74058
postgres_container  | 2024-11-04 20:11:00.068 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:11:00.068 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:11:00.069 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:11:13.997 UTC [26] LOG:  checkpoint complete: wrote 3769 buffers (23.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=9.083 s, sync=3.232 s, total=13.929 s; sync files=105, longest=1.820 s, average=0.031 s; distance=527408 kB, estimate=731880 kB; lsn=46/75B7EC10, redo lsn=46/55080088
postgres_container  | 2024-11-04 20:11:13.998 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:11:13.998 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:11:13.998 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:11:26.211 UTC [26] LOG:  checkpoint complete: wrote 6065 buffers (37.0%); 0 WAL file(s) added, 10 removed, 30 recycled; write=6.638 s, sync=3.119 s, total=12.213 s; sync files=82, longest=2.597 s, average=0.039 s; distance=665366 kB, estimate=725229 kB; lsn=46/9E4006E0, redo lsn=46/7DA45BC0
postgres_container  | 2024-11-04 20:11:26.212 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:11:26.212 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:11:26.212 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:11:32.922 UTC [10905] ERROR:  column "care_site_id" is of type integer but expression is of type uuid at character 34
postgres_container  | 2024-11-04 20:11:32.922 UTC [10905] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:11:32.922 UTC [10905] STATEMENT:  INSERT INTO cdm_care_site
postgres_container  | 	SELECT gen_random_uuid()          AS care_site_id,
postgres_container  | 	       src.source_code       AS care_site_name,
postgres_container  | 	       vc2.concept_id        AS place_of_service_concept_id,
postgres_container  | 	       1                     AS location_id, -- hard-coded BIDMC
postgres_container  | 	       src.source_code       AS care_site_source_value,
postgres_container  | 	       src.source_code       AS place_of_service_source_value,
postgres_container  | 	       'care_site.transfers' AS unit_id,
postgres_container  | 	       src.load_table_id     AS load_table_id,
postgres_container  | 	       src.load_row_id       AS load_row_id,
postgres_container  | 	       src.trace_id          AS trace_id
postgres_container  | 	FROM lk_trans_careunit_clean src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc
postgres_container  | 	     ON vc.concept_code = src.source_code
postgres_container  | 	         AND vc.vocabulary_id = 'mimiciv_cs_place_of_service' -- gcpt_care_site
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept_relationship vcr
postgres_container  | 	     ON vc.concept_id = vcr.concept_id_1
postgres_container  | 	         AND vcr.relationship_id = 'Maps to'
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     voc_concept vc2
postgres_container  | 	     ON vc2.concept_id = vcr.concept_id_2
postgres_container  | 	         AND vc2.standard_concept = 'S'
postgres_container  | 	         AND vc2.invalid_reason IS NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:11:40.862 UTC [26] LOG:  checkpoint complete: wrote 2455 buffers (15.0%); 0 WAL file(s) added, 18 removed, 25 recycled; write=10.360 s, sync=2.723 s, total=14.651 s; sync files=265, longest=0.412 s, average=0.011 s; distance=695517 kB, estimate=722258 kB; lsn=46/CE0B6130, redo lsn=46/A817D288
postgres_container  | 2024-11-04 20:11:40.863 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:11:40.863 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:11:40.863 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:11:56.974 UTC [26] LOG:  checkpoint complete: wrote 8329 buffers (50.8%); 0 WAL file(s) added, 18 removed, 28 recycled; write=10.578 s, sync=3.357 s, total=16.112 s; sync files=143, longest=1.573 s, average=0.024 s; distance=767906 kB, estimate=767906 kB; lsn=46/F97BA9C0, redo lsn=46/D6F65CD0
postgres_container  | 2024-11-04 20:11:56.975 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:11:56.975 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:11:56.975 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:12:11.489 UTC [26] LOG:  checkpoint complete: wrote 10306 buffers (62.9%); 0 WAL file(s) added, 12 removed, 31 recycled; write=10.941 s, sync=1.574 s, total=14.514 s; sync files=135, longest=0.770 s, average=0.012 s; distance=695048 kB, estimate=760620 kB; lsn=47/2161FE80, redo lsn=47/1628038
postgres_container  | 2024-11-04 20:12:11.489 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:12:11.489 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:12:11.489 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:12:28.440 UTC [11037] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:12:28.440 UTC [11037] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:12:28.440 UTC [11037] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:12:37.999 UTC [26] LOG:  checkpoint complete: wrote 2788 buffers (17.0%); 0 WAL file(s) added, 6 removed, 33 recycled; write=22.837 s, sync=2.548 s, total=26.510 s; sync files=338, longest=1.187 s, average=0.008 s; distance=637868 kB, estimate=748345 kB; lsn=47/46D7F728, redo lsn=47/285133F8
postgres_container  | 2024-11-04 20:12:37.999 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 20:12:37.999 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:12:37.999 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:12:49.224 UTC [11057] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:12:49.224 UTC [11057] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:12:49.224 UTC [11057] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:12:53.973 UTC [26] LOG:  checkpoint complete: wrote 4725 buffers (28.8%); 0 WAL file(s) added, 1 removed, 32 recycled; write=13.985 s, sync=0.484 s, total=15.974 s; sync files=154, longest=0.141 s, average=0.004 s; distance=549459 kB, estimate=728456 kB; lsn=47/68348EE8, redo lsn=47/49DA8130
postgres_container  | 2024-11-04 20:12:53.973 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:12:53.973 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:12:53.973 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:13:11.160 UTC [26] LOG:  checkpoint complete: wrote 283 buffers (1.7%); 0 WAL file(s) added, 5 removed, 28 recycled; write=11.366 s, sync=3.412 s, total=17.187 s; sync files=225, longest=0.755 s, average=0.016 s; distance=532422 kB, estimate=708853 kB; lsn=47/8D5FC050, redo lsn=47/6A599980
postgres_container  | 2024-11-04 20:13:11.160 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 20:13:11.160 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:13:11.160 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:13:28.595 UTC [26] LOG:  checkpoint complete: wrote 7592 buffers (46.3%); 0 WAL file(s) added, 12 removed, 31 recycled; write=13.678 s, sync=1.717 s, total=17.435 s; sync files=73, longest=0.686 s, average=0.024 s; distance=711337 kB, estimate=711337 kB; lsn=47/B540CD30, redo lsn=47/95C43F98
postgres_container  | 2024-11-04 20:13:28.596 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:13:28.596 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:13:28.596 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:13:45.530 UTC [26] LOG:  checkpoint complete: wrote 2124 buffers (13.0%); 0 WAL file(s) added, 10 removed, 31 recycled; write=11.733 s, sync=3.302 s, total=16.935 s; sync files=27, longest=1.964 s, average=0.123 s; distance=671546 kB, estimate=707358 kB; lsn=47/DE402098, redo lsn=47/BEC12A20
postgres_container  | 2024-11-04 20:13:45.531 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:13:45.531 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:13:45.531 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:13:59.839 UTC [11074] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:13:59.839 UTC [11074] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:13:59.839 UTC [11074] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:14:05.532 UTC [11079] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:14:05.532 UTC [11079] CONTEXT:  while scanning block 4176 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 20:14:05.546 UTC [11079] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:14:05.546 UTC [11079] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:14:05.546 UTC [11079] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:14:17.667 UTC [26] LOG:  checkpoint complete: wrote 2453 buffers (15.0%); 0 WAL file(s) added, 9 removed, 31 recycled; write=26.473 s, sync=3.536 s, total=32.137 s; sync files=226, longest=1.826 s, average=0.016 s; distance=651840 kB, estimate=701806 kB; lsn=48/66309B0, redo lsn=47/E68A2D70
postgres_container  | 2024-11-04 20:14:17.667 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:14:33.298 UTC [26] LOG:  checkpoint complete: wrote 7905 buffers (48.2%); 0 WAL file(s) added, 11 removed, 32 recycled; write=11.863 s, sync=1.227 s, total=15.631 s; sync files=80, longest=0.554 s, average=0.016 s; distance=697254 kB, estimate=701351 kB; lsn=48/3004D0F0, redo lsn=48/1118C898
postgres_container  | 2024-11-04 20:14:33.298 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 20:14:33.298 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:14:33.320 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:14:45.898 UTC [26] LOG:  checkpoint complete: wrote 2594 buffers (15.8%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.562 s, sync=2.129 s, total=12.600 s; sync files=50, longest=1.860 s, average=0.043 s; distance=676172 kB, estimate=698833 kB; lsn=48/58C1BC18, redo lsn=48/3A5DFB68
postgres_container  | 2024-11-04 20:14:45.899 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:14:45.899 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:14:45.899 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:14:58.617 UTC [11093] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:14:58.617 UTC [11093] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:14:58.617 UTC [11093] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:15:14.927 UTC [26] LOG:  checkpoint complete: wrote 160 buffers (1.0%); 0 WAL file(s) added, 10 removed, 28 recycled; write=22.447 s, sync=4.583 s, total=29.029 s; sync files=223, longest=1.607 s, average=0.021 s; distance=627666 kB, estimate=691716 kB; lsn=48/8369DE48, redo lsn=48/60AD4590
postgres_container  | 2024-11-04 20:15:14.928 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 20:15:14.928 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:15:14.928 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:15:28.084 UTC [26] LOG:  checkpoint complete: wrote 6376 buffers (38.9%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.748 s, sync=1.880 s, total=13.157 s; sync files=91, longest=1.850 s, average=0.021 s; distance=720347 kB, estimate=720347 kB; lsn=48/AB23C2B0, redo lsn=48/8CA4B260
postgres_container  | 2024-11-04 20:15:28.085 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:15:28.085 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:15:28.105 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:15:39.320 UTC [26] LOG:  checkpoint complete: wrote 4134 buffers (25.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.017 s, sync=2.502 s, total=11.236 s; sync files=41, longest=2.265 s, average=0.061 s; distance=665291 kB, estimate=714841 kB; lsn=48/D3D02C28, redo lsn=48/B53FE048
postgres_container  | 2024-11-04 20:15:39.321 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:15:39.321 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:15:39.321 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:15:45.823 UTC [11112] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:15:45.823 UTC [11112] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:15:45.823 UTC [11112] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:16:01.064 UTC [26] LOG:  checkpoint complete: wrote 101 buffers (0.6%); 0 WAL file(s) added, 0 removed, 30 recycled; write=17.104 s, sync=2.984 s, total=21.743 s; sync files=216, longest=1.070 s, average=0.014 s; distance=500907 kB, estimate=693448 kB; lsn=48/F45BF760, redo lsn=48/D3D28CF8
postgres_container  | 2024-11-04 20:16:01.065 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:16:01.065 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:16:01.066 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:16:42.350 UTC [26] LOG:  checkpoint complete: wrote 5817 buffers (35.5%); 0 WAL file(s) added, 12 removed, 29 recycled; write=9.682 s, sync=4.035 s, total=41.285 s; sync files=89, longest=0.570 s, average=0.046 s; distance=667512 kB, estimate=690854 kB; lsn=49/1EB7A2D8, redo lsn=48/FC906D38
postgres_container  | 2024-11-04 20:16:42.557 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:17:39.601 UTC [11132] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:17:39.601 UTC [11132] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:17:39.601 UTC [11132] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:18:09.837 UTC [26] LOG:  checkpoint complete: wrote 7497 buffers (45.8%); 0 WAL file(s) added, 22 removed, 27 recycled; write=69.707 s, sync=14.518 s, total=87.487 s; sync files=256, longest=6.166 s, average=0.057 s; distance=797689 kB, estimate=797689 kB; lsn=49/5140C668, redo lsn=49/2D4051E8
postgres_container  | 2024-11-04 20:18:09.838 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:18:31.266 UTC [26] LOG:  checkpoint complete: wrote 6429 buffers (39.2%); 0 WAL file(s) added, 13 removed, 32 recycled; write=13.034 s, sync=2.290 s, total=21.428 s; sync files=91, longest=2.120 s, average=0.026 s; distance=741096 kB, estimate=792029 kB; lsn=49/79178F40, redo lsn=49/5A7BF488
postgres_container  | 2024-11-04 20:18:31.267 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:18:31.267 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:18:31.267 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:18:53.553 UTC [26] LOG:  checkpoint complete: wrote 2018 buffers (12.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=16.967 s, sync=1.122 s, total=22.287 s; sync files=37, longest=0.968 s, average=0.031 s; distance=667631 kB, estimate=779590 kB; lsn=49/A22F22D0, redo lsn=49/833BB300
postgres_container  | 2024-11-04 20:18:53.554 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:18:53.554 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:18:53.554 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:19:10.785 UTC [11151] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:19:10.785 UTC [11151] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:19:10.785 UTC [11151] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] CONTEXT:  while scanning block 3967 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:19:15.392 UTC [11154] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:19:15.415 UTC [11154] LOG:  skipping analyze of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:19:15.445 UTC [11154] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:19:15.445 UTC [11154] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:19:15.445 UTC [11154] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:19:26.547 UTC [26] LOG:  checkpoint complete: wrote 2035 buffers (12.4%); 0 WAL file(s) added, 16 removed, 23 recycled; write=26.188 s, sync=4.400 s, total=32.993 s; sync files=212, longest=1.177 s, average=0.021 s; distance=645214 kB, estimate=766152 kB; lsn=49/D24008B8, redo lsn=49/AA9D2D48
postgres_container  | 2024-11-04 20:19:26.547 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:19:39.536 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 15 removed, 33 recycled; write=8.992 s, sync=1.469 s, total=12.989 s; sync files=73, longest=1.415 s, average=0.021 s; distance=785367 kB, estimate=785367 kB; lsn=49/F85B7340, redo lsn=49/DA8C8C08
postgres_container  | 2024-11-04 20:19:39.537 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:19:39.537 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:19:39.537 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:19:49.045 UTC [26] LOG:  checkpoint complete: wrote 1463 buffers (8.9%); 0 WAL file(s) added, 7 removed, 33 recycled; write=6.311 s, sync=1.342 s, total=9.509 s; sync files=37, longest=1.186 s, average=0.037 s; distance=654933 kB, estimate=772324 kB; lsn=4A/208CF520, redo lsn=4A/285E050
postgres_container  | 2024-11-04 20:19:49.046 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:19:49.046 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:19:49.046 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:19:59.223 UTC [11170] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:19:59.223 UTC [11170] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:19:59.223 UTC [11170] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:20:14.048 UTC [26] LOG:  checkpoint complete: wrote 184 buffers (1.1%); 0 WAL file(s) added, 13 removed, 26 recycled; write=18.583 s, sync=4.647 s, total=25.002 s; sync files=230, longest=1.857 s, average=0.021 s; distance=642641 kB, estimate=759355 kB; lsn=4A/4E029170, redo lsn=4A/29BF2758
postgres_container  | 2024-11-04 20:20:14.049 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:20:14.049 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:20:14.049 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:20:26.679 UTC [26] LOG:  checkpoint complete: wrote 8548 buffers (52.2%); 0 WAL file(s) added, 15 removed, 31 recycled; write=8.700 s, sync=1.840 s, total=12.631 s; sync files=104, longest=1.272 s, average=0.018 s; distance=742344 kB, estimate=757654 kB; lsn=4A/774002A8, redo lsn=4A/570E4888
postgres_container  | 2024-11-04 20:20:26.680 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:20:26.680 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:20:26.681 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:20:42.751 UTC [11189] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:20:42.751 UTC [11189] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:20:42.751 UTC [11189] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:20:49.343 UTC [26] LOG:  checkpoint complete: wrote 2597 buffers (15.9%); 0 WAL file(s) added, 12 removed, 30 recycled; write=20.164 s, sync=1.436 s, total=22.663 s; sync files=211, longest=0.226 s, average=0.007 s; distance=690176 kB, estimate=750907 kB; lsn=4A/A28D4048, redo lsn=4A/812E4B58
postgres_container  | 2024-11-04 20:20:49.344 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:20:49.344 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:20:49.344 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:21:02.092 UTC [26] LOG:  checkpoint complete: wrote 3800 buffers (23.2%); 0 WAL file(s) added, 5 removed, 31 recycled; write=8.330 s, sync=2.233 s, total=12.748 s; sync files=70, longest=1.070 s, average=0.032 s; distance=598241 kB, estimate=735640 kB; lsn=4A/C5155F48, redo lsn=4A/A5B1D330
postgres_container  | 2024-11-04 20:21:02.093 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:21:02.093 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:21:02.093 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:21:15.357 UTC [26] LOG:  checkpoint complete: wrote 4565 buffers (27.9%); 0 WAL file(s) added, 12 removed, 29 recycled; write=7.513 s, sync=3.924 s, total=13.264 s; sync files=75, longest=1.812 s, average=0.053 s; distance=674929 kB, estimate=729569 kB; lsn=4A/F040DF00, redo lsn=4A/CEE399E0
postgres_container  | 2024-11-04 20:21:15.358 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:21:15.358 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:21:15.358 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:21:28.160 UTC [11208] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:21:28.160 UTC [11208] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:21:28.160 UTC [11208] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:21:42.413 UTC [26] LOG:  checkpoint complete: wrote 4905 buffers (29.9%); 0 WAL file(s) added, 13 removed, 30 recycled; write=22.288 s, sync=2.191 s, total=27.056 s; sync files=240, longest=1.092 s, average=0.010 s; distance=698549 kB, estimate=726467 kB; lsn=4B/1A213B18, redo lsn=4A/F9867070
postgres_container  | 2024-11-04 20:21:42.414 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 20:21:42.414 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:21:42.414 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:21:55.285 UTC [26] LOG:  checkpoint complete: wrote 6340 buffers (38.7%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.601 s, sync=2.071 s, total=12.871 s; sync files=71, longest=1.965 s, average=0.030 s; distance=726925 kB, estimate=726925 kB; lsn=4B/44402300, redo lsn=4B/25E4A6D0
postgres_container  | 2024-11-04 20:21:55.285 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:21:55.285 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:21:55.286 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:22:05.939 UTC [26] LOG:  checkpoint complete: wrote 1977 buffers (12.1%); 0 WAL file(s) added, 8 removed, 33 recycled; write=6.762 s, sync=1.423 s, total=10.654 s; sync files=37, longest=0.802 s, average=0.039 s; distance=657279 kB, estimate=719961 kB; lsn=4B/6CD7E210, redo lsn=4B/4E02A648
postgres_container  | 2024-11-04 20:22:05.940 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:22:05.940 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:22:05.940 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:22:19.555 UTC [11227] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:22:19.555 UTC [11227] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:22:19.555 UTC [11227] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:22:33.531 UTC [26] LOG:  checkpoint complete: wrote 2612 buffers (15.9%); 0 WAL file(s) added, 16 removed, 23 recycled; write=21.861 s, sync=4.350 s, total=27.591 s; sync files=247, longest=1.314 s, average=0.018 s; distance=644599 kB, estimate=712424 kB; lsn=4B/9D400808, redo lsn=4B/755A8400
postgres_container  | 2024-11-04 20:22:33.531 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 20:22:33.531 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:22:33.531 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:22:46.681 UTC [26] LOG:  checkpoint complete: wrote 8360 buffers (51.0%); 0 WAL file(s) added, 14 removed, 33 recycled; write=10.604 s, sync=0.509 s, total=13.150 s; sync files=77, longest=0.390 s, average=0.007 s; distance=773111 kB, estimate=773111 kB; lsn=4B/C2CB3AA8, redo lsn=4B/A48A6030
postgres_container  | 2024-11-04 20:22:46.682 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:22:46.682 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:22:46.682 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:22:57.053 UTC [26] LOG:  checkpoint complete: wrote 951 buffers (5.8%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.743 s, sync=1.069 s, total=10.371 s; sync files=39, longest=0.946 s, average=0.028 s; distance=668738 kB, estimate=762673 kB; lsn=4B/EB62F460, redo lsn=4B/CD5B6B40
postgres_container  | 2024-11-04 20:22:57.054 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:22:57.054 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:22:57.054 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:23:06.408 UTC [11245] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:23:06.408 UTC [11245] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:23:06.408 UTC [11245] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:23:07.723 UTC [11250] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:23:07.729 UTC [11250] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:23:07.729 UTC [11250] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:23:07.729 UTC [11250] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:23:21.659 UTC [26] LOG:  checkpoint complete: wrote 150 buffers (0.9%); 0 WAL file(s) added, 12 removed, 25 recycled; write=17.194 s, sync=5.310 s, total=24.605 s; sync files=224, longest=1.762 s, average=0.024 s; distance=603541 kB, estimate=746760 kB; lsn=4C/18B914F0, redo lsn=4B/F231C1B8
postgres_container  | 2024-11-04 20:23:21.659 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:23:21.659 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:23:21.699 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:23:34.728 UTC [26] LOG:  checkpoint complete: wrote 8429 buffers (51.4%); 0 WAL file(s) added, 16 removed, 31 recycled; write=10.202 s, sync=0.846 s, total=13.069 s; sync files=89, longest=0.327 s, average=0.010 s; distance=770951 kB, estimate=770951 kB; lsn=4C/411282B0, redo lsn=4C/213FE170
postgres_container  | 2024-11-04 20:23:34.728 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:23:34.728 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:23:34.729 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:23:50.887 UTC [11264] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:23:50.887 UTC [11264] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:23:50.887 UTC [11264] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:23:58.462 UTC [26] LOG:  checkpoint complete: wrote 2347 buffers (14.3%); 0 WAL file(s) added, 12 removed, 30 recycled; write=20.863 s, sync=1.443 s, total=23.734 s; sync files=206, longest=0.249 s, average=0.007 s; distance=686613 kB, estimate=762518 kB; lsn=4C/6C4001C8, redo lsn=4C/4B2835F0
postgres_container  | 2024-11-04 20:23:58.463 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:23:58.463 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:23:58.463 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:24:10.311 UTC [26] LOG:  checkpoint complete: wrote 6112 buffers (37.3%); 0 WAL file(s) added, 6 removed, 31 recycled; write=7.574 s, sync=2.365 s, total=11.849 s; sync files=69, longest=1.244 s, average=0.035 s; distance=619475 kB, estimate=748213 kB; lsn=4C/90727630, redo lsn=4C/70F78408
postgres_container  | 2024-11-04 20:24:10.312 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:24:10.312 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:24:10.312 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:24:22.961 UTC [26] LOG:  checkpoint complete: wrote 6145 buffers (37.5%); 0 WAL file(s) added, 10 removed, 30 recycled; write=7.404 s, sync=3.355 s, total=12.649 s; sync files=103, longest=1.831 s, average=0.033 s; distance=653736 kB, estimate=738766 kB; lsn=4C/B94022D0, redo lsn=4C/98DE24E0
postgres_container  | 2024-11-04 20:24:22.961 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:24:22.961 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:24:22.962 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:24:36.747 UTC [11283] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:24:36.747 UTC [11283] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:24:36.747 UTC [11283] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:24:51.302 UTC [26] LOG:  checkpoint complete: wrote 3236 buffers (19.8%); 0 WAL file(s) added, 16 removed, 26 recycled; write=23.043 s, sync=3.221 s, total=28.341 s; sync files=213, longest=0.401 s, average=0.016 s; distance=680400 kB, estimate=732929 kB; lsn=4C/E6E3A108, redo lsn=4C/C2656708
postgres_container  | 2024-11-04 20:24:51.303 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 20:24:51.303 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:24:51.308 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:25:06.425 UTC [26] LOG:  checkpoint complete: wrote 6375 buffers (38.9%); 0 WAL file(s) added, 13 removed, 31 recycled; write=12.301 s, sync=0.757 s, total=15.123 s; sync files=75, longest=0.357 s, average=0.011 s; distance=727145 kB, estimate=732351 kB; lsn=4D/E05A148, redo lsn=4C/EEC70EE0
postgres_container  | 2024-11-04 20:25:06.426 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:25:06.426 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:25:06.426 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:25:18.619 UTC [26] LOG:  checkpoint complete: wrote 5052 buffers (30.8%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.528 s, sync=1.546 s, total=12.193 s; sync files=101, longest=1.026 s, average=0.016 s; distance=662340 kB, estimate=725350 kB; lsn=4D/35F81268, redo lsn=4D/17342220
postgres_container  | 2024-11-04 20:25:18.619 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:25:18.619 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:25:18.619 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:25:27.980 UTC [11302] ERROR:  column "load_row_id" is of type integer but expression is of type uuid at character 2347
postgres_container  | 2024-11-04 20:25:27.980 UTC [11302] HINT:  You will need to rewrite or cast the expression.
postgres_container  | 2024-11-04 20:25:27.980 UTC [11302] STATEMENT:  INSERT INTO cdm_person
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-04 20:25:43.201 UTC [26] LOG:  checkpoint complete: wrote 1311 buffers (8.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=20.790 s, sync=1.634 s, total=24.582 s; sync files=216, longest=0.887 s, average=0.008 s; distance=658453 kB, estimate=718660 kB; lsn=4D/5E400240, redo lsn=4D/3F6478F0
postgres_container  | 2024-11-04 20:25:43.202 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:25:43.202 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:25:43.202 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:25:55.561 UTC [26] LOG:  checkpoint complete: wrote 8337 buffers (50.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.961 s, sync=2.321 s, total=12.360 s; sync files=73, longest=2.144 s, average=0.032 s; distance=681720 kB, estimate=714966 kB; lsn=4D/87E8A800, redo lsn=4D/690059A8
postgres_container  | 2024-11-04 20:25:55.562 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:25:55.562 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:25:55.562 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:26:06.949 UTC [26] LOG:  checkpoint complete: wrote 776 buffers (4.7%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.142 s, sync=2.071 s, total=11.387 s; sync files=37, longest=1.980 s, average=0.056 s; distance=665030 kB, estimate=709972 kB; lsn=4D/B0541EB8, redo lsn=4D/91977320
postgres_container  | 2024-11-04 20:26:06.949 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:26:06.949 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:26:06.950 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:26:14.065 UTC [11318] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:26:14.065 UTC [11318] CONTEXT:  while scanning block 11813 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:26:25.775 UTC [26] LOG:  checkpoint complete: wrote 558 buffers (3.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=13.857 s, sync=3.054 s, total=18.826 s; sync files=315, longest=1.228 s, average=0.010 s; distance=637479 kB, estimate=702723 kB; lsn=4D/D7748258, redo lsn=4D/B88011B8
postgres_container  | 2024-11-04 20:26:25.776 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 20:26:25.776 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:26:25.816 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:26:40.512 UTC [26] LOG:  checkpoint complete: wrote 9494 buffers (57.9%); 0 WAL file(s) added, 5 removed, 32 recycled; write=9.924 s, sync=2.790 s, total=14.736 s; sync files=155, longest=2.197 s, average=0.018 s; distance=602107 kB, estimate=692661 kB; lsn=4D/FCAF7F50, redo lsn=4D/DD4000E8
postgres_container  | 2024-11-04 20:26:40.513 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:26:40.513 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:26:40.513 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:26:50.993 UTC [26] LOG:  checkpoint complete: wrote 2017 buffers (12.3%); 0 WAL file(s) added, 6 removed, 32 recycled; write=6.421 s, sync=2.309 s, total=10.481 s; sync files=99, longest=1.751 s, average=0.024 s; distance=629583 kB, estimate=686354 kB; lsn=4E/226E96C8, redo lsn=4E/3AD3FF8
postgres_container  | 2024-11-04 20:26:50.994 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:26:50.994 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:26:50.994 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:27:02.764 UTC [11456] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:27:02.764 UTC [11456] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:27:21.373 UTC [26] LOG:  checkpoint complete: wrote 1465 buffers (8.9%); 0 WAL file(s) added, 9 removed, 31 recycled; write=26.710 s, sync=1.833 s, total=30.379 s; sync files=264, longest=0.868 s, average=0.007 s; distance=648418 kB, estimate=682560 kB; lsn=4E/4BA077A8, redo lsn=4E/2B40CB10
postgres_container  | 2024-11-04 20:27:21.374 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:27:24.915 UTC [11476] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:27:24.915 UTC [11476] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:27:40.575 UTC [26] LOG:  checkpoint complete: wrote 3607 buffers (22.0%); 0 WAL file(s) added, 9 removed, 30 recycled; write=14.066 s, sync=3.192 s, total=19.202 s; sync files=330, longest=1.429 s, average=0.010 s; distance=641403 kB, estimate=678444 kB; lsn=4E/739F6E28, redo lsn=4E/5266B848
postgres_container  | 2024-11-04 20:27:40.576 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 20:27:40.576 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:27:40.576 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:27:46.979 UTC [11493] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:27:46.979 UTC [11493] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:28:02.202 UTC [26] LOG:  checkpoint complete: wrote 3092 buffers (18.9%); 0 WAL file(s) added, 11 removed, 31 recycled; write=16.844 s, sync=2.536 s, total=21.626 s; sync files=304, longest=1.695 s, average=0.009 s; distance=691246 kB, estimate=691246 kB; lsn=4E/9C42E318, redo lsn=4E/7C977348
postgres_container  | 2024-11-04 20:28:02.202 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:28:02.202 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:28:02.202 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:28:17.441 UTC [26] LOG:  checkpoint complete: wrote 7730 buffers (47.2%); 0 WAL file(s) added, 13 removed, 32 recycled; write=11.604 s, sync=1.492 s, total=15.240 s; sync files=76, longest=0.524 s, average=0.020 s; distance=730541 kB, estimate=730541 kB; lsn=4E/C84040A0, redo lsn=4E/A92E2928
postgres_container  | 2024-11-04 20:28:17.442 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 20:28:17.442 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:28:17.442 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:28:34.094 UTC [26] LOG:  checkpoint complete: wrote 2157 buffers (13.2%); 0 WAL file(s) added, 9 removed, 31 recycled; write=11.857 s, sync=2.699 s, total=16.652 s; sync files=53, longest=1.288 s, average=0.051 s; distance=659502 kB, estimate=723437 kB; lsn=4E/F109F2C8, redo lsn=4E/D16EE510
postgres_container  | 2024-11-04 20:28:34.094 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 20:28:34.094 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:28:34.094 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:28:48.840 UTC [11513] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:28:48.840 UTC [11513] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:29:01.958 UTC [26] LOG:  checkpoint complete: wrote 2188 buffers (13.4%); 0 WAL file(s) added, 8 removed, 31 recycled; write=23.493 s, sync=2.321 s, total=27.864 s; sync files=235, longest=0.868 s, average=0.010 s; distance=638985 kB, estimate=714992 kB; lsn=4F/180E4758, redo lsn=4E/F86F0988
postgres_container  | 2024-11-04 20:29:01.958 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 20:29:01.958 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:29:01.959 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:29:15.198 UTC [26] LOG:  checkpoint complete: wrote 7613 buffers (46.5%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.157 s, sync=2.128 s, total=13.240 s; sync files=74, longest=1.777 s, average=0.029 s; distance=682750 kB, estimate=711768 kB; lsn=4F/40BFEB68, redo lsn=4F/221B03A0
postgres_container  | 2024-11-04 20:29:15.198 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:29:15.198 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:29:15.199 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:29:28.253 UTC [26] LOG:  checkpoint complete: wrote 2338 buffers (14.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.920 s, sync=3.257 s, total=13.055 s; sync files=63, longest=2.678 s, average=0.052 s; distance=671849 kB, estimate=707776 kB; lsn=4F/6A402320, redo lsn=4F/4B1CAB20
postgres_container  | 2024-11-04 20:29:28.254 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:29:28.254 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:29:28.254 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:29:41.027 UTC [11533] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:29:41.027 UTC [11533] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:29:57.179 UTC [26] LOG:  checkpoint complete: wrote 266 buffers (1.6%); 0 WAL file(s) added, 8 removed, 32 recycled; write=22.800 s, sync=4.318 s, total=28.926 s; sync files=219, longest=2.897 s, average=0.020 s; distance=654960 kB, estimate=702494 kB; lsn=4F/9254F1C0, redo lsn=4F/73166E18
postgres_container  | 2024-11-04 20:29:57.180 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 20:29:57.180 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:29:57.180 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:30:10.299 UTC [26] LOG:  checkpoint complete: wrote 8883 buffers (54.2%); 0 WAL file(s) added, 7 removed, 31 recycled; write=9.126 s, sync=1.813 s, total=13.120 s; sync files=83, longest=1.512 s, average=0.022 s; distance=637387 kB, estimate=695984 kB; lsn=4F/B98A4F90, redo lsn=4F/99FD9B90
postgres_container  | 2024-11-04 20:30:10.300 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:30:10.300 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:30:10.300 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:30:22.239 UTC [26] LOG:  checkpoint complete: wrote 3856 buffers (23.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.045 s, sync=2.108 s, total=11.940 s; sync files=100, longest=1.717 s, average=0.022 s; distance=650453 kB, estimate=691431 kB; lsn=4F/E0778AC8, redo lsn=4F/C1B0F328
postgres_container  | 2024-11-04 20:30:22.240 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:30:22.240 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:30:22.240 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:30:31.610 UTC [11553] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:30:31.610 UTC [11553] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:30:44.525 UTC [26] LOG:  checkpoint complete: wrote 229 buffers (1.4%); 0 WAL file(s) added, 5 removed, 32 recycled; write=17.792 s, sync=2.700 s, total=22.285 s; sync files=215, longest=1.432 s, average=0.013 s; distance=599706 kB, estimate=682258 kB; lsn=50/5DD30A8, redo lsn=4F/E64B5E18
postgres_container  | 2024-11-04 20:30:44.525 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:30:44.525 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:30:44.526 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:30:55.429 UTC [26] LOG:  checkpoint complete: wrote 8310 buffers (50.7%); 0 WAL file(s) added, 7 removed, 33 recycled; write=6.953 s, sync=2.339 s, total=10.904 s; sync files=69, longest=2.226 s, average=0.034 s; distance=658968 kB, estimate=679929 kB; lsn=50/2CA5AFB0, redo lsn=50/E83C090
postgres_container  | 2024-11-04 20:30:55.430 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:30:55.430 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:30:55.430 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:31:06.569 UTC [26] LOG:  checkpoint complete: wrote 2959 buffers (18.1%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.257 s, sync=2.107 s, total=11.139 s; sync files=38, longest=2.040 s, average=0.056 s; distance=640828 kB, estimate=676019 kB; lsn=50/545445C8, redo lsn=50/35A0B310
postgres_container  | 2024-11-04 20:31:06.571 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:31:06.571 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:31:06.571 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:31:13.642 UTC [11573] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:31:13.642 UTC [11573] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:31:18.397 UTC [11565] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:31:29.922 UTC [26] LOG:  checkpoint complete: wrote 347 buffers (2.1%); 0 WAL file(s) added, 4 removed, 30 recycled; write=18.172 s, sync=3.263 s, total=23.351 s; sync files=239, longest=1.699 s, average=0.014 s; distance=562919 kB, estimate=664709 kB; lsn=50/78044798, redo lsn=50/57FC50B0
postgres_container  | 2024-11-04 20:31:29.923 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:31:29.923 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:31:29.923 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:31:42.153 UTC [26] LOG:  checkpoint complete: wrote 8290 buffers (50.6%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.340 s, sync=3.185 s, total=12.231 s; sync files=63, longest=2.917 s, average=0.051 s; distance=661758 kB, estimate=664414 kB; lsn=50/9F42C070, redo lsn=50/80604B60
postgres_container  | 2024-11-04 20:31:42.154 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:31:42.154 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:31:42.180 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:31:54.266 UTC [26] LOG:  checkpoint complete: wrote 3135 buffers (19.1%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.575 s, sync=2.559 s, total=12.113 s; sync files=39, longest=2.484 s, average=0.066 s; distance=653285 kB, estimate=663301 kB; lsn=50/C64F4808, redo lsn=50/A83FE2E8
postgres_container  | 2024-11-04 20:31:54.267 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:31:54.267 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:31:54.267 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:32:02.796 UTC [11592] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:32:02.796 UTC [11592] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 20:32:04.385 UTC [11593] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:32:04.438 UTC [11593] LOG:  skipping analyze of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:32:04.459 UTC [11593] LOG:  skipping analyze of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:32:04.459 UTC [11593] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:32:04.459 UTC [11593] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:32:04.459 UTC [11593] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:32:04.459 UTC [11593] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:32:04.460 UTC [11593] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:32:04.460 UTC [11593] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 20:32:04.460 UTC [11593] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:32:04.460 UTC [11593] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:32:04.460 UTC [11593] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:32:15.655 UTC [26] LOG:  checkpoint complete: wrote 89 buffers (0.5%); 0 WAL file(s) added, 2 removed, 31 recycled; write=16.679 s, sync=2.991 s, total=21.389 s; sync files=218, longest=1.593 s, average=0.014 s; distance=547915 kB, estimate=651762 kB; lsn=50/E9BB0A18, redo lsn=50/C9B11128
postgres_container  | 2024-11-04 20:32:15.656 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 20:32:15.656 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:32:15.656 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:32:27.405 UTC [26] LOG:  checkpoint complete: wrote 8425 buffers (51.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.713 s, sync=2.469 s, total=11.750 s; sync files=74, longest=2.387 s, average=0.034 s; distance=666819 kB, estimate=666819 kB; lsn=51/10F6CBF0, redo lsn=50/F2642020
postgres_container  | 2024-11-04 20:32:27.406 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:32:27.406 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:32:27.406 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:32:38.447 UTC [26] LOG:  checkpoint complete: wrote 3035 buffers (18.5%); 0 WAL file(s) added, 7 removed, 33 recycled; write=9.114 s, sync=0.167 s, total=11.041 s; sync files=38, longest=0.139 s, average=0.005 s; distance=652056 kB, estimate=665343 kB; lsn=51/384002F0, redo lsn=51/1A3083B0
postgres_container  | 2024-11-04 20:32:38.448 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:32:38.448 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:32:38.448 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:32:46.282 UTC [11612] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:32:46.282 UTC [11612] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:32:58.382 UTC [26] LOG:  checkpoint complete: wrote 146 buffers (0.9%); 0 WAL file(s) added, 2 removed, 31 recycled; write=15.299 s, sync=2.957 s, total=19.935 s; sync files=215, longest=1.591 s, average=0.014 s; distance=543415 kB, estimate=653150 kB; lsn=51/5B402290, redo lsn=51/3B5B6210
postgres_container  | 2024-11-04 20:32:58.383 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 20:32:58.383 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:32:58.383 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:33:09.915 UTC [26] LOG:  checkpoint complete: wrote 8293 buffers (50.6%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.286 s, sync=2.450 s, total=11.533 s; sync files=68, longest=2.199 s, average=0.037 s; distance=657220 kB, estimate=657220 kB; lsn=51/82632078, redo lsn=51/637874B8
postgres_container  | 2024-11-04 20:33:09.916 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:33:09.916 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:33:09.917 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:33:22.781 UTC [26] LOG:  checkpoint complete: wrote 4955 buffers (30.2%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.138 s, sync=2.792 s, total=12.865 s; sync files=98, longest=2.364 s, average=0.029 s; distance=659051 kB, estimate=659051 kB; lsn=51/AAF30958, redo lsn=51/8BB22118
postgres_container  | 2024-11-04 20:33:22.782 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:33:22.782 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:33:22.782 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:33:31.272 UTC [11632] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:33:31.272 UTC [11632] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:33:43.641 UTC [26] LOG:  checkpoint complete: wrote 243 buffers (1.5%); 0 WAL file(s) added, 2 removed, 32 recycled; write=16.348 s, sync=2.840 s, total=20.859 s; sync files=217, longest=1.558 s, average=0.014 s; distance=547949 kB, estimate=647940 kB; lsn=51/CCBB9C40, redo lsn=51/AD23D738
postgres_container  | 2024-11-04 20:33:43.642 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 20:33:43.642 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:33:43.642 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:33:55.083 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.372 s, sync=2.551 s, total=11.442 s; sync files=71, longest=2.451 s, average=0.036 s; distance=657231 kB, estimate=657231 kB; lsn=51/F40465E8, redo lsn=51/D5411398
postgres_container  | 2024-11-04 20:33:55.084 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:33:55.084 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:33:55.152 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:34:06.220 UTC [26] LOG:  checkpoint complete: wrote 4136 buffers (25.2%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.304 s, sync=2.128 s, total=11.136 s; sync files=39, longest=2.013 s, average=0.055 s; distance=655283 kB, estimate=657036 kB; lsn=52/1BAA6A08, redo lsn=51/FD3FE020
postgres_container  | 2024-11-04 20:34:06.221 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:34:06.221 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:34:06.221 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:34:16.844 UTC [11652] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:34:16.844 UTC [11652] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:34:18.570 UTC [11644] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:34:29.646 UTC [26] LOG:  checkpoint complete: wrote 375 buffers (2.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=18.335 s, sync=3.149 s, total=23.426 s; sync files=241, longest=1.618 s, average=0.014 s; distance=550027 kB, estimate=646335 kB; lsn=52/3E4022C0, redo lsn=52/1ED20E58
postgres_container  | 2024-11-04 20:34:29.647 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:34:29.647 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:34:29.647 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:34:40.723 UTC [26] LOG:  checkpoint complete: wrote 8289 buffers (50.6%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.329 s, sync=2.137 s, total=11.076 s; sync files=60, longest=2.074 s, average=0.036 s; distance=678863 kB, estimate=678863 kB; lsn=52/66402298, redo lsn=52/48414C88
postgres_container  | 2024-11-04 20:34:40.724 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:34:40.724 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:34:40.724 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:34:51.864 UTC [26] LOG:  checkpoint complete: wrote 3097 buffers (18.9%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.061 s, sync=2.476 s, total=11.141 s; sync files=38, longest=2.364 s, average=0.066 s; distance=651689 kB, estimate=676146 kB; lsn=52/8E402290, redo lsn=52/7007F2F8
postgres_container  | 2024-11-04 20:34:59.911 UTC [11671] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:34:59.911 UTC [11671] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:35:01.868 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 20:35:01.868 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:35:01.868 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:35:12.790 UTC [26] LOG:  checkpoint complete: wrote 2018 buffers (12.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.349 s, sync=2.775 s, total=10.923 s; sync files=245, longest=1.535 s, average=0.012 s; distance=544269 kB, estimate=662958 kB; lsn=52/B1392018, redo lsn=52/914028E8
postgres_container  | 2024-11-04 20:35:12.791 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:35:12.791 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:35:12.791 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:35:24.565 UTC [26] LOG:  checkpoint complete: wrote 7009 buffers (42.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.429 s, sync=2.701 s, total=11.774 s; sync files=80, longest=2.590 s, average=0.034 s; distance=666333 kB, estimate=666333 kB; lsn=52/D84AC4A8, redo lsn=52/B9EB9E98
postgres_container  | 2024-11-04 20:35:24.566 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:35:24.566 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:35:24.566 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:35:35.063 UTC [26] LOG:  checkpoint complete: wrote 3042 buffers (18.6%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.962 s, sync=2.121 s, total=10.498 s; sync files=42, longest=2.008 s, average=0.051 s; distance=651347 kB, estimate=664834 kB; lsn=53/5947F0, redo lsn=52/E1ACED10
postgres_container  | 2024-11-04 20:35:35.064 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:35:35.064 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:35:35.064 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:35:43.643 UTC [11691] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:35:43.643 UTC [11691] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:35:55.735 UTC [26] LOG:  checkpoint complete: wrote 154 buffers (0.9%); 0 WAL file(s) added, 1 removed, 32 recycled; write=16.388 s, sync=2.742 s, total=20.671 s; sync files=214, longest=1.534 s, average=0.013 s; distance=533333 kB, estimate=651684 kB; lsn=53/215C65B0, redo lsn=53/23A4448
postgres_container  | 2024-11-04 20:35:55.735 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 20:35:55.735 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:35:55.736 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:36:07.395 UTC [26] LOG:  checkpoint complete: wrote 8329 buffers (50.8%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.287 s, sync=2.661 s, total=11.660 s; sync files=66, longest=2.540 s, average=0.041 s; distance=649982 kB, estimate=651514 kB; lsn=53/48901120, redo lsn=53/29E63D00
postgres_container  | 2024-11-04 20:36:07.395 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:36:07.395 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:36:07.395 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:36:19.551 UTC [26] LOG:  checkpoint complete: wrote 2575 buffers (15.7%); 0 WAL file(s) added, 8 removed, 31 recycled; write=7.161 s, sync=3.204 s, total=12.156 s; sync files=93, longest=2.683 s, average=0.035 s; distance=635768 kB, estimate=649939 kB; lsn=53/70A1C020, redo lsn=53/50B41F18
postgres_container  | 2024-11-04 20:36:19.551 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:36:19.551 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:36:19.551 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:36:29.161 UTC [11711] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:36:29.161 UTC [11711] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:36:41.467 UTC [26] LOG:  checkpoint complete: wrote 283 buffers (1.7%); 0 WAL file(s) added, 4 removed, 31 recycled; write=17.319 s, sync=2.878 s, total=21.916 s; sync files=228, longest=1.555 s, average=0.013 s; distance=578075 kB, estimate=642753 kB; lsn=53/937FCBA8, redo lsn=53/73FC8DC0
postgres_container  | 2024-11-04 20:36:41.468 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:36:41.468 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:36:41.468 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:36:52.895 UTC [26] LOG:  checkpoint complete: wrote 8309 buffers (50.7%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.396 s, sync=2.257 s, total=11.428 s; sync files=67, longest=2.205 s, average=0.034 s; distance=668077 kB, estimate=668077 kB; lsn=53/BB444678, redo lsn=53/9CC34370
postgres_container  | 2024-11-04 20:36:52.896 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:36:52.896 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:36:52.896 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:37:04.661 UTC [26] LOG:  checkpoint complete: wrote 2857 buffers (17.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=6.665 s, sync=3.257 s, total=11.766 s; sync files=36, longest=3.078 s, average=0.091 s; distance=667915 kB, estimate=668061 kB; lsn=53/E3A87670, redo lsn=53/C5877118
postgres_container  | 2024-11-04 20:37:10.674 UTC [11731] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:37:10.674 UTC [11731] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:37:17.253 UTC [11723] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:37:17.629 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:37:17.629 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:37:17.629 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:37:28.953 UTC [26] LOG:  checkpoint complete: wrote 1833 buffers (11.2%); 0 WAL file(s) added, 1 removed, 32 recycled; write=7.995 s, sync=1.658 s, total=11.324 s; sync files=250, longest=0.909 s, average=0.007 s; distance=534314 kB, estimate=654686 kB; lsn=54/57C0E88, redo lsn=53/E6241CD8
postgres_container  | 2024-11-04 20:37:28.953 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:37:28.953 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:37:28.954 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:37:39.851 UTC [26] LOG:  checkpoint complete: wrote 6623 buffers (40.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.598 s, sync=1.562 s, total=10.898 s; sync files=38, longest=1.511 s, average=0.042 s; distance=648443 kB, estimate=654062 kB; lsn=54/2C402110, redo lsn=54/DB808F8
postgres_container  | 2024-11-04 20:37:39.852 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:37:39.852 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:37:39.852 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:37:50.837 UTC [26] LOG:  checkpoint complete: wrote 2933 buffers (17.9%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.080 s, sync=2.033 s, total=10.985 s; sync files=37, longest=1.928 s, average=0.055 s; distance=645911 kB, estimate=653247 kB; lsn=54/53A6B6C0, redo lsn=54/35246758
postgres_container  | 2024-11-04 20:37:50.838 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:37:50.838 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:37:50.838 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:37:58.938 UTC [11750] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:37:58.938 UTC [11750] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:38:12.090 UTC [26] LOG:  checkpoint complete: wrote 157 buffers (1.0%); 0 WAL file(s) added, 4 removed, 30 recycled; write=15.816 s, sync=3.731 s, total=21.253 s; sync files=232, longest=1.442 s, average=0.017 s; distance=560654 kB, estimate=643987 kB; lsn=54/78CAC8C0, redo lsn=54/575CA040
postgres_container  | 2024-11-04 20:38:12.092 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:38:12.092 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:38:12.092 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:38:24.717 UTC [26] LOG:  checkpoint complete: wrote 8524 buffers (52.0%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.810 s, sync=2.908 s, total=12.626 s; sync files=96, longest=2.496 s, average=0.031 s; distance=688420 kB, estimate=688420 kB; lsn=54/A0843BA8, redo lsn=54/816133B0
postgres_container  | 2024-11-04 20:38:24.718 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:38:24.718 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:38:24.718 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:38:35.681 UTC [26] LOG:  checkpoint complete: wrote 4871 buffers (29.7%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.262 s, sync=2.189 s, total=10.964 s; sync files=57, longest=2.124 s, average=0.039 s; distance=656876 kB, estimate=685266 kB; lsn=54/C7627D10, redo lsn=54/A978E608
postgres_container  | 2024-11-04 20:38:43.723 UTC [11770] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:38:43.723 UTC [11770] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:38:45.478 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 20:38:45.478 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:38:45.478 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:38:56.074 UTC [26] LOG:  checkpoint complete: wrote 3104 buffers (18.9%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.362 s, sync=2.443 s, total=10.596 s; sync files=236, longest=1.189 s, average=0.011 s; distance=537047 kB, estimate=670444 kB; lsn=54/EA400618, redo lsn=54/CA404338
postgres_container  | 2024-11-04 20:38:56.074 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:38:56.074 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:38:56.074 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:39:07.973 UTC [26] LOG:  checkpoint complete: wrote 5276 buffers (32.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.136 s, sync=1.909 s, total=11.899 s; sync files=40, longest=1.701 s, average=0.048 s; distance=668700 kB, estimate=670270 kB; lsn=55/11B501B0, redo lsn=54/F310B388
postgres_container  | 2024-11-04 20:39:07.974 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:39:07.974 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:39:07.974 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:39:20.400 UTC [26] LOG:  checkpoint complete: wrote 4621 buffers (28.2%); 0 WAL file(s) added, 6 removed, 33 recycled; write=7.566 s, sync=3.126 s, total=12.427 s; sync files=96, longest=2.973 s, average=0.033 s; distance=637981 kB, estimate=667041 kB; lsn=55/38C246D8, redo lsn=55/1A012AB8
postgres_container  | 2024-11-04 20:39:29.175 UTC [11790] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:39:29.175 UTC [11790] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:39:30.617 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:39:30.617 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:39:30.617 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:39:40.720 UTC [26] LOG:  checkpoint complete: wrote 268 buffers (1.6%); 0 WAL file(s) added, 1 removed, 32 recycled; write=6.164 s, sync=2.417 s, total=10.104 s; sync files=235, longest=1.288 s, average=0.011 s; distance=540620 kB, estimate=654399 kB; lsn=55/5AE0CD68, redo lsn=55/3B005AC8
postgres_container  | 2024-11-04 20:39:40.721 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:39:40.721 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:39:40.740 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:39:51.589 UTC [26] LOG:  checkpoint complete: wrote 8080 buffers (49.3%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.647 s, sync=1.798 s, total=10.869 s; sync files=42, longest=1.757 s, average=0.043 s; distance=659425 kB, estimate=659425 kB; lsn=55/814021D8, redo lsn=55/633FE0C8
postgres_container  | 2024-11-04 20:39:51.590 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:39:51.590 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:39:51.590 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:40:02.025 UTC [26] LOG:  checkpoint complete: wrote 3148 buffers (19.2%); 0 WAL file(s) added, 6 removed, 32 recycled; write=7.075 s, sync=1.454 s, total=10.435 s; sync files=39, longest=1.348 s, average=0.038 s; distance=625111 kB, estimate=655994 kB; lsn=55/A8284FA8, redo lsn=55/89673F88
postgres_container  | 2024-11-04 20:40:02.025 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:40:02.025 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:40:02.025 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:40:09.076 UTC [11810] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:40:09.076 UTC [11810] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:40:12.709 UTC [11807] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:40:12.709 UTC [11807] CONTEXT:  while scanning block 8573 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:40:13.709 UTC [11807] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:40:13.709 UTC [11807] CONTEXT:  while scanning block 4057 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 20:40:14.709 UTC [11807] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:40:14.709 UTC [11807] CONTEXT:  while scanning block 3949 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 20:40:15.725 UTC [11807] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:40:15.725 UTC [11807] CONTEXT:  while scanning block 3949 of relation "stage_omopcdm.voc_concept_synonym"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_synonym"
postgres_container  | 2024-11-04 20:40:16.725 UTC [11807] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:40:16.725 UTC [11807] CONTEXT:  while scanning block 3842 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-04 20:40:29.147 UTC [26] LOG:  checkpoint complete: wrote 110 buffers (0.7%); 0 WAL file(s) added, 10 removed, 25 recycled; write=20.336 s, sync=5.234 s, total=27.122 s; sync files=223, longest=1.532 s, average=0.024 s; distance=575504 kB, estimate=647945 kB; lsn=55/D2402080, redo lsn=55/AC8781B8
postgres_container  | 2024-11-04 20:40:29.147 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 20:40:29.147 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:40:29.147 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:40:41.654 UTC [26] LOG:  checkpoint complete: wrote 8422 buffers (51.4%); 0 WAL file(s) added, 14 removed, 32 recycled; write=10.135 s, sync=0.400 s, total=12.507 s; sync files=91, longest=0.090 s, average=0.005 s; distance=752247 kB, estimate=752247 kB; lsn=55/F9402290, redo lsn=55/DA715ED8
postgres_container  | 2024-11-04 20:40:41.655 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:40:41.655 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:40:41.655 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:40:57.343 UTC [11829] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:40:57.343 UTC [11829] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:41:04.974 UTC [26] LOG:  checkpoint complete: wrote 2649 buffers (16.2%); 0 WAL file(s) added, 13 removed, 29 recycled; write=20.233 s, sync=1.470 s, total=23.320 s; sync files=211, longest=0.212 s, average=0.007 s; distance=686553 kB, estimate=745677 kB; lsn=56/26148128, redo lsn=56/458C428
postgres_container  | 2024-11-04 20:41:04.975 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:41:04.975 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:41:04.975 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:41:16.792 UTC [26] LOG:  checkpoint complete: wrote 6339 buffers (38.7%); 0 WAL file(s) added, 8 removed, 31 recycled; write=7.794 s, sync=2.088 s, total=11.817 s; sync files=92, longest=1.390 s, average=0.023 s; distance=647632 kB, estimate=735873 kB; lsn=56/4B2D9A78, redo lsn=56/2BE00720
postgres_container  | 2024-11-04 20:41:16.792 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:41:16.792 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:41:16.792 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:41:28.287 UTC [26] LOG:  checkpoint complete: wrote 2210 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.127 s, sync=2.614 s, total=11.495 s; sync files=41, longest=1.472 s, average=0.064 s; distance=682649 kB, estimate=730551 kB; lsn=56/75402538, redo lsn=56/558A6F10
postgres_container  | 2024-11-04 20:41:28.288 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:41:28.288 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:41:28.288 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:41:41.557 UTC [11849] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:41:41.557 UTC [11849] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:41:53.497 UTC [26] LOG:  checkpoint complete: wrote 2142 buffers (13.1%); 0 WAL file(s) added, 18 removed, 23 recycled; write=19.438 s, sync=4.295 s, total=25.210 s; sync files=217, longest=1.388 s, average=0.020 s; distance=665666 kB, estimate=724062 kB; lsn=56/A66D6058, redo lsn=56/7E2B77A0
postgres_container  | 2024-11-04 20:41:53.498 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:41:53.498 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:41:53.517 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:42:05.968 UTC [26] LOG:  checkpoint complete: wrote 8325 buffers (50.8%); 0 WAL file(s) added, 16 removed, 33 recycled; write=8.580 s, sync=2.030 s, total=12.470 s; sync files=70, longest=1.943 s, average=0.029 s; distance=804122 kB, estimate=804122 kB; lsn=56/CD683628, redo lsn=56/AF3FE2E8
postgres_container  | 2024-11-04 20:42:05.968 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:42:05.968 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:42:05.968 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:42:17.172 UTC [26] LOG:  checkpoint complete: wrote 2531 buffers (15.4%); 0 WAL file(s) added, 6 removed, 32 recycled; write=7.559 s, sync=2.011 s, total=11.204 s; sync files=89, longest=0.794 s, average=0.023 s; distance=633899 kB, estimate=787100 kB; lsn=56/F498B078, redo lsn=56/D5F08FC8
postgres_container  | 2024-11-04 20:42:17.173 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:42:17.173 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:42:17.173 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:42:30.184 UTC [11869] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:42:30.184 UTC [11869] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:42:42.453 UTC [26] LOG:  checkpoint complete: wrote 864 buffers (5.3%); 0 WAL file(s) added, 7 removed, 32 recycled; write=21.147 s, sync=1.595 s, total=25.281 s; sync files=225, longest=0.831 s, average=0.008 s; distance=630321 kB, estimate=771422 kB; lsn=57/1B6F27F0, redo lsn=56/FC6956B8
postgres_container  | 2024-11-04 20:42:42.454 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:42:42.454 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:42:42.454 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:42:54.261 UTC [26] LOG:  checkpoint complete: wrote 8333 buffers (50.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.216 s, sync=3.005 s, total=11.807 s; sync files=72, longest=2.981 s, average=0.042 s; distance=661030 kB, estimate=760383 kB; lsn=57/43400190, redo lsn=57/24C1EEC0
postgres_container  | 2024-11-04 20:42:54.262 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:42:54.262 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:42:54.278 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:43:05.464 UTC [26] LOG:  checkpoint complete: wrote 1322 buffers (8.1%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.690 s, sync=2.724 s, total=11.203 s; sync files=37, longest=2.281 s, average=0.074 s; distance=630653 kB, estimate=747410 kB; lsn=57/6A114C70, redo lsn=57/4B3FE2F8
postgres_container  | 2024-11-04 20:43:05.465 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:43:05.465 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:43:05.465 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:43:17.047 UTC [11889] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:43:17.047 UTC [11889] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:43:33.469 UTC [26] LOG:  checkpoint complete: wrote 427 buffers (2.6%); 0 WAL file(s) added, 14 removed, 24 recycled; write=20.537 s, sync=5.462 s, total=28.005 s; sync files=245, longest=1.742 s, average=0.023 s; distance=633919 kB, estimate=736061 kB; lsn=57/98960028, redo lsn=57/71F0E148
postgres_container  | 2024-11-04 20:43:33.470 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 20:43:33.470 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:43:33.470 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:43:45.933 UTC [26] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 17 removed, 31 recycled; write=9.822 s, sync=0.834 s, total=12.464 s; sync files=87, longest=0.260 s, average=0.010 s; distance=782375 kB, estimate=782375 kB; lsn=57/C14022C0, redo lsn=57/A1B18128
postgres_container  | 2024-11-04 20:43:45.934 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:43:45.934 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:43:45.934 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:44:02.214 UTC [11908] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:44:02.214 UTC [11908] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:44:05.128 UTC [11909] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-04 20:44:05.128 UTC [11909] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 20:44:05.128 UTC [11909] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:44:05.129 UTC [11909] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:44:05.149 UTC [11909] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:44:05.149 UTC [11909] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:44:09.515 UTC [26] LOG:  checkpoint complete: wrote 2679 buffers (16.4%); 0 WAL file(s) added, 13 removed, 29 recycled; write=20.696 s, sync=1.637 s, total=23.581 s; sync files=212, longest=0.361 s, average=0.008 s; distance=677840 kB, estimate=771922 kB; lsn=57/ED6406D8, redo lsn=57/CB10C2C8
postgres_container  | 2024-11-04 20:44:09.515 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:44:09.515 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:44:09.515 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:44:20.772 UTC [26] LOG:  checkpoint complete: wrote 6247 buffers (38.1%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.669 s, sync=1.283 s, total=11.257 s; sync files=77, longest=0.752 s, average=0.017 s; distance=655524 kB, estimate=760282 kB; lsn=58/114002B0, redo lsn=57/F3135558
postgres_container  | 2024-11-04 20:44:20.773 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:44:20.773 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:44:20.773 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:44:31.571 UTC [26] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.149 s, sync=1.776 s, total=10.799 s; sync files=38, longest=1.235 s, average=0.047 s; distance=658319 kB, estimate=750086 kB; lsn=58/3A4003C8, redo lsn=58/1B419400
postgres_container  | 2024-11-04 20:44:31.572 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:44:31.572 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:44:31.572 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:44:48.677 UTC [11928] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:44:48.677 UTC [11928] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:44:57.000 UTC [26] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 12 removed, 28 recycled; write=21.137 s, sync=2.277 s, total=25.428 s; sync files=208, longest=0.512 s, average=0.011 s; distance=660093 kB, estimate=741087 kB; lsn=58/6634F4E0, redo lsn=58/438B8930
postgres_container  | 2024-11-04 20:44:57.001 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:44:57.001 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:44:57.001 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:45:10.252 UTC [26] LOG:  checkpoint complete: wrote 8283 buffers (50.6%); 0 WAL file(s) added, 15 removed, 32 recycled; write=8.145 s, sync=3.043 s, total=13.251 s; sync files=71, longest=2.391 s, average=0.043 s; distance=768120 kB, estimate=768120 kB; lsn=58/915A6338, redo lsn=58/726D6AE8
postgres_container  | 2024-11-04 20:45:10.252 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:45:10.252 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:45:10.318 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:45:23.047 UTC [26] LOG:  checkpoint complete: wrote 3569 buffers (21.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.142 s, sync=1.150 s, total=12.796 s; sync files=99, longest=0.908 s, average=0.012 s; distance=668205 kB, estimate=758128 kB; lsn=58/BA4003F8, redo lsn=58/9B362060
postgres_container  | 2024-11-04 20:45:23.048 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:45:23.048 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:45:23.048 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:45:32.787 UTC [11948] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:45:32.787 UTC [11948] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:45:47.424 UTC [26] LOG:  checkpoint complete: wrote 1126 buffers (6.9%); 0 WAL file(s) added, 11 removed, 29 recycled; write=18.589 s, sync=3.905 s, total=24.376 s; sync files=217, longest=1.542 s, average=0.018 s; distance=654381 kB, estimate=747754 kB; lsn=58/E5274BD0, redo lsn=58/C326D748
postgres_container  | 2024-11-04 20:45:47.425 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:45:47.425 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:45:47.425 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:45:57.686 UTC [26] LOG:  checkpoint complete: wrote 8337 buffers (50.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.344 s, sync=2.553 s, total=10.262 s; sync files=75, longest=0.436 s, average=0.035 s; distance=700081 kB, estimate=742986 kB; lsn=59/CF2EE08, redo lsn=58/EDE19C20
postgres_container  | 2024-11-04 20:45:57.687 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:45:57.687 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:45:57.739 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:46:08.742 UTC [26] LOG:  checkpoint complete: wrote 1052 buffers (6.4%); 0 WAL file(s) added, 8 removed, 31 recycled; write=7.108 s, sync=1.944 s, total=11.055 s; sync files=46, longest=1.634 s, average=0.043 s; distance=639449 kB, estimate=732633 kB; lsn=59/34403E48, redo lsn=59/14E900C8
postgres_container  | 2024-11-04 20:46:08.743 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:46:08.743 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:46:08.743 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:46:18.022 UTC [11968] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:46:18.022 UTC [11968] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:46:34.368 UTC [26] LOG:  checkpoint complete: wrote 383 buffers (2.3%); 0 WAL file(s) added, 11 removed, 27 recycled; write=19.374 s, sync=4.607 s, total=25.625 s; sync files=246, longest=1.125 s, average=0.019 s; distance=611435 kB, estimate=720513 kB; lsn=59/5E683CC8, redo lsn=59/3A3AAE10
postgres_container  | 2024-11-04 20:46:34.369 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 20:46:34.369 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:46:34.369 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:46:46.521 UTC [26] LOG:  checkpoint complete: wrote 8323 buffers (50.8%); 0 WAL file(s) added, 14 removed, 31 recycled; write=8.669 s, sync=1.448 s, total=12.153 s; sync files=80, longest=1.024 s, average=0.019 s; distance=736865 kB, estimate=736865 kB; lsn=59/87400048, redo lsn=59/67343258
postgres_container  | 2024-11-04 20:46:46.522 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:46:46.522 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:46:46.522 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:47:04.888 UTC [11988] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:47:04.888 UTC [11988] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:47:06.292 UTC [11987] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:47:06.304 UTC [11987] LOG:  skipping vacuum of "pg_toast_307999" --- lock not available
postgres_container  | 2024-11-04 20:47:10.175 UTC [26] LOG:  checkpoint complete: wrote 2459 buffers (15.0%); 0 WAL file(s) added, 12 removed, 29 recycled; write=21.129 s, sync=1.463 s, total=23.654 s; sync files=218, longest=0.193 s, average=0.007 s; distance=680556 kB, estimate=731234 kB; lsn=59/B2ECAA98, redo lsn=59/90BDE3C8
postgres_container  | 2024-11-04 20:47:10.176 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:47:10.176 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:47:10.176 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:47:20.999 UTC [26] LOG:  checkpoint complete: wrote 5925 buffers (36.2%); 0 WAL file(s) added, 7 removed, 32 recycled; write=5.438 s, sync=3.661 s, total=10.824 s; sync files=79, longest=2.047 s, average=0.047 s; distance=630323 kB, estimate=721143 kB; lsn=59/D638A918, redo lsn=59/B736B098
postgres_container  | 2024-11-04 20:47:21.000 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:47:21.000 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:47:21.040 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:47:32.841 UTC [26] LOG:  checkpoint complete: wrote 2558 buffers (15.6%); 0 WAL file(s) added, 8 removed, 31 recycled; write=8.161 s, sync=1.907 s, total=11.842 s; sync files=39, longest=0.996 s, average=0.049 s; distance=648923 kB, estimate=713921 kB; lsn=59/FE813E28, redo lsn=59/DED22050
postgres_container  | 2024-11-04 20:47:32.842 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:47:32.842 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:47:32.842 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:47:48.763 UTC [12007] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:47:48.763 UTC [12007] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:47:57.932 UTC [26] LOG:  checkpoint complete: wrote 3203 buffers (19.5%); 0 WAL file(s) added, 12 removed, 29 recycled; write=20.554 s, sync=2.455 s, total=25.090 s; sync files=208, longest=0.914 s, average=0.012 s; distance=662480 kB, estimate=708777 kB; lsn=5A/293D1970, redo lsn=5A/74163D0
postgres_container  | 2024-11-04 20:47:57.932 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:47:57.932 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:47:57.946 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:48:11.871 UTC [26] LOG:  checkpoint complete: wrote 6294 buffers (38.4%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.110 s, sync=1.842 s, total=13.939 s; sync files=69, longest=1.631 s, average=0.027 s; distance=737183 kB, estimate=737183 kB; lsn=5A/53429A40, redo lsn=5A/343FE130
postgres_container  | 2024-11-04 20:48:11.871 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:48:11.871 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:48:11.871 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:48:23.712 UTC [26] LOG:  checkpoint complete: wrote 5733 buffers (35.0%); 0 WAL file(s) added, 9 removed, 30 recycled; write=7.472 s, sync=2.383 s, total=11.841 s; sync files=105, longest=0.848 s, average=0.023 s; distance=648125 kB, estimate=728277 kB; lsn=5A/7C17F4E0, redo lsn=5A/5BCED578
postgres_container  | 2024-11-04 20:48:23.713 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:48:23.713 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:48:23.713 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:48:37.385 UTC [12027] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:48:37.385 UTC [12027] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:48:48.567 UTC [26] LOG:  checkpoint complete: wrote 1689 buffers (10.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=20.584 s, sync=1.807 s, total=24.854 s; sync files=214, longest=0.849 s, average=0.009 s; distance=667478 kB, estimate=722197 kB; lsn=5A/A395D5D0, redo lsn=5A/848C2FE8
postgres_container  | 2024-11-04 20:48:48.567 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:48:48.567 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:48:48.568 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:48:59.490 UTC [26] LOG:  checkpoint complete: wrote 8335 buffers (50.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.151 s, sync=1.830 s, total=10.923 s; sync files=74, longest=1.755 s, average=0.025 s; distance=682387 kB, estimate=718216 kB; lsn=5A/CC627048, redo lsn=5A/AE327F18
postgres_container  | 2024-11-04 20:48:59.491 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:48:59.491 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:48:59.502 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:49:09.707 UTC [26] LOG:  checkpoint complete: wrote 43 buffers (0.3%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.380 s, sync=2.045 s, total=10.216 s; sync files=27, longest=1.658 s, average=0.076 s; distance=639832 kB, estimate=710378 kB; lsn=5A/F45D02E8, redo lsn=5A/D53FE0E0
postgres_container  | 2024-11-04 20:49:09.707 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:49:09.707 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:49:09.708 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:49:18.825 UTC [12047] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:49:18.825 UTC [12047] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:49:33.008 UTC [26] LOG:  checkpoint complete: wrote 1193 buffers (7.3%); 0 WAL file(s) added, 7 removed, 32 recycled; write=18.735 s, sync=2.180 s, total=23.301 s; sync files=240, longest=1.212 s, average=0.010 s; distance=635562 kB, estimate=702896 kB; lsn=5B/1B411C40, redo lsn=5A/FC0A89C0
postgres_container  | 2024-11-04 20:49:33.009 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:49:33.009 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:49:33.009 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:49:44.089 UTC [26] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.447 s, sync=1.992 s, total=11.080 s; sync files=73, longest=1.902 s, average=0.028 s; distance=679439 kB, estimate=700550 kB; lsn=5B/441D3878, redo lsn=5B/2582C668
postgres_container  | 2024-11-04 20:49:44.089 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:49:44.089 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:49:44.089 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:49:54.817 UTC [26] LOG:  checkpoint complete: wrote 572 buffers (3.5%); 0 WAL file(s) added, 6 removed, 33 recycled; write=7.386 s, sync=1.412 s, total=10.728 s; sync files=38, longest=1.311 s, average=0.038 s; distance=638762 kB, estimate=694372 kB; lsn=5B/6ADD37D8, redo lsn=5B/4C7F6FE8
postgres_container  | 2024-11-04 20:49:54.818 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:49:54.818 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:49:54.818 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:50:04.455 UTC [12067] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:50:04.455 UTC [12067] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] CONTEXT:  while scanning block 4362 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:50:06.935 UTC [12064] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:50:06.941 UTC [12064] LOG:  skipping vacuum of "pg_toast_310125" --- lock not available
postgres_container  | 2024-11-04 20:50:18.555 UTC [26] LOG:  checkpoint complete: wrote 189 buffers (1.2%); 0 WAL file(s) added, 8 removed, 30 recycled; write=18.283 s, sync=3.690 s, total=23.738 s; sync files=225, longest=1.854 s, average=0.017 s; distance=626479 kB, estimate=687582 kB; lsn=5B/93400140, redo lsn=5B/72BC2D00
postgres_container  | 2024-11-04 20:50:18.556 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:50:18.556 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:50:18.556 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:50:30.262 UTC [26] LOG:  checkpoint complete: wrote 8438 buffers (51.5%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.243 s, sync=3.774 s, total=11.707 s; sync files=76, longest=3.645 s, average=0.050 s; distance=673446 kB, estimate=686169 kB; lsn=5B/BB400110, redo lsn=5B/9BD6C588
postgres_container  | 2024-11-04 20:50:30.263 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:50:30.263 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:50:30.263 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:50:41.356 UTC [26] LOG:  checkpoint complete: wrote 3028 buffers (18.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.227 s, sync=2.751 s, total=11.093 s; sync files=39, longest=2.687 s, average=0.071 s; distance=671230 kB, estimate=684675 kB; lsn=5B/E3402298, redo lsn=5B/C4CEC020
postgres_container  | 2024-11-04 20:50:48.405 UTC [12086] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:50:48.405 UTC [12086] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:50:50.057 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 20:50:50.057 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:50:50.057 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:51:00.545 UTC [26] LOG:  checkpoint complete: wrote 2440 buffers (14.9%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.113 s, sync=2.757 s, total=10.488 s; sync files=229, longest=1.520 s, average=0.013 s; distance=531559 kB, estimate=669363 kB; lsn=5C/5258330, redo lsn=5B/E5405C70
postgres_container  | 2024-11-04 20:51:00.546 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:51:00.546 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:51:00.546 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:51:11.353 UTC [26] LOG:  checkpoint complete: wrote 5878 buffers (35.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.690 s, sync=2.381 s, total=10.808 s; sync files=48, longest=2.124 s, average=0.050 s; distance=663308 kB, estimate=668758 kB; lsn=5C/2CE99F58, redo lsn=5C/DBC8D78
postgres_container  | 2024-11-04 20:51:11.354 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:51:11.354 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:51:11.354 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:51:23.647 UTC [26] LOG:  checkpoint complete: wrote 5365 buffers (32.7%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.943 s, sync=2.612 s, total=12.293 s; sync files=104, longest=2.036 s, average=0.026 s; distance=658033 kB, estimate=667685 kB; lsn=5C/54E17308, redo lsn=5C/35E65488
postgres_container  | 2024-11-04 20:51:23.648 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:51:23.648 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:51:23.648 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:51:32.289 UTC [12106] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:51:32.289 UTC [12106] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:51:43.549 UTC [26] LOG:  checkpoint complete: wrote 240 buffers (1.5%); 0 WAL file(s) added, 1 removed, 32 recycled; write=15.964 s, sync=2.533 s, total=19.902 s; sync files=218, longest=1.449 s, average=0.012 s; distance=529472 kB, estimate=653864 kB; lsn=5C/75400120, redo lsn=5C/563756E0
postgres_container  | 2024-11-04 20:51:43.550 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 20:51:43.550 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:51:43.582 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:51:54.187 UTC [26] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 6 removed, 33 recycled; write=7.099 s, sync=1.618 s, total=10.637 s; sync files=72, longest=1.532 s, average=0.023 s; distance=639522 kB, estimate=652430 kB; lsn=5C/9B4F8610, redo lsn=5C/7D3FE080
postgres_container  | 2024-11-04 20:51:54.187 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:51:54.187 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:51:54.188 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:52:04.755 UTC [26] LOG:  checkpoint complete: wrote 2062 buffers (12.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.825 s, sync=2.111 s, total=10.567 s; sync files=37, longest=1.971 s, average=0.058 s; distance=646857 kB, estimate=651872 kB; lsn=5C/C39762B0, redo lsn=5C/A4BB07F8
postgres_container  | 2024-11-04 20:52:04.755 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 20:52:04.755 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:52:04.755 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:52:11.599 UTC [12126] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:52:11.599 UTC [12126] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:52:17.508 UTC [12118] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:52:17.508 UTC [12118] CONTEXT:  while scanning block 18034 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:52:28.167 UTC [26] LOG:  checkpoint complete: wrote 360 buffers (2.2%); 0 WAL file(s) added, 3 removed, 32 recycled; write=20.173 s, sync=1.555 s, total=23.413 s; sync files=238, longest=1.008 s, average=0.007 s; distance=575886 kB, estimate=644274 kB; lsn=5C/E6E54188, redo lsn=5C/C7E140A8
postgres_container  | 2024-11-04 20:52:28.168 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:52:28.168 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:52:28.168 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:52:39.056 UTC [26] LOG:  checkpoint complete: wrote 8214 buffers (50.1%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.992 s, sync=1.468 s, total=10.888 s; sync files=61, longest=1.387 s, average=0.025 s; distance=649288 kB, estimate=649288 kB; lsn=5D/E2E0580, redo lsn=5C/EF826268
postgres_container  | 2024-11-04 20:52:39.057 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:52:39.057 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:52:39.107 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:52:50.171 UTC [26] LOG:  checkpoint complete: wrote 3834 buffers (23.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.693 s, sync=2.008 s, total=11.114 s; sync files=38, longest=1.804 s, average=0.053 s; distance=631583 kB, estimate=647517 kB; lsn=5D/35274028, redo lsn=5D/160EE078
postgres_container  | 2024-11-04 20:52:50.171 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:52:50.171 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:52:50.171 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:52:59.759 UTC [12145] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:52:59.759 UTC [12145] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:53:11.537 UTC [26] LOG:  checkpoint complete: wrote 98 buffers (0.6%); 0 WAL file(s) added, 5 removed, 30 recycled; write=17.289 s, sync=2.663 s, total=21.366 s; sync files=229, longest=1.319 s, average=0.012 s; distance=582230 kB, estimate=640989 kB; lsn=5D/5AC53EB8, redo lsn=5D/39983C28
postgres_container  | 2024-11-04 20:53:11.537 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 20:53:11.537 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:53:11.537 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:53:23.942 UTC [26] LOG:  checkpoint complete: wrote 8517 buffers (52.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.209 s, sync=2.208 s, total=12.405 s; sync files=90, longest=1.963 s, average=0.025 s; distance=669275 kB, estimate=669275 kB; lsn=5D/814B4FC8, redo lsn=5D/6271A8D0
postgres_container  | 2024-11-04 20:53:23.943 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:53:23.943 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:53:23.943 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:53:35.431 UTC [26] LOG:  checkpoint complete: wrote 2932 buffers (17.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.080 s, sync=2.102 s, total=11.489 s; sync files=39, longest=0.567 s, average=0.054 s; distance=657447 kB, estimate=668092 kB; lsn=5D/A941C980, redo lsn=5D/8A924710
postgres_container  | 2024-11-04 20:53:35.432 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:53:35.432 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:53:35.432 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:53:43.231 UTC [12165] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:53:43.231 UTC [12165] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:53:54.740 UTC [26] LOG:  checkpoint complete: wrote 147 buffers (0.9%); 0 WAL file(s) added, 1 removed, 32 recycled; write=15.474 s, sync=2.288 s, total=19.308 s; sync files=218, longest=1.327 s, average=0.011 s; distance=535929 kB, estimate=654876 kB; lsn=5D/CA8FE078, redo lsn=5D/AB482CA8
postgres_container  | 2024-11-04 20:53:54.741 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 20:53:54.741 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:53:54.786 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:54:07.003 UTC [26] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.667 s, sync=2.283 s, total=12.262 s; sync files=66, longest=1.959 s, average=0.035 s; distance=653596 kB, estimate=654748 kB; lsn=5D/F16E5800, redo lsn=5D/D32CA090
postgres_container  | 2024-11-04 20:54:07.003 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:54:07.003 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:54:07.004 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:54:18.864 UTC [26] LOG:  checkpoint complete: wrote 4391 buffers (26.8%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.823 s, sync=2.507 s, total=11.861 s; sync files=92, longest=2.165 s, average=0.028 s; distance=653762 kB, estimate=654649 kB; lsn=5E/19F65458, redo lsn=5D/FB13ABC0
postgres_container  | 2024-11-04 20:54:18.864 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:54:18.864 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:54:18.864 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:54:28.629 UTC [12185] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:54:28.629 UTC [12185] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:54:41.470 UTC [26] LOG:  checkpoint complete: wrote 258 buffers (1.6%); 0 WAL file(s) added, 2 removed, 32 recycled; write=18.088 s, sync=2.902 s, total=22.607 s; sync files=223, longest=1.800 s, average=0.014 s; distance=556345 kB, estimate=644819 kB; lsn=5E/3C803A68, redo lsn=5E/1D0891D0
postgres_container  | 2024-11-04 20:54:41.471 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:54:41.471 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:54:41.471 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:54:52.876 UTC [26] LOG:  checkpoint complete: wrote 8348 buffers (51.0%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.895 s, sync=2.852 s, total=11.406 s; sync files=70, longest=2.763 s, average=0.041 s; distance=650539 kB, estimate=650539 kB; lsn=5E/63455AB0, redo lsn=5E/44BD4060
postgres_container  | 2024-11-04 20:54:52.877 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:54:52.877 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:54:52.936 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:55:04.917 UTC [26] LOG:  checkpoint complete: wrote 4132 buffers (25.2%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.666 s, sync=2.509 s, total=12.041 s; sync files=38, longest=2.360 s, average=0.067 s; distance=662008 kB, estimate=662008 kB; lsn=5E/8C39E7F0, redo lsn=5E/6D2520D0
postgres_container  | 2024-11-04 20:55:04.918 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:55:04.918 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:55:04.918 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:55:12.029 UTC [12205] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:55:12.029 UTC [12205] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:55:16.716 UTC [12197] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 20:55:16.716 UTC [12197] CONTEXT:  while scanning block 15819 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 20:55:28.486 UTC [26] LOG:  checkpoint complete: wrote 368 buffers (2.2%); 0 WAL file(s) added, 6 removed, 27 recycled; write=17.308 s, sync=4.706 s, total=23.569 s; sync files=241, longest=1.533 s, average=0.020 s; distance=550597 kB, estimate=650867 kB; lsn=5E/B20BE080, redo lsn=5E/8EC035A0
postgres_container  | 2024-11-04 20:55:28.487 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:55:28.487 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:55:28.487 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:55:39.732 UTC [26] LOG:  checkpoint complete: wrote 8207 buffers (50.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.483 s, sync=2.825 s, total=11.245 s; sync files=73, longest=2.368 s, average=0.039 s; distance=717802 kB, estimate=717802 kB; lsn=5E/D990D470, redo lsn=5E/BA8FDFB8
postgres_container  | 2024-11-04 20:55:39.733 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:55:39.733 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:55:39.733 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:55:57.887 UTC [12224] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:55:57.887 UTC [12224] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:56:02.298 UTC [26] LOG:  checkpoint complete: wrote 3393 buffers (20.7%); 0 WAL file(s) added, 13 removed, 29 recycled; write=19.925 s, sync=1.264 s, total=22.566 s; sync files=197, longest=0.066 s, average=0.007 s; distance=683044 kB, estimate=714326 kB; lsn=5F/6190038, redo lsn=5E/E4407368
postgres_container  | 2024-11-04 20:56:02.299 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 20:56:02.299 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:56:02.299 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:56:15.324 UTC [26] LOG:  checkpoint complete: wrote 4922 buffers (30.0%); 0 WAL file(s) added, 9 removed, 30 recycled; write=8.639 s, sync=2.289 s, total=13.026 s; sync files=95, longest=0.800 s, average=0.025 s; distance=637840 kB, estimate=706678 kB; lsn=5F/2C7A6068, redo lsn=5F/B2EB510
postgres_container  | 2024-11-04 20:56:15.325 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:56:15.325 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:56:15.325 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:56:28.284 UTC [26] LOG:  checkpoint complete: wrote 7318 buffers (44.7%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.574 s, sync=2.511 s, total=12.960 s; sync files=106, longest=1.020 s, average=0.024 s; distance=691793 kB, estimate=705189 kB; lsn=5F/554022A8, redo lsn=5F/3567FA88
postgres_container  | 2024-11-04 20:56:28.285 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:56:28.285 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:56:28.285 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:56:42.695 UTC [12244] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:56:42.695 UTC [12244] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:56:52.826 UTC [26] LOG:  checkpoint complete: wrote 4177 buffers (25.5%); 0 WAL file(s) added, 16 removed, 25 recycled; write=19.726 s, sync=2.673 s, total=24.542 s; sync files=222, longest=0.854 s, average=0.013 s; distance=677649 kB, estimate=702435 kB; lsn=5F/84265F18, redo lsn=5F/5EC43F60
postgres_container  | 2024-11-04 20:56:52.827 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:56:52.827 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:56:52.827 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:57:06.636 UTC [26] LOG:  checkpoint complete: wrote 8352 buffers (51.0%); 0 WAL file(s) added, 16 removed, 33 recycled; write=9.544 s, sync=2.395 s, total=13.810 s; sync files=70, longest=2.230 s, average=0.035 s; distance=796810 kB, estimate=796810 kB; lsn=5F/ADE17D18, redo lsn=5F/8F6669C8
postgres_container  | 2024-11-04 20:57:06.637 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 20:57:06.637 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:57:06.637 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:57:19.307 UTC [26] LOG:  checkpoint complete: wrote 2199 buffers (13.4%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.938 s, sync=2.904 s, total=12.670 s; sync files=89, longest=2.440 s, average=0.033 s; distance=649550 kB, estimate=782084 kB; lsn=5F/D5A9EC38, redo lsn=5F/B70BA308
postgres_container  | 2024-11-04 20:57:19.308 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:57:19.308 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:57:19.308 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:57:31.637 UTC [12264] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:57:31.637 UTC [12264] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:57:43.221 UTC [26] LOG:  checkpoint complete: wrote 767 buffers (4.7%); 0 WAL file(s) added, 7 removed, 31 recycled; write=19.649 s, sync=1.914 s, total=23.913 s; sync files=220, longest=0.946 s, average=0.009 s; distance=637639 kB, estimate=767640 kB; lsn=5F/FD4001C8, redo lsn=5F/DDF6C0F0
postgres_container  | 2024-11-04 20:57:43.222 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 20:57:43.222 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:57:43.222 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:57:54.992 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.255 s, sync=2.702 s, total=11.770 s; sync files=71, longest=2.604 s, average=0.039 s; distance=683169 kB, estimate=759193 kB; lsn=60/26DB6230, redo lsn=60/7A947F8
postgres_container  | 2024-11-04 20:57:54.993 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:57:54.993 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:57:54.993 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:58:07.045 UTC [26] LOG:  checkpoint complete: wrote 1053 buffers (6.4%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.129 s, sync=2.983 s, total=12.052 s; sync files=38, longest=2.821 s, average=0.079 s; distance=670403 kB, estimate=750314 kB; lsn=60/4F424E40, redo lsn=60/30945448
postgres_container  | 2024-11-04 20:58:07.046 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 20:58:07.046 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:58:07.046 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:58:17.611 UTC [12284] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:58:17.611 UTC [12284] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:58:32.088 UTC [26] LOG:  checkpoint complete: wrote 371 buffers (2.3%); 0 WAL file(s) added, 7 removed, 30 recycled; write=19.715 s, sync=3.303 s, total=25.043 s; sync files=243, longest=1.100 s, average=0.014 s; distance=608178 kB, estimate=736100 kB; lsn=60/76A2E020, redo lsn=60/55B31E38
postgres_container  | 2024-11-04 20:58:32.089 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 20:58:32.089 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:58:32.089 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:58:43.902 UTC [26] LOG:  checkpoint complete: wrote 8360 buffers (51.0%); 0 WAL file(s) added, 10 removed, 33 recycled; write=9.846 s, sync=0.152 s, total=11.814 s; sync files=73, longest=0.124 s, average=0.003 s; distance=703872 kB, estimate=732877 kB; lsn=60/9EF96FE8, redo lsn=60/80A92030
postgres_container  | 2024-11-04 20:58:43.903 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 20:58:43.903 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:58:43.903 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:58:55.100 UTC [26] LOG:  checkpoint complete: wrote 3508 buffers (21.4%); 0 WAL file(s) added, 7 removed, 32 recycled; write=8.238 s, sync=1.798 s, total=11.198 s; sync files=38, longest=1.757 s, average=0.048 s; distance=644355 kB, estimate=724025 kB; lsn=60/C6427280, redo lsn=60/A7FD2ED8
postgres_container  | 2024-11-04 20:59:01.946 UTC [12303] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:59:01.946 UTC [12303] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 20:59:04.954 UTC [12304] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 20:59:04.988 UTC [12304] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 20:59:05.001 UTC [12304] LOG:  skipping vacuum of "pg_toast_316524" --- lock not available
postgres_container  | 2024-11-04 20:59:05.501 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:59:05.501 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:59:05.501 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:59:17.668 UTC [26] LOG:  checkpoint complete: wrote 2452 buffers (15.0%); 0 WAL file(s) added, 6 removed, 27 recycled; write=5.728 s, sync=4.947 s, total=12.168 s; sync files=246, longest=2.615 s, average=0.021 s; distance=528573 kB, estimate=704480 kB; lsn=60/EC24B988, redo lsn=60/C84024B8
postgres_container  | 2024-11-04 20:59:17.669 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:59:17.669 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:59:17.669 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:59:29.084 UTC [26] LOG:  checkpoint complete: wrote 6024 buffers (36.8%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.960 s, sync=1.519 s, total=11.415 s; sync files=52, longest=1.218 s, average=0.030 s; distance=719032 kB, estimate=719032 kB; lsn=61/134022C0, redo lsn=60/F4230808
postgres_container  | 2024-11-04 20:59:29.085 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 20:59:29.085 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:59:29.085 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 20:59:45.432 UTC [12323] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 20:59:45.432 UTC [12323] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 20:59:51.403 UTC [26] LOG:  checkpoint complete: wrote 2446 buffers (14.9%); 0 WAL file(s) added, 12 removed, 29 recycled; write=19.754 s, sync=1.546 s, total=22.318 s; sync files=208, longest=0.457 s, average=0.008 s; distance=683769 kB, estimate=715506 kB; lsn=61/3F716930, redo lsn=61/1DDEEC78
postgres_container  | 2024-11-04 20:59:51.403 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 20:59:51.403 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 20:59:51.403 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:00:03.827 UTC [26] LOG:  checkpoint complete: wrote 5292 buffers (32.3%); 0 WAL file(s) added, 7 removed, 32 recycled; write=5.126 s, sync=4.649 s, total=12.424 s; sync files=67, longest=3.364 s, average=0.070 s; distance=624955 kB, estimate=706451 kB; lsn=61/634004E0, redo lsn=61/4403DA20
postgres_container  | 2024-11-04 21:00:03.828 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 21:00:03.828 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 21:00:03.849 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:00:17.960 UTC [26] LOG:  checkpoint complete: wrote 3262 buffers (19.9%); 0 WAL file(s) added, 12 removed, 30 recycled; write=7.513 s, sync=3.028 s, total=14.132 s; sync files=84, longest=1.467 s, average=0.037 s; distance=701613 kB, estimate=705967 kB; lsn=61/8F404750, redo lsn=61/6ED691F8
postgres_container  | 2024-11-04 21:00:17.960 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 21:00:17.960 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 21:00:18.069 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:00:32.629 UTC [12343] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 21:00:32.629 UTC [12343] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 21:01:19.285 UTC [26] LOG:  checkpoint complete: wrote 3601 buffers (22.0%); 0 WAL file(s) added, 16 removed, 28 recycled; write=37.523 s, sync=4.738 s, total=61.325 s; sync files=242, longest=0.955 s, average=0.020 s; distance=713083 kB, estimate=713083 kB; lsn=61/BD402138, redo lsn=61/9A5C80A0
postgres_container  | 2024-11-04 21:01:19.286 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:01:37.037 UTC [26] LOG:  checkpoint complete: wrote 8460 buffers (51.6%); 0 WAL file(s) added, 12 removed, 32 recycled; write=11.008 s, sync=4.043 s, total=17.752 s; sync files=99, longest=2.721 s, average=0.041 s; distance=727334 kB, estimate=727334 kB; lsn=61/E5E78158, redo lsn=61/C6C11BD8
postgres_container  | 2024-11-04 21:01:37.037 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 21:01:37.037 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 21:01:37.037 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:01:59.446 UTC [26] LOG:  checkpoint complete: wrote 1017 buffers (6.2%); 0 WAL file(s) added, 10 removed, 32 recycled; write=12.747 s, sync=1.603 s, total=22.409 s; sync files=20, longest=1.316 s, average=0.081 s; distance=689906 kB, estimate=723592 kB; lsn=62/F402360, redo lsn=61/F0DCE758
postgres_container  | 2024-11-04 21:01:59.447 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 21:01:59.447 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 21:01:59.447 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:02:09.238 UTC [12364] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 21:02:09.238 UTC [12364] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 21:02:18.191 UTC [12361] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 21:02:18.191 UTC [12361] CONTEXT:  while scanning block 15061 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 21:02:18.211 UTC [12361] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 21:02:18.211 UTC [12361] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 21:02:30.887 UTC [26] LOG:  checkpoint complete: wrote 300 buffers (1.8%); 0 WAL file(s) added, 14 removed, 30 recycled; write=25.081 s, sync=3.916 s, total=31.440 s; sync files=219, longest=1.267 s, average=0.018 s; distance=707411 kB, estimate=721973 kB; lsn=62/3D6CD5B0, redo lsn=62/1C0A3650
postgres_container  | 2024-11-04 21:02:30.888 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:02:43.543 UTC [26] LOG:  checkpoint complete: wrote 8344 buffers (50.9%); 0 WAL file(s) added, 11 removed, 32 recycled; write=10.123 s, sync=0.116 s, total=12.656 s; sync files=73, longest=0.074 s, average=0.002 s; distance=719483 kB, estimate=721724 kB; lsn=62/66400B58, redo lsn=62/47F42468
postgres_container  | 2024-11-04 21:02:43.544 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 21:02:43.544 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 21:02:43.565 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 21:02:54.011 UTC [26] LOG:  checkpoint complete: wrote 3799 buffers (23.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=6.265 s, sync=2.884 s, total=10.467 s; sync files=40, longest=2.597 s, average=0.073 s; distance=661743 kB, estimate=715726 kB; lsn=62/8E5A8628, redo lsn=62/7057E098
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-04 22:20:41.784 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-04 22:20:41.785 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-04 22:20:41.785 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-04 22:20:41.973 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-04 22:20:42.059 UTC [29] LOG:  database system was interrupted; last known up at 2024-11-04 21:02:52 UTC
postgres_container  | 2024-11-04 22:20:43.693 UTC [29] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-04 22:20:43.825 UTC [29] LOG:  redo starts at 62/7057E098
postgres_container  | 2024-11-04 22:20:53.885 UTC [29] LOG:  redo in progress, elapsed time: 10.05 s, current LSN: 62/74C7B4E0
postgres_container  | 2024-11-04 22:20:57.509 UTC [30] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:20:57.509 UTC [30] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:21:03.845 UTC [29] LOG:  redo in progress, elapsed time: 20.01 s, current LSN: 62/789FB4F0
postgres_container  | 2024-11-04 22:21:04.112 UTC [1] LOG:  received fast shutdown request
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-04 22:21:30.562 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-04 22:21:30.563 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-04 22:21:30.563 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-04 22:21:30.655 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-04 22:21:30.709 UTC [28] LOG:  database system was shut down in recovery at 2024-11-04 22:21:04 UTC
postgres_container  | 2024-11-04 22:21:30.714 UTC [28] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-04 22:21:30.738 UTC [28] LOG:  redo starts at 62/7057E098
postgres_container  | 2024-11-04 22:21:32.787 UTC [29] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:21:32.787 UTC [29] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:21:40.738 UTC [28] LOG:  redo in progress, elapsed time: 10.00 s, current LSN: 62/7B5878B0
postgres_container  | 2024-11-04 22:21:47.526 UTC [30] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:21:47.526 UTC [30] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:21:50.738 UTC [28] LOG:  redo in progress, elapsed time: 20.00 s, current LSN: 62/7FF3B508
postgres_container  | 2024-11-04 22:21:53.402 UTC [31] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:21:53.402 UTC [31] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:21:58.984 UTC [32] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:21:58.984 UTC [32] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:22:00.758 UTC [28] LOG:  redo in progress, elapsed time: 30.02 s, current LSN: 62/853FB508
postgres_container  | 2024-11-04 22:22:04.219 UTC [33] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:22:04.219 UTC [33] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:22:10.776 UTC [28] LOG:  redo in progress, elapsed time: 40.03 s, current LSN: 62/8A3DB4C8
postgres_container  | 2024-11-04 22:22:10.804 UTC [34] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:22:10.804 UTC [34] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:22:18.222 UTC [35] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 22:22:18.222 UTC [35] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 22:22:21.404 UTC [28] LOG:  redo in progress, elapsed time: 50.66 s, current LSN: 62/8E588180
postgres_container  | 2024-11-04 22:22:21.946 UTC [28] LOG:  invalid record length at 62/8E5C4DC8: expected at least 24, got 0
postgres_container  | 2024-11-04 22:22:21.946 UTC [28] LOG:  redo done at 62/8E5C4D90 system usage: CPU: user: 4.43 s, system: 1.07 s, elapsed: 51.20 s
postgres_container  | 2024-11-04 22:22:22.085 UTC [26] LOG:  checkpoint starting: end-of-recovery immediate wait
postgres_container  | 2024-11-04 22:22:28.748 UTC [26] LOG:  checkpoint complete: wrote 15691 buffers (95.8%); 0 WAL file(s) added, 0 removed, 30 recycled; write=0.171 s, sync=5.224 s, total=6.687 s; sync files=47, longest=5.065 s, average=0.112 s; distance=491803 kB, estimate=491803 kB; lsn=62/8E5C4DC8, redo lsn=62/8E5C4DC8
postgres_container  | 2024-11-04 22:22:28.782 UTC [1] LOG:  database system is ready to accept connections
postgres_container  | 2024-11-04 22:24:01.772 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:25:00.389 UTC [26] LOG:  checkpoint complete: wrote 8454 buffers (51.6%); 0 WAL file(s) added, 1 removed, 32 recycled; write=48.740 s, sync=1.574 s, total=58.617 s; sync files=238, longest=1.256 s, average=0.007 s; distance=538853 kB, estimate=538853 kB; lsn=62/CE3C4468, redo lsn=62/AF3FE298
postgres_container  | 2024-11-04 22:25:00.390 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:25:30.992 UTC [26] LOG:  checkpoint complete: wrote 2237 buffers (13.7%); 0 WAL file(s) added, 6 removed, 33 recycled; write=25.855 s, sync=2.368 s, total=30.603 s; sync files=38, longest=1.685 s, average=0.063 s; distance=637291 kB, estimate=637291 kB; lsn=62/F4B00650, redo lsn=62/D62590C8
postgres_container  | 2024-11-04 22:25:30.993 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:25:42.371 UTC [61] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:25:42.371 UTC [61] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:25:47.554 UTC [55] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:25:47.554 UTC [55] CONTEXT:  while scanning block 35928 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 22:25:47.554 UTC [55] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:25:47.568 UTC [55] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:25:47.568 UTC [55] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:25:48.569 UTC [55] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:25:48.569 UTC [55] CONTEXT:  while scanning block 3976 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 22:26:04.277 UTC [26] LOG:  checkpoint complete: wrote 396 buffers (2.4%); 0 WAL file(s) added, 14 removed, 26 recycled; write=24.781 s, sync=6.340 s, total=33.285 s; sync files=216, longest=2.049 s, average=0.030 s; distance=664415 kB, estimate=664415 kB; lsn=63/23400160, redo lsn=62/FEB30D58
postgres_container  | 2024-11-04 22:26:04.278 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:26:19.015 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 14 removed, 32 recycled; write=9.476 s, sync=2.944 s, total=14.737 s; sync files=87, longest=2.290 s, average=0.034 s; distance=744819 kB, estimate=744819 kB; lsn=63/4BA7E060, redo lsn=63/2C28D9F8
postgres_container  | 2024-11-04 22:26:19.016 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 22:26:19.016 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:26:19.016 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:26:39.260 UTC [80] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:26:39.260 UTC [80] CONTEXT:  while truncating relation "pg_catalog.pg_statistic" to 91 blocks
postgres_container  | 	automatic vacuum of table "postgres.pg_catalog.pg_statistic"
postgres_container  | 2024-11-04 22:26:39.305 UTC [81] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:26:39.305 UTC [81] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:26:41.204 UTC [80] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] CONTEXT:  while scanning block 3886 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:26:42.204 UTC [80] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:26:47.642 UTC [26] LOG:  checkpoint complete: wrote 4129 buffers (25.2%); 0 WAL file(s) added, 14 removed, 28 recycled; write=24.460 s, sync=2.563 s, total=28.626 s; sync files=225, longest=0.495 s, average=0.012 s; distance=693890 kB, estimate=739726 kB; lsn=63/79D3DB38, redo lsn=63/5682E420
postgres_container  | 2024-11-04 22:26:47.643 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 22:26:47.643 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:26:47.643 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:27:01.147 UTC [26] LOG:  checkpoint complete: wrote 6265 buffers (38.2%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.860 s, sync=3.845 s, total=13.505 s; sync files=76, longest=3.619 s, average=0.051 s; distance=703629 kB, estimate=736116 kB; lsn=63/A0264AC8, redo lsn=63/817519B8
postgres_container  | 2024-11-04 22:27:01.149 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:27:01.149 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:27:01.149 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:27:13.674 UTC [26] LOG:  checkpoint complete: wrote 2208 buffers (13.5%); 0 WAL file(s) added, 7 removed, 33 recycled; write=5.963 s, sync=4.834 s, total=12.526 s; sync files=38, longest=2.407 s, average=0.128 s; distance=651927 kB, estimate=727697 kB; lsn=63/C7BB4A20, redo lsn=63/A93F75F8
postgres_container  | 2024-11-04 22:27:13.675 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:27:13.675 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:27:13.675 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:27:28.779 UTC [100] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:27:28.779 UTC [100] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:27:40.315 UTC [26] LOG:  checkpoint complete: wrote 2557 buffers (15.6%); 0 WAL file(s) added, 16 removed, 24 recycled; write=21.220 s, sync=3.684 s, total=26.640 s; sync files=224, longest=1.186 s, average=0.017 s; distance=652424 kB, estimate=720170 kB; lsn=63/F8400510, redo lsn=63/D11197F8
postgres_container  | 2024-11-04 22:27:40.315 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 22:27:40.315 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:27:40.315 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:27:54.372 UTC [26] LOG:  checkpoint complete: wrote 8508 buffers (51.9%); 0 WAL file(s) added, 15 removed, 33 recycled; write=9.713 s, sync=2.287 s, total=14.057 s; sync files=91, longest=2.211 s, average=0.026 s; distance=786128 kB, estimate=786128 kB; lsn=64/1F5990F8, redo lsn=64/10CD8A8
postgres_container  | 2024-11-04 22:27:54.373 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:27:54.373 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:27:54.373 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:28:05.514 UTC [26] LOG:  checkpoint complete: wrote 60 buffers (0.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.310 s, sync=2.848 s, total=11.142 s; sync files=17, longest=1.735 s, average=0.168 s; distance=660646 kB, estimate=773579 kB; lsn=64/480E2028, redo lsn=64/295F7180
postgres_container  | 2024-11-04 22:28:05.515 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:28:05.515 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:28:05.515 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:28:16.533 UTC [120] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:28:16.533 UTC [120] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:28:28.495 UTC [26] LOG:  checkpoint complete: wrote 649 buffers (4.0%); 0 WAL file(s) added, 8 removed, 31 recycled; write=18.667 s, sync=2.600 s, total=22.981 s; sync files=212, longest=1.519 s, average=0.013 s; distance=641547 kB, estimate=760376 kB; lsn=64/7039FB48, redo lsn=64/5087A058
postgres_container  | 2024-11-04 22:28:28.496 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:28:28.496 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:28:28.496 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:28:40.551 UTC [26] LOG:  checkpoint complete: wrote 8339 buffers (50.9%); 0 WAL file(s) added, 8 removed, 31 recycled; write=7.066 s, sync=2.965 s, total=12.056 s; sync files=78, longest=2.503 s, average=0.038 s; distance=644447 kB, estimate=748783 kB; lsn=64/97775AA8, redo lsn=64/77DD1D30
postgres_container  | 2024-11-04 22:28:40.552 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:28:40.552 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:28:40.553 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:28:53.430 UTC [26] LOG:  checkpoint complete: wrote 4627 buffers (28.2%); 0 WAL file(s) added, 9 removed, 33 recycled; write=6.797 s, sync=3.787 s, total=12.877 s; sync files=99, longest=3.497 s, average=0.039 s; distance=676331 kB, estimate=741538 kB; lsn=64/BFF2CCC8, redo lsn=64/A124CBB8
postgres_container  | 2024-11-04 22:28:53.430 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:28:53.430 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:28:53.430 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:29:04.572 UTC [140] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:29:04.572 UTC [140] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:29:17.631 UTC [26] LOG:  checkpoint complete: wrote 242 buffers (1.5%); 0 WAL file(s) added, 7 removed, 30 recycled; write=19.817 s, sync=2.474 s, total=24.201 s; sync files=216, longest=1.445 s, average=0.012 s; distance=620065 kB, estimate=729391 kB; lsn=64/E708A5B8, redo lsn=64/C6FD5240
postgres_container  | 2024-11-04 22:29:17.632 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:29:17.632 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:29:17.632 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:29:30.207 UTC [26] LOG:  checkpoint complete: wrote 8309 buffers (50.7%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.294 s, sync=2.988 s, total=12.576 s; sync files=68, longest=2.859 s, average=0.044 s; distance=672134 kB, estimate=723665 kB; lsn=65/EE84180, redo lsn=64/F0036CA0
postgres_container  | 2024-11-04 22:29:30.209 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:29:30.209 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:29:30.209 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:29:43.772 UTC [26] LOG:  checkpoint complete: wrote 2834 buffers (17.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.780 s, sync=3.877 s, total=13.564 s; sync files=77, longest=3.006 s, average=0.051 s; distance=701400 kB, estimate=721439 kB; lsn=65/38B80170, redo lsn=65/1AD2CE08
postgres_container  | 2024-11-04 22:29:50.307 UTC [160] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:29:50.307 UTC [160] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:29:54.293 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:29:54.293 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:29:54.293 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:30:05.579 UTC [26] LOG:  checkpoint complete: wrote 3898 buffers (23.8%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.451 s, sync=4.057 s, total=11.286 s; sync files=244, longest=2.032 s, average=0.017 s; distance=531294 kB, estimate=702424 kB; lsn=65/5D31B408, redo lsn=65/3B404908
postgres_container  | 2024-11-04 22:30:05.580 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:30:05.580 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:30:05.580 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:30:17.499 UTC [26] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.774 s, sync=2.465 s, total=11.920 s; sync files=41, longest=2.151 s, average=0.061 s; distance=689866 kB, estimate=701168 kB; lsn=65/84F11260, redo lsn=65/655B7220
postgres_container  | 2024-11-04 22:30:17.500 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:30:17.500 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:30:17.500 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:30:35.393 UTC [180] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:30:35.393 UTC [180] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:30:38.359 UTC [179] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:30:38.359 UTC [179] CONTEXT:  while scanning block 3958 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:30:38.360 UTC [179] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:30:41.687 UTC [26] LOG:  checkpoint complete: wrote 2433 buffers (14.8%); 0 WAL file(s) added, 11 removed, 29 recycled; write=21.607 s, sync=1.301 s, total=24.188 s; sync files=199, longest=0.061 s, average=0.007 s; distance=662830 kB, estimate=697335 kB; lsn=65/AFED4510, redo lsn=65/8DD02CE8
postgres_container  | 2024-11-04 22:30:41.688 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:30:41.688 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:30:41.688 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:30:53.083 UTC [26] LOG:  checkpoint complete: wrote 4915 buffers (30.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.773 s, sync=1.834 s, total=11.395 s; sync files=91, longest=1.030 s, average=0.021 s; distance=643620 kB, estimate=691963 kB; lsn=65/D4225060, redo lsn=65/B518BF98
postgres_container  | 2024-11-04 22:30:53.083 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:30:53.083 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:30:53.084 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:31:04.547 UTC [26] LOG:  checkpoint complete: wrote 3543 buffers (21.6%); 0 WAL file(s) added, 8 removed, 31 recycled; write=6.795 s, sync=3.164 s, total=11.464 s; sync files=43, longest=2.290 s, average=0.074 s; distance=652730 kB, estimate=688040 kB; lsn=65/FC400328, redo lsn=65/DCEFA918
postgres_container  | 2024-11-04 22:31:04.548 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:31:04.548 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:31:04.548 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:31:33.058 UTC [200] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:31:33.058 UTC [200] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:31:34.626 UTC [199] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 22:31:34.626 UTC [199] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 22:31:34.626 UTC [199] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:31:34.626 UTC [199] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:31:34.627 UTC [199] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:31:34.627 UTC [199] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:31:34.627 UTC [199] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:31:34.627 UTC [199] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:31:34.627 UTC [199] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:31:41.090 UTC [26] LOG:  checkpoint complete: wrote 2130 buffers (13.0%); 0 WAL file(s) added, 13 removed, 27 recycled; write=32.176 s, sync=2.672 s, total=36.543 s; sync files=215, longest=0.742 s, average=0.013 s; distance=643747 kB, estimate=683610 kB; lsn=66/284000C0, redo lsn=66/43A37D8
postgres_container  | 2024-11-04 22:31:41.091 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:31:53.166 UTC [26] LOG:  checkpoint complete: wrote 6422 buffers (39.2%); 0 WAL file(s) added, 14 removed, 31 recycled; write=7.235 s, sync=3.037 s, total=12.075 s; sync files=76, longest=1.953 s, average=0.040 s; distance=748033 kB, estimate=748033 kB; lsn=66/51400118, redo lsn=66/31E23EB0
postgres_container  | 2024-11-04 22:31:53.166 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:31:53.166 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:31:53.167 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:32:04.276 UTC [26] LOG:  checkpoint complete: wrote 2025 buffers (12.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.761 s, sync=2.863 s, total=11.110 s; sync files=35, longest=1.721 s, average=0.082 s; distance=673369 kB, estimate=740567 kB; lsn=66/7A4022D8, redo lsn=66/5AFBA308
postgres_container  | 2024-11-04 22:32:04.277 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:32:04.277 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:32:04.277 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:32:15.369 UTC [219] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:32:15.369 UTC [219] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:32:29.452 UTC [26] LOG:  checkpoint complete: wrote 1818 buffers (11.1%); 0 WAL file(s) added, 17 removed, 22 recycled; write=18.311 s, sync=5.282 s, total=25.176 s; sync files=208, longest=1.463 s, average=0.026 s; distance=637359 kB, estimate=730246 kB; lsn=66/AA402058, redo lsn=66/81E26238
postgres_container  | 2024-11-04 22:32:29.453 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:32:29.453 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:32:29.453 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:32:43.224 UTC [26] LOG:  checkpoint complete: wrote 8287 buffers (50.6%); 0 WAL file(s) added, 18 removed, 30 recycled; write=10.181 s, sync=1.216 s, total=13.771 s; sync files=89, longest=0.339 s, average=0.014 s; distance=786925 kB, estimate=786925 kB; lsn=66/D2F19C60, redo lsn=66/B1EA18D0
postgres_container  | 2024-11-04 22:32:43.224 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:32:43.224 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:32:43.224 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:32:56.488 UTC [26] LOG:  checkpoint complete: wrote 5108 buffers (31.2%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.770 s, sync=2.798 s, total=13.264 s; sync files=100, longest=2.179 s, average=0.028 s; distance=729922 kB, estimate=781225 kB; lsn=66/FD1EFCA0, redo lsn=66/DE772148
postgres_container  | 2024-11-04 22:32:56.488 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:32:56.488 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:32:56.488 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:33:05.382 UTC [239] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:33:05.382 UTC [239] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:33:17.357 UTC [26] LOG:  checkpoint complete: wrote 245 buffers (1.5%); 0 WAL file(s) added, 2 removed, 31 recycled; write=16.477 s, sync=2.714 s, total=20.870 s; sync files=222, longest=1.429 s, average=0.013 s; distance=540661 kB, estimate=757168 kB; lsn=67/1F864C38, redo lsn=66/FF76F5B8
postgres_container  | 2024-11-04 22:33:17.358 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 22:33:17.358 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:33:17.358 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:33:29.139 UTC [26] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.990 s, sync=2.887 s, total=11.781 s; sync files=68, longest=2.821 s, average=0.043 s; distance=675697 kB, estimate=749021 kB; lsn=67/47400128, redo lsn=67/28B4BA48
postgres_container  | 2024-11-04 22:33:29.139 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:33:29.139 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:33:29.140 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:33:41.307 UTC [26] LOG:  checkpoint complete: wrote 1437 buffers (8.8%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.074 s, sync=2.188 s, total=12.168 s; sync files=63, longest=0.298 s, average=0.035 s; distance=662695 kB, estimate=740389 kB; lsn=67/712AE2D8, redo lsn=67/512758F0
postgres_container  | 2024-11-04 22:33:47.715 UTC [259] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:33:47.715 UTC [259] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:33:52.918 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:33:52.918 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:33:52.918 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:34:04.497 UTC [26] LOG:  checkpoint complete: wrote 3088 buffers (18.8%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.332 s, sync=4.539 s, total=11.579 s; sync files=248, longest=2.259 s, average=0.019 s; distance=539953 kB, estimate=720345 kB; lsn=67/943FE7A0, redo lsn=67/721C20C0
postgres_container  | 2024-11-04 22:34:04.498 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:34:04.498 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:34:04.498 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:34:17.299 UTC [26] LOG:  checkpoint complete: wrote 5404 buffers (33.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.574 s, sync=2.311 s, total=12.802 s; sync files=34, longest=2.254 s, average=0.068 s; distance=681997 kB, estimate=716510 kB; lsn=67/BA406278, redo lsn=67/9BBC5518
postgres_container  | 2024-11-04 22:34:17.300 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:34:17.300 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:34:17.300 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:34:29.918 UTC [26] LOG:  checkpoint complete: wrote 2978 buffers (18.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.696 s, sync=3.659 s, total=12.619 s; sync files=38, longest=3.402 s, average=0.097 s; distance=667549 kB, estimate=711614 kB; lsn=67/E282BA20, redo lsn=67/C47AC938
postgres_container  | 2024-11-04 22:34:38.144 UTC [279] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:34:38.144 UTC [279] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:34:39.684 UTC [276] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 22:34:39.684 UTC [276] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:34:39.684 UTC [276] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:34:39.684 UTC [276] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:34:39.685 UTC [276] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:34:39.685 UTC [276] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:34:39.685 UTC [276] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:34:39.685 UTC [276] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:34:40.605 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:34:40.605 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:34:40.605 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:34:53.488 UTC [26] LOG:  checkpoint complete: wrote 3882 buffers (23.7%); 0 WAL file(s) added, 7 removed, 26 recycled; write=5.444 s, sync=5.781 s, total=12.883 s; sync files=248, longest=2.290 s, average=0.024 s; distance=536921 kB, estimate=694145 kB; lsn=68/A402060, redo lsn=67/E54030C0
postgres_container  | 2024-11-04 22:34:53.489 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:34:53.489 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:34:53.489 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:35:06.081 UTC [26] LOG:  checkpoint complete: wrote 4585 buffers (28.0%); 0 WAL file(s) added, 13 removed, 31 recycled; write=8.568 s, sync=2.377 s, total=12.593 s; sync files=41, longest=1.680 s, average=0.058 s; distance=732195 kB, estimate=732195 kB; lsn=68/31AD9370, redo lsn=68/11F0C070
postgres_container  | 2024-11-04 22:35:06.082 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:35:06.082 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:35:06.082 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:35:22.531 UTC [298] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:35:22.531 UTC [298] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:35:29.885 UTC [26] LOG:  checkpoint complete: wrote 2787 buffers (17.0%); 0 WAL file(s) added, 14 removed, 27 recycled; write=19.330 s, sync=2.657 s, total=23.804 s; sync files=210, longest=0.536 s, average=0.013 s; distance=656637 kB, estimate=724640 kB; lsn=68/5E400128, redo lsn=68/3A04B790
postgres_container  | 2024-11-04 22:35:29.886 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:35:29.886 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:35:29.886 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:35:43.292 UTC [26] LOG:  checkpoint complete: wrote 6112 buffers (37.3%); 0 WAL file(s) added, 15 removed, 29 recycled; write=7.666 s, sync=3.500 s, total=13.406 s; sync files=83, longest=1.373 s, average=0.043 s; distance=734711 kB, estimate=734711 kB; lsn=68/884020C0, redo lsn=68/66DC9448
postgres_container  | 2024-11-04 22:35:43.292 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:35:43.292 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:35:43.292 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:35:57.588 UTC [26] LOG:  checkpoint complete: wrote 5660 buffers (34.5%); 0 WAL file(s) added, 14 removed, 31 recycled; write=10.261 s, sync=2.085 s, total=14.296 s; sync files=100, longest=1.077 s, average=0.021 s; distance=725415 kB, estimate=733781 kB; lsn=68/B34007C0, redo lsn=68/93233058
postgres_container  | 2024-11-04 22:35:57.589 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:35:57.589 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:35:57.589 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:36:13.023 UTC [318] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:36:13.023 UTC [318] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:36:23.209 UTC [26] LOG:  checkpoint complete: wrote 2364 buffers (14.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=19.950 s, sync=1.367 s, total=25.620 s; sync files=223, longest=0.631 s, average=0.007 s; distance=673693 kB, estimate=727772 kB; lsn=68/DC4003F0, redo lsn=68/BC41A7E8
postgres_container  | 2024-11-04 22:36:23.210 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 22:36:23.210 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:36:23.210 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:36:35.435 UTC [26] LOG:  checkpoint complete: wrote 8326 buffers (50.8%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.147 s, sync=3.688 s, total=12.226 s; sync files=70, longest=1.890 s, average=0.053 s; distance=677934 kB, estimate=722788 kB; lsn=69/500AE38, redo lsn=68/E5A26240
postgres_container  | 2024-11-04 22:36:35.436 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:36:35.436 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:36:35.457 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:36:48.278 UTC [26] LOG:  checkpoint complete: wrote 3474 buffers (21.2%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.781 s, sync=1.400 s, total=12.842 s; sync files=90, longest=1.043 s, average=0.016 s; distance=664920 kB, estimate=717002 kB; lsn=69/2D2018D8, redo lsn=69/E37C450
postgres_container  | 2024-11-04 22:36:48.279 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:36:48.279 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:36:48.279 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:36:59.523 UTC [338] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:36:59.523 UTC [338] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:37:11.715 UTC [26] LOG:  checkpoint complete: wrote 476 buffers (2.9%); 0 WAL file(s) added, 9 removed, 31 recycled; write=18.742 s, sync=2.782 s, total=23.437 s; sync files=225, longest=1.563 s, average=0.013 s; distance=655266 kB, estimate=710828 kB; lsn=69/561E50B0, redo lsn=69/36364E88
postgres_container  | 2024-11-04 22:37:11.716 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:37:11.716 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:37:11.716 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:37:23.127 UTC [26] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.753 s, sync=2.762 s, total=11.412 s; sync files=70, longest=2.567 s, average=0.040 s; distance=671822 kB, estimate=706927 kB; lsn=69/7E0AC0D0, redo lsn=69/5F378690
postgres_container  | 2024-11-04 22:37:23.128 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:37:23.128 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:37:23.128 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:37:34.466 UTC [26] LOG:  checkpoint complete: wrote 3012 buffers (18.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.709 s, sync=2.754 s, total=11.338 s; sync files=38, longest=2.593 s, average=0.073 s; distance=664746 kB, estimate=702709 kB; lsn=69/A6B82D80, redo lsn=69/87CA3030
postgres_container  | 2024-11-04 22:37:34.467 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:37:34.467 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:37:34.467 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:37:42.631 UTC [358] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:37:42.631 UTC [358] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:37:47.503 UTC [350] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:37:58.350 UTC [26] LOG:  checkpoint complete: wrote 352 buffers (2.1%); 0 WAL file(s) added, 3 removed, 31 recycled; write=18.659 s, sync=3.266 s, total=23.884 s; sync files=248, longest=1.117 s, average=0.014 s; distance=556115 kB, estimate=688050 kB; lsn=69/C98DA058, redo lsn=69/A9BB7D30
postgres_container  | 2024-11-04 22:37:58.351 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:37:58.351 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:37:58.351 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:38:10.579 UTC [26] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.722 s, sync=2.461 s, total=12.229 s; sync files=65, longest=2.347 s, average=0.038 s; distance=672706 kB, estimate=686515 kB; lsn=69/F15BCC90, redo lsn=69/D2CA88A0
postgres_container  | 2024-11-04 22:38:10.580 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:38:10.580 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:38:10.626 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:38:21.740 UTC [26] LOG:  checkpoint complete: wrote 2932 buffers (17.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.255 s, sync=2.265 s, total=11.160 s; sync files=37, longest=2.127 s, average=0.062 s; distance=679309 kB, estimate=685795 kB; lsn=6A/1A9B7E88, redo lsn=69/FC40BD90
postgres_container  | 2024-11-04 22:38:21.740 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:38:21.740 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:38:21.740 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:38:29.203 UTC [377] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:38:29.203 UTC [377] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:38:41.322 UTC [26] LOG:  checkpoint complete: wrote 149 buffers (0.9%); 0 WAL file(s) added, 2 removed, 29 recycled; write=15.222 s, sync=2.681 s, total=19.582 s; sync files=231, longest=1.230 s, average=0.012 s; distance=511163 kB, estimate=668332 kB; lsn=6A/3D75B680, redo lsn=6A/1B73A9D8
postgres_container  | 2024-11-04 22:38:41.322 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 22:38:41.322 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:38:41.323 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:38:53.594 UTC [26] LOG:  checkpoint complete: wrote 8509 buffers (51.9%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.841 s, sync=2.552 s, total=12.272 s; sync files=89, longest=2.431 s, average=0.029 s; distance=700066 kB, estimate=700066 kB; lsn=6A/6475F4F8, redo lsn=6A/462E32A0
postgres_container  | 2024-11-04 22:38:53.594 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:38:53.594 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:38:53.595 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:39:04.271 UTC [26] LOG:  checkpoint complete: wrote 4138 buffers (25.3%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.049 s, sync=3.537 s, total=10.677 s; sync files=42, longest=2.780 s, average=0.085 s; distance=659596 kB, estimate=696019 kB; lsn=6A/8D20D4F8, redo lsn=6A/6E706508
postgres_container  | 2024-11-04 22:39:12.586 UTC [397] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:39:12.586 UTC [397] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:39:14.787 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 22:39:14.787 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:39:14.787 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:39:25.598 UTC [26] LOG:  checkpoint complete: wrote 3785 buffers (23.1%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.424 s, sync=2.586 s, total=10.811 s; sync files=235, longest=1.381 s, average=0.012 s; distance=537585 kB, estimate=680175 kB; lsn=6A/AF400890, redo lsn=6A/8F402BC8
postgres_container  | 2024-11-04 22:39:25.599 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:39:25.599 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:39:25.599 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:39:37.289 UTC [26] LOG:  checkpoint complete: wrote 4586 buffers (28.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.157 s, sync=3.765 s, total=11.690 s; sync files=28, longest=3.691 s, average=0.135 s; distance=665345 kB, estimate=678692 kB; lsn=6A/D65AA5D0, redo lsn=6A/B7DC30E8
postgres_container  | 2024-11-04 22:39:37.289 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:39:37.289 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:39:37.305 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:39:48.906 UTC [26] LOG:  checkpoint complete: wrote 4688 buffers (28.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=6.113 s, sync=3.696 s, total=11.618 s; sync files=93, longest=1.635 s, average=0.040 s; distance=628972 kB, estimate=673720 kB; lsn=6A/FD685608, redo lsn=6A/DE3FE100
postgres_container  | 2024-11-04 22:39:48.907 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:39:48.907 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:39:48.907 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:39:54.984 UTC [417] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:39:54.984 UTC [417] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:40:11.047 UTC [26] LOG:  checkpoint complete: wrote 206 buffers (1.3%); 0 WAL file(s) added, 3 removed, 29 recycled; write=16.311 s, sync=4.042 s, total=22.140 s; sync files=228, longest=1.957 s, average=0.018 s; distance=535012 kB, estimate=659849 kB; lsn=6B/2067FD00, redo lsn=6A/FEE77200
postgres_container  | 2024-11-04 22:40:11.048 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:40:11.048 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:40:11.048 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:40:22.667 UTC [26] LOG:  checkpoint complete: wrote 8322 buffers (50.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.540 s, sync=2.230 s, total=11.619 s; sync files=65, longest=2.167 s, average=0.035 s; distance=693558 kB, estimate=693558 kB; lsn=6B/47402260, redo lsn=6B/293C4C70
postgres_container  | 2024-11-04 22:40:22.668 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:40:22.668 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:40:22.668 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:40:33.560 UTC [26] LOG:  checkpoint complete: wrote 3079 buffers (18.8%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.089 s, sync=2.389 s, total=10.892 s; sync files=39, longest=2.317 s, average=0.062 s; distance=649996 kB, estimate=689202 kB; lsn=6B/6F5690B8, redo lsn=6B/50E87E08
postgres_container  | 2024-11-04 22:40:41.455 UTC [437] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:40:41.455 UTC [437] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:40:46.157 UTC [431] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:40:46.735 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:40:46.735 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:40:46.736 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:40:58.999 UTC [26] LOG:  checkpoint complete: wrote 2306 buffers (14.1%); 0 WAL file(s) added, 9 removed, 24 recycled; write=5.268 s, sync=5.472 s, total=12.264 s; sync files=255, longest=1.813 s, average=0.022 s; distance=529902 kB, estimate=673272 kB; lsn=6B/98400238, redo lsn=6B/71403910
postgres_container  | 2024-11-04 22:40:58.999 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:40:58.999 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:40:58.999 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:41:12.194 UTC [26] LOG:  checkpoint complete: wrote 6153 buffers (37.6%); 0 WAL file(s) added, 15 removed, 31 recycled; write=8.280 s, sync=3.190 s, total=13.195 s; sync files=53, longest=2.558 s, average=0.061 s; distance=755671 kB, estimate=755671 kB; lsn=6B/BF067DD8, redo lsn=6B/9F5F95B8
postgres_container  | 2024-11-04 22:41:12.194 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:41:12.194 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:41:12.194 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:41:28.684 UTC [456] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:41:28.684 UTC [456] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:41:35.603 UTC [26] LOG:  checkpoint complete: wrote 1408 buffers (8.6%); 0 WAL file(s) added, 13 removed, 27 recycled; write=19.468 s, sync=2.159 s, total=23.410 s; sync files=209, longest=0.228 s, average=0.011 s; distance=653013 kB, estimate=745405 kB; lsn=6B/EB0301A0, redo lsn=6B/C73AECF8
postgres_container  | 2024-11-04 22:41:35.604 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:41:35.604 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:41:35.604 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:41:47.756 UTC [26] LOG:  checkpoint complete: wrote 6344 buffers (38.7%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.141 s, sync=2.202 s, total=12.153 s; sync files=92, longest=1.027 s, average=0.024 s; distance=709604 kB, estimate=741825 kB; lsn=6C/12400200, redo lsn=6B/F28A80A8
postgres_container  | 2024-11-04 22:41:47.757 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:41:47.757 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:41:47.757 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:41:59.459 UTC [26] LOG:  checkpoint complete: wrote 2210 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=6.836 s, sync=2.967 s, total=11.702 s; sync files=40, longest=0.569 s, average=0.075 s; distance=680124 kB, estimate=735655 kB; lsn=6C/3C400318, redo lsn=6C/1C0D72F8
postgres_container  | 2024-11-04 22:41:59.460 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:41:59.460 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:41:59.460 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:42:12.610 UTC [476] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:42:12.610 UTC [476] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:42:25.802 UTC [26] LOG:  checkpoint complete: wrote 2367 buffers (14.4%); 0 WAL file(s) added, 18 removed, 23 recycled; write=20.189 s, sync=4.352 s, total=26.342 s; sync files=215, longest=1.260 s, average=0.021 s; distance=680819 kB, estimate=730171 kB; lsn=6C/6D707528, redo lsn=6C/459B4250
postgres_container  | 2024-11-04 22:42:25.803 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 22:42:25.803 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:42:25.803 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:42:39.333 UTC [26] LOG:  checkpoint complete: wrote 8320 buffers (50.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.664 s, sync=0.533 s, total=13.530 s; sync files=77, longest=0.167 s, average=0.007 s; distance=797072 kB, estimate=797072 kB; lsn=6C/954020C8, redo lsn=6C/764183F0
postgres_container  | 2024-11-04 22:42:39.334 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:42:39.334 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:42:39.334 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:42:52.459 UTC [26] LOG:  checkpoint complete: wrote 3725 buffers (22.7%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.271 s, sync=2.506 s, total=13.126 s; sync files=96, longest=1.611 s, average=0.027 s; distance=671822 kB, estimate=784547 kB; lsn=6C/BE65E2A0, redo lsn=6C/9F42BDB8
postgres_container  | 2024-11-04 22:42:52.460 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:42:52.460 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:42:52.460 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:43:02.083 UTC [496] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:43:02.083 UTC [496] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:43:14.794 UTC [26] LOG:  checkpoint complete: wrote 224 buffers (1.4%); 0 WAL file(s) added, 7 removed, 31 recycled; write=17.242 s, sync=3.086 s, total=22.334 s; sync files=216, longest=1.869 s, average=0.015 s; distance=630008 kB, estimate=769093 kB; lsn=6C/E5C213E8, redo lsn=6C/C5B69FC8
postgres_container  | 2024-11-04 22:43:14.794 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 22:43:14.794 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:43:14.794 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:43:26.158 UTC [26] LOG:  checkpoint complete: wrote 8330 buffers (50.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.916 s, sync=2.643 s, total=11.365 s; sync files=69, longest=2.537 s, average=0.039 s; distance=675662 kB, estimate=759750 kB; lsn=6D/D849CC8, redo lsn=6C/EEF3D9A8
postgres_container  | 2024-11-04 22:43:26.159 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:43:26.159 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:43:26.159 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:43:37.645 UTC [26] LOG:  checkpoint complete: wrote 3021 buffers (18.4%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.119 s, sync=3.755 s, total=11.486 s; sync files=40, longest=2.906 s, average=0.094 s; distance=651077 kB, estimate=748883 kB; lsn=6D/363D62B0, redo lsn=6D/16B0F000
postgres_container  | 2024-11-04 22:43:37.646 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:43:37.646 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:43:37.646 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:43:46.023 UTC [516] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:43:46.023 UTC [516] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:43:49.784 UTC [508] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 22:44:02.827 UTC [26] LOG:  checkpoint complete: wrote 352 buffers (2.1%); 0 WAL file(s) added, 8 removed, 25 recycled; write=17.890 s, sync=5.862 s, total=25.181 s; sync files=244, longest=1.710 s, average=0.025 s; distance=536202 kB, estimate=727615 kB; lsn=6D/5DB8E9C0, redo lsn=6D/376B19A0
postgres_container  | 2024-11-04 22:44:02.827 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:44:02.827 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:44:02.845 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:44:16.173 UTC [26] LOG:  checkpoint complete: wrote 8297 buffers (50.6%); 0 WAL file(s) added, 15 removed, 31 recycled; write=7.993 s, sync=3.358 s, total=13.346 s; sync files=81, longest=2.680 s, average=0.042 s; distance=750898 kB, estimate=750898 kB; lsn=6D/8529DCC0, redo lsn=6D/653FE248
postgres_container  | 2024-11-04 22:44:16.174 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:44:16.174 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:44:16.174 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:44:32.654 UTC [535] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:44:32.654 UTC [535] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:44:34.752 UTC [536] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 22:44:34.752 UTC [536] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 22:44:34.762 UTC [536] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 22:44:34.762 UTC [536] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:44:34.795 UTC [536] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:44:34.796 UTC [536] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:44:39.878 UTC [26] LOG:  checkpoint complete: wrote 1289 buffers (7.9%); 0 WAL file(s) added, 14 removed, 27 recycled; write=19.903 s, sync=2.167 s, total=23.704 s; sync files=213, longest=0.339 s, average=0.011 s; distance=668911 kB, estimate=742699 kB; lsn=6D/B2402058, redo lsn=6D/8E13A038
postgres_container  | 2024-11-04 22:44:39.879 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:44:39.879 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:44:39.879 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:44:51.650 UTC [26] LOG:  checkpoint complete: wrote 6249 buffers (38.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.274 s, sync=2.829 s, total=11.771 s; sync files=77, longest=1.389 s, average=0.037 s; distance=728354 kB, estimate=741265 kB; lsn=6D/D9A00E60, redo lsn=6D/BA882AB0
postgres_container  | 2024-11-04 22:44:51.651 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:44:51.651 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:44:51.651 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:45:02.853 UTC [26] LOG:  checkpoint complete: wrote 2210 buffers (13.5%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.582 s, sync=3.061 s, total=11.203 s; sync files=39, longest=1.988 s, average=0.079 s; distance=659864 kB, estimate=733124 kB; lsn=6E/2402440, redo lsn=6D/E2CE8AC0
postgres_container  | 2024-11-04 22:45:02.854 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:45:02.854 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:45:02.854 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:45:17.196 UTC [555] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:45:17.196 UTC [555] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:45:29.103 UTC [26] LOG:  checkpoint complete: wrote 2698 buffers (16.5%); 0 WAL file(s) added, 17 removed, 22 recycled; write=19.991 s, sync=4.524 s, total=26.250 s; sync files=210, longest=1.133 s, average=0.022 s; distance=638652 kB, estimate=723677 kB; lsn=6E/324020D8, redo lsn=6E/9C97C58
postgres_container  | 2024-11-04 22:45:29.105 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 22:45:29.105 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:45:29.105 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:45:43.084 UTC [26] LOG:  checkpoint complete: wrote 8282 buffers (50.5%); 0 WAL file(s) added, 18 removed, 32 recycled; write=8.708 s, sync=2.935 s, total=13.980 s; sync files=77, longest=2.193 s, average=0.039 s; distance=810458 kB, estimate=810458 kB; lsn=6E/5AD4D3B8, redo lsn=6E/3B40E558
postgres_container  | 2024-11-04 22:45:43.084 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:45:43.084 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:45:43.125 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:45:56.293 UTC [26] LOG:  checkpoint complete: wrote 3385 buffers (20.7%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.977 s, sync=3.168 s, total=13.210 s; sync files=99, longest=2.983 s, average=0.032 s; distance=704489 kB, estimate=799861 kB; lsn=6E/84FE4058, redo lsn=6E/66408B40
postgres_container  | 2024-11-04 22:45:56.294 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:45:56.294 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:45:56.294 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:46:05.830 UTC [575] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:46:05.830 UTC [575] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:46:17.807 UTC [26] LOG:  checkpoint complete: wrote 233 buffers (1.4%); 0 WAL file(s) added, 6 removed, 32 recycled; write=17.346 s, sync=2.108 s, total=21.513 s; sync files=224, longest=1.101 s, average=0.010 s; distance=627380 kB, estimate=782613 kB; lsn=6E/ABCFC318, redo lsn=6E/8C8B5E08
postgres_container  | 2024-11-04 22:46:17.808 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 22:46:17.808 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:46:17.808 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:46:30.669 UTC [26] LOG:  checkpoint complete: wrote 8332 buffers (50.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.500 s, sync=3.211 s, total=12.862 s; sync files=68, longest=3.114 s, average=0.048 s; distance=675100 kB, estimate=771862 kB; lsn=6E/D4402120, redo lsn=6E/B5BFD1D0
postgres_container  | 2024-11-04 22:46:30.670 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:46:30.670 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:46:30.670 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:46:44.524 UTC [26] LOG:  checkpoint complete: wrote 2929 buffers (17.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.502 s, sync=4.079 s, total=13.854 s; sync files=68, longest=2.895 s, average=0.060 s; distance=667042 kB, estimate=761380 kB; lsn=6E/FE402718, redo lsn=6E/DE765C30
postgres_container  | 2024-11-04 22:46:54.866 UTC [595] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:46:54.866 UTC [595] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:46:57.108 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 22:46:57.108 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:46:57.108 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:47:10.629 UTC [26] LOG:  checkpoint complete: wrote 3113 buffers (19.0%); 0 WAL file(s) added, 9 removed, 24 recycled; write=5.398 s, sync=6.651 s, total=13.522 s; sync files=243, longest=1.857 s, average=0.028 s; distance=537195 kB, estimate=738961 kB; lsn=6F/26405EF0, redo lsn=6E/FF400A30
postgres_container  | 2024-11-04 22:47:10.630 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:47:10.630 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:47:10.630 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:47:22.989 UTC [26] LOG:  checkpoint complete: wrote 5369 buffers (32.8%); 0 WAL file(s) added, 14 removed, 32 recycled; write=7.688 s, sync=2.900 s, total=12.360 s; sync files=49, longest=2.417 s, average=0.060 s; distance=755542 kB, estimate=755542 kB; lsn=6F/4C3EE460, redo lsn=6F/2D5D6378
postgres_container  | 2024-11-04 22:47:22.990 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:47:22.990 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:47:22.990 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:47:39.187 UTC [615] ERROR:  could not identify an equality operator for type json at character 750
postgres_container  | 2024-11-04 22:47:39.187 UTC [615] STATEMENT:  CREATE TABLE lk_death_adm_mapped AS
postgres_container  | 	SELECT DISTINCT src.subject_id,
postgres_container  | 	    nth_value(src.deathtime, 1)   over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS deathtime,
postgres_container  | 	    nth_value(src.dischtime, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS dischtime,
postgres_container  | 	    32817 AS type_concept_id, -- OMOP4976890 EHR
postgres_container  | 	                --
postgres_container  | 	                'admissions'      AS         unit_id,
postgres_container  | 	                src.load_table_id AS         load_table_id,
postgres_container  | 	    nth_value(src.load_row_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS load_row_id,
postgres_container  | 	    nth_value(src.trace_id, 1) over(
postgres_container  | 	        partition BY src.subject_id
postgres_container  | 	        ORDER BY src.admittime ASC
postgres_container  | 	    )                                   AS trace_id
postgres_container  | 	FROM src_admissions src -- adm
postgres_container  | 	WHERE src.deathtime IS NOT NULL
postgres_container  | 	;
postgres_container  | 2024-11-04 22:47:42.877 UTC [612] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:47:42.877 UTC [612] CONTEXT:  while scanning block 6189 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 22:47:43.877 UTC [612] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:47:43.877 UTC [612] CONTEXT:  while scanning block 4012 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:47:43.887 UTC [612] LOG:  skipping vacuum of "pg_toast_336521" --- lock not available
postgres_container  | 2024-11-04 22:47:50.113 UTC [26] LOG:  checkpoint complete: wrote 2121 buffers (12.9%); 0 WAL file(s) added, 14 removed, 26 recycled; write=22.416 s, sync=3.165 s, total=27.124 s; sync files=218, longest=0.303 s, average=0.015 s; distance=658650 kB, estimate=745853 kB; lsn=6F/7A434E90, redo lsn=6F/5590CEE0
postgres_container  | 2024-11-04 22:47:50.114 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 22:47:50.114 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:47:50.114 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:48:06.202 UTC [26] LOG:  checkpoint complete: wrote 6250 buffers (38.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=12.900 s, sync=0.791 s, total=16.089 s; sync files=78, longest=0.512 s, average=0.011 s; distance=678054 kB, estimate=739073 kB; lsn=6F/9DB7C120, redo lsn=6F/7EF369E8
postgres_container  | 2024-11-04 22:48:06.203 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 22:48:06.203 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:48:06.203 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:48:17.811 UTC [26] LOG:  checkpoint complete: wrote 2210 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.776 s, sync=0.815 s, total=11.608 s; sync files=39, longest=0.505 s, average=0.021 s; distance=693093 kB, estimate=734475 kB; lsn=6F/C8178290, redo lsn=6F/A940FE50
postgres_container  | 2024-11-04 22:48:17.812 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:48:17.812 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:48:17.812 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:48:30.647 UTC [629] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-04 22:48:40.320 UTC [26] LOG:  checkpoint complete: wrote 2632 buffers (16.1%); 0 WAL file(s) added, 14 removed, 26 recycled; write=16.670 s, sync=4.037 s, total=22.508 s; sync files=279, longest=1.537 s, average=0.015 s; distance=659684 kB, estimate=726996 kB; lsn=6F/F5F4E878, redo lsn=6F/D18490A8
postgres_container  | 2024-11-04 22:48:40.320 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:48:40.320 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:48:40.321 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:48:54.506 UTC [26] LOG:  checkpoint complete: wrote 6888 buffers (42.0%); 0 WAL file(s) added, 11 removed, 32 recycled; write=9.436 s, sync=2.858 s, total=14.186 s; sync files=164, longest=2.152 s, average=0.018 s; distance=696236 kB, estimate=723920 kB; lsn=70/1B265A30, redo lsn=6F/FC0340F8
postgres_container  | 2024-11-04 22:48:54.506 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 22:48:54.506 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:48:54.506 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:49:06.769 UTC [26] LOG:  checkpoint complete: wrote 6087 buffers (37.2%); 0 WAL file(s) added, 6 removed, 31 recycled; write=7.494 s, sync=3.047 s, total=12.263 s; sync files=121, longest=2.507 s, average=0.026 s; distance=609495 kB, estimate=712477 kB; lsn=70/414005E0, redo lsn=70/21369EA0
postgres_container  | 2024-11-04 22:49:06.770 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:49:06.770 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:49:06.789 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:49:21.085 UTC [774] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:49:21.085 UTC [774] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:49:33.806 UTC [26] LOG:  checkpoint complete: wrote 1466 buffers (8.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=22.519 s, sync=2.609 s, total=27.036 s; sync files=261, longest=1.640 s, average=0.010 s; distance=655952 kB, estimate=706825 kB; lsn=70/68FD0908, redo lsn=70/493FE288
postgres_container  | 2024-11-04 22:49:33.806 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 22:49:33.806 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:49:33.828 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:49:40.631 UTC [796] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:49:40.631 UTC [796] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:49:51.843 UTC [26] LOG:  checkpoint complete: wrote 3338 buffers (20.4%); 0 WAL file(s) added, 6 removed, 32 recycled; write=14.681 s, sync=1.613 s, total=18.037 s; sync files=327, longest=0.998 s, average=0.005 s; distance=622619 kB, estimate=698404 kB; lsn=70/8E440380, redo lsn=70/6F4051A8
postgres_container  | 2024-11-04 22:49:51.844 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-04 22:49:51.844 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:49:51.844 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:50:02.020 UTC [815] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:50:02.020 UTC [815] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:50:13.451 UTC [26] LOG:  checkpoint complete: wrote 5537 buffers (33.8%); 0 WAL file(s) added, 8 removed, 28 recycled; write=16.785 s, sync=3.407 s, total=21.608 s; sync files=310, longest=1.499 s, average=0.011 s; distance=597870 kB, estimate=688351 kB; lsn=70/B6B8EAA8, redo lsn=70/93BE0AF8
postgres_container  | 2024-11-04 22:50:13.452 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 22:50:13.452 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:50:13.452 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:50:26.522 UTC [26] LOG:  checkpoint complete: wrote 6921 buffers (42.2%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.384 s, sync=4.924 s, total=13.071 s; sync files=111, longest=3.046 s, average=0.045 s; distance=657927 kB, estimate=685308 kB; lsn=70/DB400110, redo lsn=70/BBE626F8
postgres_container  | 2024-11-04 22:50:26.523 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:50:26.523 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:50:26.523 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:50:41.595 UTC [26] LOG:  checkpoint complete: wrote 6627 buffers (40.4%); 0 WAL file(s) added, 11 removed, 30 recycled; write=9.645 s, sync=2.383 s, total=15.072 s; sync files=45, longest=1.312 s, average=0.053 s; distance=670774 kB, estimate=683855 kB; lsn=71/54054C8, redo lsn=70/E4D70258
postgres_container  | 2024-11-04 22:50:41.595 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 22:50:41.595 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:50:41.596 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:51:02.821 UTC [837] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:51:02.821 UTC [837] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:51:15.737 UTC [26] LOG:  checkpoint complete: wrote 5790 buffers (35.3%); 0 WAL file(s) added, 18 removed, 25 recycled; write=27.674 s, sync=4.185 s, total=34.142 s; sync files=250, longest=1.090 s, average=0.017 s; distance=706348 kB, estimate=706348 kB; lsn=71/35955A08, redo lsn=71/FF3B5F8
postgres_container  | 2024-11-04 22:51:15.738 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:51:31.172 UTC [26] LOG:  checkpoint complete: wrote 8216 buffers (50.1%); 0 WAL file(s) added, 19 removed, 32 recycled; write=9.179 s, sync=3.355 s, total=15.434 s; sync files=74, longest=3.253 s, average=0.046 s; distance=831081 kB, estimate=831081 kB; lsn=71/61525FC8, redo lsn=71/42AD5B68
postgres_container  | 2024-11-04 22:51:31.172 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 22:51:31.172 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:51:31.200 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:51:44.302 UTC [26] LOG:  checkpoint complete: wrote 65 buffers (0.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.161 s, sync=2.695 s, total=13.131 s; sync files=30, longest=2.045 s, average=0.090 s; distance=681140 kB, estimate=816087 kB; lsn=71/8BBEA020, redo lsn=71/6C402D78
postgres_container  | 2024-11-04 22:51:44.302 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:51:44.302 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:51:44.302 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:51:58.252 UTC [859] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:51:58.252 UTC [859] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:52:12.588 UTC [26] LOG:  checkpoint complete: wrote 843 buffers (5.1%); 0 WAL file(s) added, 11 removed, 30 recycled; write=23.144 s, sync=3.316 s, total=28.286 s; sync files=241, longest=1.142 s, average=0.014 s; distance=678405 kB, estimate=802319 kB; lsn=71/B6D595C8, redo lsn=71/95A84520
postgres_container  | 2024-11-04 22:52:12.589 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 22:52:12.589 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:52:12.621 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:52:25.454 UTC [26] LOG:  checkpoint complete: wrote 8309 buffers (50.7%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.130 s, sync=3.423 s, total=12.866 s; sync files=71, longest=3.247 s, average=0.049 s; distance=714030 kB, estimate=793490 kB; lsn=71/E04F9690, redo lsn=71/C13D00C8
postgres_container  | 2024-11-04 22:52:25.455 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:52:25.455 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:52:25.455 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:52:37.062 UTC [26] LOG:  checkpoint complete: wrote 2934 buffers (17.9%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.432 s, sync=2.803 s, total=11.607 s; sync files=41, longest=2.652 s, average=0.069 s; distance=726637 kB, estimate=786804 kB; lsn=72/BBD94F0, redo lsn=71/ED96B4C8
postgres_container  | 2024-11-04 22:52:45.204 UTC [881] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:52:45.204 UTC [881] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:52:49.891 UTC [873] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:52:50.875 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:52:50.875 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:52:50.875 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:53:01.416 UTC [26] LOG:  checkpoint complete: wrote 3887 buffers (23.7%); 0 WAL file(s) added, 4 removed, 29 recycled; write=4.699 s, sync=4.497 s, total=10.542 s; sync files=262, longest=1.472 s, average=0.018 s; distance=533885 kB, estimate=761513 kB; lsn=72/30556058, redo lsn=72/E2CABA0
postgres_container  | 2024-11-04 22:53:01.417 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:53:01.417 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:53:01.459 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:53:13.035 UTC [26] LOG:  checkpoint complete: wrote 4586 buffers (28.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=5.974 s, sync=3.651 s, total=11.619 s; sync files=40, longest=3.215 s, average=0.092 s; distance=688933 kB, estimate=754255 kB; lsn=72/58402278, redo lsn=72/38394030
postgres_container  | 2024-11-04 22:53:13.036 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:53:13.036 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:53:13.036 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:53:30.890 UTC [902] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:53:30.890 UTC [902] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:53:37.149 UTC [26] LOG:  checkpoint complete: wrote 2394 buffers (14.6%); 0 WAL file(s) added, 15 removed, 28 recycled; write=20.615 s, sync=2.024 s, total=24.113 s; sync files=221, longest=0.297 s, average=0.010 s; distance=705025 kB, estimate=749332 kB; lsn=72/86162938, redo lsn=72/63414728
postgres_container  | 2024-11-04 22:53:37.150 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 22:53:37.150 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:53:37.150 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:53:48.916 UTC [26] LOG:  checkpoint complete: wrote 6330 buffers (38.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.293 s, sync=2.121 s, total=11.767 s; sync files=92, longest=1.062 s, average=0.024 s; distance=703070 kB, estimate=744705 kB; lsn=72/AD400758, redo lsn=72/8E2AC208
postgres_container  | 2024-11-04 22:53:48.918 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:53:48.918 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:53:48.918 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:54:00.864 UTC [26] LOG:  checkpoint complete: wrote 2204 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.256 s, sync=2.368 s, total=11.946 s; sync files=37, longest=1.280 s, average=0.064 s; distance=710846 kB, estimate=741320 kB; lsn=72/D8BC50A8, redo lsn=72/B98DBC70
postgres_container  | 2024-11-04 22:54:00.865 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:54:00.865 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:54:00.865 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:54:12.570 UTC [924] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:54:12.570 UTC [924] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:54:25.280 UTC [26] LOG:  checkpoint complete: wrote 1686 buffers (10.3%); 0 WAL file(s) added, 20 removed, 23 recycled; write=18.567 s, sync=4.187 s, total=24.416 s; sync files=223, longest=1.008 s, average=0.019 s; distance=708963 kB, estimate=738084 kB; lsn=73/C8944D8, redo lsn=72/E4D34908
postgres_container  | 2024-11-04 22:54:25.281 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:54:25.281 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:54:25.282 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:54:38.288 UTC [26] LOG:  checkpoint complete: wrote 8332 buffers (50.9%); 0 WAL file(s) added, 17 removed, 33 recycled; write=8.182 s, sync=2.627 s, total=13.006 s; sync files=73, longest=2.535 s, average=0.036 s; distance=809860 kB, estimate=809860 kB; lsn=73/34838060, redo lsn=73/16415938
postgres_container  | 2024-11-04 22:54:38.288 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:54:38.288 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:54:38.288 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:54:51.379 UTC [26] LOG:  checkpoint complete: wrote 3412 buffers (20.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=9.534 s, sync=1.341 s, total=13.092 s; sync files=62, longest=0.735 s, average=0.022 s; distance=700324 kB, estimate=798906 kB; lsn=73/5FBD5098, redo lsn=73/40FFEC70
postgres_container  | 2024-11-04 22:55:00.369 UTC [946] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:55:00.369 UTC [946] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:55:01.814 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 22:55:01.814 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:55:01.814 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:55:12.327 UTC [26] LOG:  checkpoint complete: wrote 342 buffers (2.1%); 0 WAL file(s) added, 3 removed, 30 recycled; write=5.962 s, sync=3.005 s, total=10.514 s; sync files=254, longest=1.432 s, average=0.012 s; distance=524354 kB, estimate=771451 kB; lsn=73/820AADF0, redo lsn=73/6100F530
postgres_container  | 2024-11-04 22:55:12.328 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:55:12.328 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:55:12.328 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:55:23.418 UTC [26] LOG:  checkpoint complete: wrote 8087 buffers (49.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=6.564 s, sync=2.570 s, total=11.090 s; sync files=49, longest=2.520 s, average=0.053 s; distance=680057 kB, estimate=762311 kB; lsn=73/A8402190, redo lsn=73/8A82D930
postgres_container  | 2024-11-04 22:55:23.419 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:55:23.419 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:55:23.419 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:55:34.544 UTC [26] LOG:  checkpoint complete: wrote 2817 buffers (17.2%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.067 s, sync=2.256 s, total=11.125 s; sync files=40, longest=2.215 s, average=0.057 s; distance=683134 kB, estimate=754394 kB; lsn=73/D2401C58, redo lsn=73/B434D4B8
postgres_container  | 2024-11-04 22:55:41.199 UTC [968] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:55:41.199 UTC [968] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:55:46.289 UTC [960] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:55:47.289 UTC [960] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 22:55:47.289 UTC [960] CONTEXT:  while scanning block 3967 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 22:55:47.290 UTC [960] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:55:47.290 UTC [960] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 22:55:47.290 UTC [960] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 22:55:47.290 UTC [960] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 22:55:47.290 UTC [960] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 22:55:47.297 UTC [960] LOG:  skipping vacuum of "pg_toast_343053" --- lock not available
postgres_container  | 2024-11-04 22:55:48.305 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:55:48.305 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:55:48.305 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:55:58.029 UTC [26] LOG:  checkpoint complete: wrote 3889 buffers (23.7%); 0 WAL file(s) added, 1 removed, 32 recycled; write=6.401 s, sync=1.607 s, total=9.725 s; sync files=266, longest=0.952 s, average=0.007 s; distance=538602 kB, estimate=732815 kB; lsn=73/F44002F8, redo lsn=73/D5148098
postgres_container  | 2024-11-04 22:55:58.030 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 22:55:58.030 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:55:58.031 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:56:09.865 UTC [26] LOG:  checkpoint complete: wrote 4585 buffers (28.0%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.652 s, sync=2.068 s, total=11.835 s; sync files=36, longest=1.863 s, average=0.058 s; distance=670045 kB, estimate=726538 kB; lsn=74/1D400300, redo lsn=73/FDF9F508
postgres_container  | 2024-11-04 22:56:09.866 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 22:56:09.866 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:56:09.866 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:56:27.976 UTC [989] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:56:27.976 UTC [989] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:56:34.635 UTC [26] LOG:  checkpoint complete: wrote 3836 buffers (23.4%); 0 WAL file(s) added, 16 removed, 28 recycled; write=21.240 s, sync=1.902 s, total=24.769 s; sync files=225, longest=0.366 s, average=0.009 s; distance=713991 kB, estimate=725283 kB; lsn=74/4CC08C50, redo lsn=74/298E14D8
postgres_container  | 2024-11-04 22:56:34.636 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:56:34.636 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:56:34.636 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:56:46.694 UTC [26] LOG:  checkpoint complete: wrote 6280 buffers (38.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.028 s, sync=1.804 s, total=12.058 s; sync files=89, longest=0.907 s, average=0.021 s; distance=698737 kB, estimate=722628 kB; lsn=74/73402150, redo lsn=74/5433D920
postgres_container  | 2024-11-04 22:56:46.694 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:56:46.694 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:56:46.694 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:56:58.616 UTC [26] LOG:  checkpoint complete: wrote 2356 buffers (14.4%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.205 s, sync=2.468 s, total=11.922 s; sync files=60, longest=1.333 s, average=0.042 s; distance=720842 kB, estimate=722450 kB; lsn=74/9F402098, redo lsn=74/80330450
postgres_container  | 2024-11-04 22:56:58.617 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:56:58.617 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:56:58.617 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:57:10.278 UTC [1011] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:57:10.278 UTC [1011] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:57:24.251 UTC [26] LOG:  checkpoint complete: wrote 1642 buffers (10.0%); 0 WAL file(s) added, 20 removed, 23 recycled; write=19.032 s, sync=4.756 s, total=25.634 s; sync files=222, longest=1.361 s, average=0.022 s; distance=703729 kB, estimate=720578 kB; lsn=74/D34004D8, redo lsn=74/AB26C948
postgres_container  | 2024-11-04 22:57:24.251 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 22:57:24.251 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:57:24.251 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:57:37.304 UTC [26] LOG:  checkpoint complete: wrote 8323 buffers (50.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=7.855 s, sync=2.946 s, total=13.053 s; sync files=71, longest=2.846 s, average=0.042 s; distance=815475 kB, estimate=815475 kB; lsn=74/FB877800, redo lsn=74/DCEC9780
postgres_container  | 2024-11-04 22:57:37.305 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:57:37.305 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:57:37.320 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:57:49.738 UTC [26] LOG:  checkpoint complete: wrote 4703 buffers (28.7%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.752 s, sync=2.182 s, total=12.433 s; sync files=91, longest=1.928 s, average=0.024 s; distance=692993 kB, estimate=803227 kB; lsn=75/25ADC448, redo lsn=75/7389DC8
postgres_container  | 2024-11-04 22:57:49.738 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:57:49.738 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:57:49.738 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:57:58.355 UTC [1033] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:57:58.355 UTC [1033] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:58:09.672 UTC [26] LOG:  checkpoint complete: wrote 239 buffers (1.5%); 0 WAL file(s) added, 2 removed, 30 recycled; write=15.542 s, sync=2.832 s, total=19.934 s; sync files=241, longest=1.701 s, average=0.012 s; distance=534024 kB, estimate=776307 kB; lsn=75/483FFEB8, redo lsn=75/27D0BDD8
postgres_container  | 2024-11-04 22:58:09.672 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 22:58:09.672 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:58:09.672 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:58:21.428 UTC [26] LOG:  checkpoint complete: wrote 8309 buffers (50.7%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.902 s, sync=2.466 s, total=11.756 s; sync files=66, longest=2.406 s, average=0.038 s; distance=669936 kB, estimate=765670 kB; lsn=75/6F50BCE0, redo lsn=75/50B48168
postgres_container  | 2024-11-04 22:58:21.429 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 22:58:21.429 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:58:21.429 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:58:41.003 UTC [1055] ERROR:  could not identify an equality operator for type json at character 319
postgres_container  | 2024-11-04 22:58:41.003 UTC [1055] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	GROUP BY src.trace_id
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 22:58:42.924 UTC [26] LOG:  checkpoint complete: wrote 3640 buffers (22.2%); 0 WAL file(s) added, 10 removed, 34 recycled; write=16.631 s, sync=1.818 s, total=21.495 s; sync files=72, longest=1.488 s, average=0.026 s; distance=713431 kB, estimate=760446 kB; lsn=75/99831680, redo lsn=75/7C3FE040
postgres_container  | 2024-11-04 22:58:44.130 UTC [1050] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 22:58:44.130 UTC [1050] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 22:58:44.130 UTC [1050] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 22:58:46.298 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 22:58:46.298 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:58:46.301 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:58:59.720 UTC [26] LOG:  checkpoint complete: wrote 3851 buffers (23.5%); 0 WAL file(s) added, 4 removed, 29 recycled; write=10.383 s, sync=1.519 s, total=13.422 s; sync files=233, longest=0.356 s, average=0.007 s; distance=540672 kB, estimate=738468 kB; lsn=75/BF4E6E90, redo lsn=75/9D3FE0A8
postgres_container  | 2024-11-04 22:58:59.721 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:58:59.721 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:58:59.741 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:59:12.137 UTC [26] LOG:  checkpoint complete: wrote 4593 buffers (28.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.806 s, sync=2.004 s, total=12.416 s; sync files=43, longest=1.380 s, average=0.047 s; distance=695215 kB, estimate=734143 kB; lsn=75/E74022D0, redo lsn=75/C7AEA078
postgres_container  | 2024-11-04 22:59:12.138 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 22:59:12.138 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:59:12.138 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:59:20.710 UTC [1066] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-04 22:59:28.300 UTC [26] LOG:  checkpoint complete: wrote 2151 buffers (13.1%); 0 WAL file(s) added, 21 removed, 24 recycled; write=10.553 s, sync=3.592 s, total=16.162 s; sync files=250, longest=0.887 s, average=0.015 s; distance=729236 kB, estimate=733652 kB; lsn=76/1BC9C660, redo lsn=75/F430F2D0
postgres_container  | 2024-11-04 22:59:28.301 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 22:59:28.301 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:59:28.301 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 22:59:36.057 UTC [1162] LOG:  skipping analyze of "drgcodes" --- lock not available
postgres_container  | 2024-11-04 22:59:36.347 UTC [1162] LOG:  skipping analyze of "emar_detail" --- lock not available
postgres_container  | 2024-11-04 22:59:37.701 UTC [1162] LOG:  skipping analyze of "patients" --- lock not available
postgres_container  | 2024-11-04 22:59:42.242 UTC [1162] LOG:  skipping vacuum of "chartevents" --- lock not available
postgres_container  | 2024-11-04 22:59:44.802 UTC [26] LOG:  checkpoint complete: wrote 8401 buffers (51.3%); 0 WAL file(s) added, 21 removed, 27 recycled; write=9.541 s, sync=4.938 s, total=16.501 s; sync files=154, longest=1.735 s, average=0.033 s; distance=787525 kB, estimate=787525 kB; lsn=76/48260B08, redo lsn=76/24420918
postgres_container  | 2024-11-04 22:59:44.803 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 22:59:44.803 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 22:59:44.816 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:00:00.003 UTC [26] LOG:  checkpoint complete: wrote 8625 buffers (52.6%); 0 WAL file(s) added, 17 removed, 26 recycled; write=9.026 s, sync=4.312 s, total=15.200 s; sync files=200, longest=1.570 s, average=0.022 s; distance=714845 kB, estimate=780257 kB; lsn=76/744004B0, redo lsn=76/4FE38058
postgres_container  | 2024-11-04 23:00:00.004 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 23:00:00.004 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:00:00.004 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:00:09.475 UTC [1203] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:00:09.475 UTC [1203] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:00:28.963 UTC [26] LOG:  checkpoint complete: wrote 389 buffers (2.4%); 0 WAL file(s) added, 14 removed, 30 recycled; write=22.310 s, sync=4.607 s, total=28.960 s; sync files=272, longest=3.374 s, average=0.017 s; distance=708673 kB, estimate=773099 kB; lsn=76/9CAD3B80, redo lsn=76/7B248700
postgres_container  | 2024-11-04 23:00:28.964 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 23:00:28.964 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:00:28.964 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:00:31.628 UTC [1224] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:00:31.628 UTC [1224] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:00:50.909 UTC [26] LOG:  checkpoint complete: wrote 858 buffers (5.2%); 0 WAL file(s) added, 14 removed, 30 recycled; write=15.708 s, sync=3.625 s, total=21.946 s; sync files=283, longest=0.832 s, average=0.013 s; distance=724929 kB, estimate=768282 kB; lsn=76/C8402C28, redo lsn=76/A7638B08
postgres_container  | 2024-11-04 23:00:50.910 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 23:00:50.910 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:00:50.910 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:01:10.724 UTC [26] LOG:  checkpoint complete: wrote 5722 buffers (34.9%); 0 WAL file(s) added, 14 removed, 31 recycled; write=14.326 s, sync=3.136 s, total=19.814 s; sync files=95, longest=1.307 s, average=0.034 s; distance=746784 kB, estimate=766132 kB; lsn=76/F4ADF300, redo lsn=76/D4F80E88
postgres_container  | 2024-11-04 23:01:10.725 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-04 23:01:10.725 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:01:10.725 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:01:27.339 UTC [26] LOG:  checkpoint complete: wrote 2754 buffers (16.8%); 0 WAL file(s) added, 11 removed, 31 recycled; write=11.654 s, sync=2.357 s, total=16.614 s; sync files=46, longest=0.707 s, average=0.052 s; distance=676375 kB, estimate=757156 kB; lsn=77/1E415080, redo lsn=76/FE406B60
postgres_container  | 2024-11-04 23:01:27.339 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 23:01:27.339 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:01:27.388 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:01:44.291 UTC [1247] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:01:44.291 UTC [1247] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:01:51.589 UTC [1239] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:01:51.589 UTC [1239] CONTEXT:  while scanning block 8681 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 23:01:52.589 UTC [1239] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:01:52.589 UTC [1239] CONTEXT:  while scanning block 3805 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 23:01:52.603 UTC [1239] LOG:  skipping analyze of "src_patients" --- lock not available
postgres_container  | 2024-11-04 23:01:52.603 UTC [1239] LOG:  skipping analyze of "src_admissions" --- lock not available
postgres_container  | 2024-11-04 23:01:52.603 UTC [1239] LOG:  skipping vacuum of "src_transfers" --- lock not available
postgres_container  | 2024-11-04 23:02:05.218 UTC [26] LOG:  checkpoint complete: wrote 4782 buffers (29.2%); 0 WAL file(s) added, 16 removed, 28 recycled; write=30.300 s, sync=4.529 s, total=37.879 s; sync files=228, longest=1.340 s, average=0.020 s; distance=720869 kB, estimate=753527 kB; lsn=77/4D40B378, redo lsn=77/2A4000C8
postgres_container  | 2024-11-04 23:02:05.219 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:02:20.685 UTC [26] LOG:  checkpoint complete: wrote 7077 buffers (43.2%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.055 s, sync=2.555 s, total=15.467 s; sync files=79, longest=0.646 s, average=0.033 s; distance=799576 kB, estimate=799576 kB; lsn=77/7A036030, redo lsn=77/5B0D6258
postgres_container  | 2024-11-04 23:02:20.686 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 23:02:20.686 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:02:20.686 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:02:36.025 UTC [26] LOG:  checkpoint complete: wrote 4386 buffers (26.8%); 0 WAL file(s) added, 14 removed, 32 recycled; write=11.361 s, sync=1.325 s, total=15.339 s; sync files=38, longest=0.812 s, average=0.035 s; distance=765585 kB, estimate=796177 kB; lsn=77/A86EB2D0, redo lsn=77/89C7A798
postgres_container  | 2024-11-04 23:02:43.875 UTC [1269] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:02:43.875 UTC [1269] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:02:49.300 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 23:02:49.300 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:02:49.326 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:03:02.676 UTC [26] LOG:  checkpoint complete: wrote 4223 buffers (25.8%); 0 WAL file(s) added, 3 removed, 30 recycled; write=8.457 s, sync=2.542 s, total=13.376 s; sync files=259, longest=1.052 s, average=0.010 s; distance=531998 kB, estimate=769759 kB; lsn=77/CB2CDE88, redo lsn=77/AA402068
postgres_container  | 2024-11-04 23:03:02.676 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:03:02.676 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:03:02.676 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:03:16.831 UTC [26] LOG:  checkpoint complete: wrote 4863 buffers (29.7%); 0 WAL file(s) added, 12 removed, 31 recycled; write=10.484 s, sync=1.050 s, total=14.155 s; sync files=47, longest=0.346 s, average=0.023 s; distance=713494 kB, estimate=764132 kB; lsn=77/F5C1BE10, redo lsn=77/D5CC7B10
postgres_container  | 2024-11-04 23:03:16.831 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:03:16.831 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:03:16.831 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:03:34.431 UTC [1291] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:03:34.431 UTC [1291] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:03:36.156 UTC [1288] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 23:03:36.156 UTC [1288] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 23:03:36.156 UTC [1288] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 23:03:36.156 UTC [1288] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] CONTEXT:  while scanning block 3968 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:03:37.156 UTC [1288] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:03:44.066 UTC [26] LOG:  checkpoint complete: wrote 3122 buffers (19.1%); 0 WAL file(s) added, 18 removed, 27 recycled; write=22.400 s, sync=2.688 s, total=27.235 s; sync files=227, longest=0.859 s, average=0.012 s; distance=731526 kB, estimate=760872 kB; lsn=78/26A787C8, redo lsn=78/2729598
postgres_container  | 2024-11-04 23:03:44.066 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 23:03:44.066 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:03:44.066 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:03:58.073 UTC [26] LOG:  checkpoint complete: wrote 8454 buffers (51.6%); 0 WAL file(s) added, 19 removed, 32 recycled; write=8.561 s, sync=2.639 s, total=14.007 s; sync files=79, longest=2.432 s, average=0.034 s; distance=829486 kB, estimate=829486 kB; lsn=78/54013728, redo lsn=78/35135188
postgres_container  | 2024-11-04 23:03:58.073 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:03:58.073 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:03:58.073 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:04:10.138 UTC [26] LOG:  checkpoint complete: wrote 162 buffers (1.0%); 0 WAL file(s) added, 12 removed, 33 recycled; write=7.571 s, sync=2.241 s, total=12.065 s; sync files=17, longest=1.597 s, average=0.132 s; distance=739319 kB, estimate=820470 kB; lsn=78/8040B828, redo lsn=78/62332EC8
postgres_container  | 2024-11-04 23:04:10.139 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:04:10.139 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:04:10.139 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:04:21.122 UTC [1312] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:04:21.122 UTC [1312] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:04:32.758 UTC [26] LOG:  checkpoint complete: wrote 179 buffers (1.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=18.831 s, sync=2.025 s, total=22.620 s; sync files=224, longest=1.106 s, average=0.010 s; distance=685350 kB, estimate=806958 kB; lsn=78/ABBEA268, redo lsn=78/8C07C810
postgres_container  | 2024-11-04 23:04:32.759 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 23:04:32.759 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:04:32.759 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:04:45.608 UTC [26] LOG:  checkpoint complete: wrote 8286 buffers (50.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.017 s, sync=2.387 s, total=12.850 s; sync files=86, longest=2.106 s, average=0.028 s; distance=691109 kB, estimate=795373 kB; lsn=78/D5400258, redo lsn=78/B6365CE8
postgres_container  | 2024-11-04 23:04:45.608 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:04:45.608 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:04:45.608 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:05:06.172 UTC [1334] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:05:06.172 UTC [1334] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:05:07.472 UTC [26] LOG:  checkpoint complete: wrote 4622 buffers (28.2%); 0 WAL file(s) added, 8 removed, 34 recycled; write=18.452 s, sync=2.043 s, total=21.864 s; sync files=126, longest=1.942 s, average=0.017 s; distance=693665 kB, estimate=785202 kB; lsn=78/FDDC35C8, redo lsn=78/E08CE378
postgres_container  | 2024-11-04 23:05:08.837 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:05:08.837 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:05:08.837 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:05:21.495 UTC [26] LOG:  checkpoint complete: wrote 3782 buffers (23.1%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.843 s, sync=3.424 s, total=12.658 s; sync files=227, longest=1.961 s, average=0.016 s; distance=535751 kB, estimate=760257 kB; lsn=79/22063668, redo lsn=79/14000B8
postgres_container  | 2024-11-04 23:05:21.495 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:05:21.495 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:05:21.496 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:05:36.928 UTC [26] LOG:  checkpoint complete: wrote 4585 buffers (28.0%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.652 s, sync=2.125 s, total=15.433 s; sync files=41, longest=1.516 s, average=0.052 s; distance=737344 kB, estimate=757966 kB; lsn=79/4D4004B8, redo lsn=79/2E4100C8
postgres_container  | 2024-11-04 23:05:36.928 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 23:05:36.928 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:05:36.956 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:05:52.654 UTC [1356] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:05:52.654 UTC [1356] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:06:07.306 UTC [26] LOG:  checkpoint complete: wrote 4630 buffers (28.3%); 0 WAL file(s) added, 17 removed, 25 recycled; write=24.433 s, sync=3.663 s, total=30.378 s; sync files=259, longest=1.426 s, average=0.015 s; distance=696119 kB, estimate=751781 kB; lsn=79/7E4002C0, redo lsn=79/58BDE020
postgres_container  | 2024-11-04 23:06:07.306 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:06:21.869 UTC [26] LOG:  checkpoint complete: wrote 8329 buffers (50.8%); 0 WAL file(s) added, 19 removed, 32 recycled; write=11.015 s, sync=0.778 s, total=14.563 s; sync files=74, longest=0.676 s, average=0.011 s; distance=838242 kB, estimate=838242 kB; lsn=79/AA7DB0F8, redo lsn=79/8BE768D8
postgres_container  | 2024-11-04 23:06:21.870 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:06:21.870 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:06:21.907 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:06:34.025 UTC [26] LOG:  checkpoint complete: wrote 1194 buffers (7.3%); 0 WAL file(s) added, 13 removed, 33 recycled; write=7.395 s, sync=2.601 s, total=12.156 s; sync files=38, longest=2.545 s, average=0.069 s; distance=742942 kB, estimate=828712 kB; lsn=79/D7424138, redo lsn=79/B93FE128
postgres_container  | 2024-11-04 23:06:34.026 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:06:34.026 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:06:34.026 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:06:44.271 UTC [1378] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:06:44.271 UTC [1378] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:06:48.940 UTC [1368] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:06:48.940 UTC [1368] CONTEXT:  while scanning block 18214 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:07:00.043 UTC [26] LOG:  checkpoint complete: wrote 345 buffers (2.1%); 0 WAL file(s) added, 9 removed, 31 recycled; write=21.050 s, sync=3.055 s, total=26.018 s; sync files=254, longest=0.995 s, average=0.013 s; distance=655915 kB, estimate=811432 kB; lsn=7A/1400198, redo lsn=79/E1488DD0
postgres_container  | 2024-11-04 23:07:00.044 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:07:00.044 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:07:00.044 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:07:12.482 UTC [26] LOG:  checkpoint complete: wrote 8310 buffers (50.7%); 0 WAL file(s) added, 10 removed, 33 recycled; write=6.146 s, sync=4.091 s, total=12.438 s; sync files=65, longest=4.031 s, average=0.063 s; distance=700698 kB, estimate=800359 kB; lsn=7A/2A6DFE70, redo lsn=7A/C0CF5F0
postgres_container  | 2024-11-04 23:07:12.483 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:07:12.483 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:07:12.483 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:07:32.495 UTC [1399] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:07:32.495 UTC [1399] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:07:34.427 UTC [1400] LOG:  skipping analyze of "src_labevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.427 UTC [1400] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:07:34.428 UTC [1400] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:07:34.429 UTC [1400] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:07:34.429 UTC [1400] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:07:34.429 UTC [1400] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:07:34.429 UTC [1400] LOG:  skipping vacuum of "pg_toast_351795" --- lock not available
postgres_container  | 2024-11-04 23:07:37.415 UTC [26] LOG:  checkpoint complete: wrote 2498 buffers (15.2%); 0 WAL file(s) added, 12 removed, 30 recycled; write=22.291 s, sync=1.089 s, total=24.932 s; sync files=196, longest=0.094 s, average=0.006 s; distance=695441 kB, estimate=789867 kB; lsn=7A/573FE1D0, redo lsn=7A/367F3B60
postgres_container  | 2024-11-04 23:07:37.415 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:07:37.415 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:07:37.416 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:07:49.906 UTC [26] LOG:  checkpoint complete: wrote 3866 buffers (23.6%); 0 WAL file(s) added, 8 removed, 30 recycled; write=5.094 s, sync=4.805 s, total=12.491 s; sync files=99, longest=1.937 s, average=0.049 s; distance=624275 kB, estimate=773308 kB; lsn=7A/7D4252E8, redo lsn=7A/5C998780
postgres_container  | 2024-11-04 23:07:49.906 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:07:49.906 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:07:49.906 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:08:03.097 UTC [26] LOG:  checkpoint complete: wrote 4590 buffers (28.0%); 0 WAL file(s) added, 14 removed, 31 recycled; write=8.011 s, sync=2.574 s, total=13.192 s; sync files=43, longest=1.674 s, average=0.060 s; distance=736703 kB, estimate=769647 kB; lsn=7A/A92ECBB8, redo lsn=7A/89908618
postgres_container  | 2024-11-04 23:08:03.098 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:08:03.098 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:08:03.098 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:08:17.136 UTC [1421] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:08:17.136 UTC [1421] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:08:29.357 UTC [26] LOG:  checkpoint complete: wrote 2132 buffers (13.0%); 0 WAL file(s) added, 22 removed, 21 recycled; write=19.572 s, sync=4.887 s, total=26.260 s; sync files=222, longest=1.100 s, average=0.023 s; distance=709195 kB, estimate=763602 kB; lsn=7A/DE401168, redo lsn=7A/B4D9B310
postgres_container  | 2024-11-04 23:08:29.358 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:08:29.358 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:08:29.358 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:08:43.536 UTC [26] LOG:  checkpoint complete: wrote 8291 buffers (50.6%); 0 WAL file(s) added, 20 removed, 31 recycled; write=8.296 s, sync=2.943 s, total=14.178 s; sync files=75, longest=2.453 s, average=0.040 s; distance=828624 kB, estimate=828624 kB; lsn=7B/7421D10, redo lsn=7A/E76CF358
postgres_container  | 2024-11-04 23:08:43.536 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:08:43.536 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:08:43.536 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:08:57.791 UTC [26] LOG:  checkpoint complete: wrote 4360 buffers (26.6%); 0 WAL file(s) added, 13 removed, 32 recycled; write=11.072 s, sync=1.291 s, total=14.255 s; sync files=100, longest=1.134 s, average=0.013 s; distance=739685 kB, estimate=819730 kB; lsn=7B/33690690, redo lsn=7B/14928778
postgres_container  | 2024-11-04 23:08:57.791 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:08:57.791 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:08:57.791 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:09:06.759 UTC [1443] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:09:06.759 UTC [1443] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:09:19.435 UTC [26] LOG:  checkpoint complete: wrote 253 buffers (1.5%); 0 WAL file(s) added, 3 removed, 31 recycled; write=16.995 s, sync=2.989 s, total=21.644 s; sync files=234, longest=1.630 s, average=0.013 s; distance=555247 kB, estimate=793281 kB; lsn=7B/56400160, redo lsn=7B/36764700
postgres_container  | 2024-11-04 23:09:19.436 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 23:09:19.436 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:09:19.436 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:09:31.943 UTC [26] LOG:  checkpoint complete: wrote 8339 buffers (50.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.320 s, sync=3.012 s, total=12.507 s; sync files=66, longest=2.926 s, average=0.046 s; distance=682833 kB, estimate=782237 kB; lsn=7B/7E624890, redo lsn=7B/60238C48
postgres_container  | 2024-11-04 23:09:31.943 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:09:31.943 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:09:31.943 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:09:44.229 UTC [26] LOG:  checkpoint complete: wrote 2089 buffers (12.8%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.183 s, sync=1.933 s, total=12.286 s; sync files=79, longest=1.727 s, average=0.025 s; distance=686503 kB, estimate=772663 kB; lsn=7B/A830EA08, redo lsn=7B/8A0A2998
postgres_container  | 2024-11-04 23:09:49.127 UTC [1465] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:09:49.127 UTC [1465] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:09:56.067 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:09:56.067 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:09:56.067 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:10:06.524 UTC [26] LOG:  checkpoint complete: wrote 3902 buffers (23.8%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.923 s, sync=1.682 s, total=10.457 s; sync files=250, longest=0.929 s, average=0.007 s; distance=544139 kB, estimate=749811 kB; lsn=7B/CB368378, redo lsn=7B/AB4055B8
postgres_container  | 2024-11-04 23:10:06.524 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:10:06.524 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:10:06.524 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:10:18.461 UTC [26] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 12 removed, 30 recycled; write=7.764 s, sync=1.871 s, total=11.938 s; sync files=42, longest=1.519 s, average=0.045 s; distance=695604 kB, estimate=744390 kB; lsn=7B/F60F7318, redo lsn=7B/D5B527B0
postgres_container  | 2024-11-04 23:10:18.462 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:10:18.462 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:10:18.462 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:10:35.950 UTC [1487] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:10:35.950 UTC [1487] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:10:37.395 UTC [1484] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:10:43.938 UTC [26] LOG:  checkpoint complete: wrote 2450 buffers (15.0%); 0 WAL file(s) added, 16 removed, 28 recycled; write=20.969 s, sync=2.520 s, total=25.476 s; sync files=226, longest=0.691 s, average=0.012 s; distance=718121 kB, estimate=741763 kB; lsn=7C/24402120, redo lsn=7C/189CF88
postgres_container  | 2024-11-04 23:10:43.938 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:10:43.938 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:10:43.938 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:10:56.964 UTC [26] LOG:  checkpoint complete: wrote 6428 buffers (39.2%); 0 WAL file(s) added, 16 removed, 32 recycled; write=7.562 s, sync=3.090 s, total=13.026 s; sync files=77, longest=0.804 s, average=0.041 s; distance=780745 kB, estimate=780745 kB; lsn=7C/50F05410, redo lsn=7C/3130F3C8
postgres_container  | 2024-11-04 23:10:56.964 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:10:56.964 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:10:56.981 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:11:08.792 UTC [26] LOG:  checkpoint complete: wrote 2033 buffers (12.4%); 0 WAL file(s) added, 13 removed, 32 recycled; write=6.867 s, sync=2.851 s, total=11.828 s; sync files=39, longest=1.664 s, average=0.074 s; distance=735915 kB, estimate=776262 kB; lsn=7C/7D4002B8, redo lsn=7C/5E1BA0C0
postgres_container  | 2024-11-04 23:11:08.792 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:11:08.792 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:11:08.793 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:11:19.949 UTC [1508] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:11:19.949 UTC [1508] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:11:31.382 UTC [26] LOG:  checkpoint complete: wrote 803 buffers (4.9%); 0 WAL file(s) added, 9 removed, 31 recycled; write=18.137 s, sync=2.373 s, total=22.590 s; sync files=220, longest=1.269 s, average=0.011 s; distance=663707 kB, estimate=765006 kB; lsn=7C/A64006D0, redo lsn=7C/869E0FC8
postgres_container  | 2024-11-04 23:11:31.383 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:11:31.383 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:11:31.383 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:11:44.441 UTC [26] LOG:  checkpoint complete: wrote 8297 buffers (50.6%); 0 WAL file(s) added, 13 removed, 30 recycled; write=7.394 s, sync=3.597 s, total=13.059 s; sync files=88, longest=2.773 s, average=0.041 s; distance=709320 kB, estimate=759438 kB; lsn=7C/D27FE170, redo lsn=7C/B1E93118
postgres_container  | 2024-11-04 23:11:44.442 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:11:44.442 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:11:44.442 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:11:57.263 UTC [26] LOG:  checkpoint complete: wrote 4971 buffers (30.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.770 s, sync=4.603 s, total=12.822 s; sync files=104, longest=4.455 s, average=0.045 s; distance=720024 kB, estimate=755496 kB; lsn=7C/FCC868D0, redo lsn=7C/DDDB9318
postgres_container  | 2024-11-04 23:12:06.322 UTC [1530] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:12:06.322 UTC [1530] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:12:08.036 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 23:12:08.036 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:12:08.036 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:12:18.575 UTC [26] LOG:  checkpoint complete: wrote 2882 buffers (17.6%); 0 WAL file(s) added, 1 removed, 32 recycled; write=6.410 s, sync=2.580 s, total=10.540 s; sync files=250, longest=1.376 s, average=0.011 s; distance=530725 kB, estimate=733019 kB; lsn=7D/1DDE6EA8, redo lsn=7C/FE4028C0
postgres_container  | 2024-11-04 23:12:18.576 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:12:18.576 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:12:18.577 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:12:30.010 UTC [26] LOG:  checkpoint complete: wrote 5503 buffers (33.6%); 0 WAL file(s) added, 8 removed, 33 recycled; write=6.936 s, sync=2.471 s, total=11.434 s; sync files=34, longest=2.397 s, average=0.073 s; distance=671032 kB, estimate=726820 kB; lsn=7D/45402160, redo lsn=7D/27350BE8
postgres_container  | 2024-11-04 23:12:30.011 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:12:30.011 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:12:30.074 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:12:42.466 UTC [26] LOG:  checkpoint complete: wrote 3737 buffers (22.8%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.647 s, sync=2.979 s, total=12.456 s; sync files=70, longest=2.179 s, average=0.043 s; distance=685973 kB, estimate=722736 kB; lsn=7D/6F0971A0, redo lsn=7D/51136090
postgres_container  | 2024-11-04 23:12:42.467 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:12:42.467 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:12:42.467 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:12:48.826 UTC [1552] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:12:48.826 UTC [1552] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:13:06.112 UTC [26] LOG:  checkpoint complete: wrote 373 buffers (2.3%); 0 WAL file(s) added, 7 removed, 23 recycled; write=15.456 s, sync=6.560 s, total=23.645 s; sync files=240, longest=1.963 s, average=0.028 s; distance=491243 kB, estimate=699586 kB; lsn=7D/97402138, redo lsn=7D/6F0F0F50
postgres_container  | 2024-11-04 23:13:06.112 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 23:13:06.112 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:13:06.112 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:13:19.999 UTC [26] LOG:  checkpoint complete: wrote 8286 buffers (50.6%); 0 WAL file(s) added, 19 removed, 30 recycled; write=8.217 s, sync=3.276 s, total=13.887 s; sync files=77, longest=2.051 s, average=0.043 s; distance=812845 kB, estimate=812845 kB; lsn=7D/C18C16C8, redo lsn=7D/A0ABC410
postgres_container  | 2024-11-04 23:13:20.000 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:13:20.000 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:13:20.000 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:13:34.369 UTC [1574] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:13:34.369 UTC [1574] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] CONTEXT:  while scanning block 4569 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:13:37.542 UTC [1571] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:13:45.538 UTC [26] LOG:  checkpoint complete: wrote 2693 buffers (16.4%); 0 WAL file(s) added, 18 removed, 26 recycled; write=20.545 s, sync=3.020 s, total=25.538 s; sync files=232, longest=1.359 s, average=0.014 s; distance=718345 kB, estimate=803395 kB; lsn=7D/F13FE3D0, redo lsn=7D/CC83EA00
postgres_container  | 2024-11-04 23:13:45.538 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:13:45.538 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:13:45.538 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:13:58.653 UTC [26] LOG:  checkpoint complete: wrote 8422 buffers (51.4%); 0 WAL file(s) added, 16 removed, 33 recycled; write=8.232 s, sync=2.602 s, total=13.116 s; sync files=77, longest=1.909 s, average=0.034 s; distance=801228 kB, estimate=803178 kB; lsn=7E/1BE32378, redo lsn=7D/FD6B1B40
postgres_container  | 2024-11-04 23:13:58.653 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:13:58.653 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:13:58.653 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:14:10.177 UTC [26] LOG:  checkpoint complete: wrote 212 buffers (1.3%); 0 WAL file(s) added, 10 removed, 33 recycled; write=6.778 s, sync=3.037 s, total=11.524 s; sync files=17, longest=2.400 s, average=0.179 s; distance=698588 kB, estimate=792719 kB; lsn=7E/46ED0940, redo lsn=7E/280E8D18
postgres_container  | 2024-11-04 23:14:10.178 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:14:10.178 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:14:10.193 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:14:20.867 UTC [1595] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:14:20.867 UTC [1595] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:14:32.667 UTC [26] LOG:  checkpoint complete: wrote 471 buffers (2.9%); 0 WAL file(s) added, 8 removed, 31 recycled; write=18.118 s, sync=2.382 s, total=22.489 s; sync files=223, longest=1.225 s, average=0.011 s; distance=652740 kB, estimate=778721 kB; lsn=7E/6FDD11E8, redo lsn=7E/4FE5A038
postgres_container  | 2024-11-04 23:14:32.668 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 23:14:32.668 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:14:32.668 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:14:46.243 UTC [26] LOG:  checkpoint complete: wrote 8282 buffers (50.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.680 s, sync=3.540 s, total=13.575 s; sync files=84, longest=3.076 s, average=0.043 s; distance=709005 kB, estimate=771750 kB; lsn=7E/9A924020, redo lsn=7E/7B2BD6B8
postgres_container  | 2024-11-04 23:14:46.243 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:14:46.243 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:14:46.243 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:15:05.581 UTC [1617] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:15:05.581 UTC [1617] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:15:10.520 UTC [26] LOG:  checkpoint complete: wrote 4725 buffers (28.8%); 0 WAL file(s) added, 14 removed, 30 recycled; write=21.764 s, sync=1.006 s, total=24.277 s; sync files=239, longest=0.067 s, average=0.005 s; distance=726680 kB, estimate=767243 kB; lsn=7E/C84001E0, redo lsn=7E/A7863A88
postgres_container  | 2024-11-04 23:15:10.521 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 23:15:10.521 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:15:10.521 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:15:21.318 UTC [26] LOG:  checkpoint complete: wrote 4204 buffers (25.7%); 0 WAL file(s) added, 8 removed, 31 recycled; write=4.930 s, sync=4.226 s, total=10.798 s; sync files=100, longest=1.649 s, average=0.043 s; distance=636042 kB, estimate=754123 kB; lsn=7E/EE4001F0, redo lsn=7E/CE5862C0
postgres_container  | 2024-11-04 23:15:21.319 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:15:21.319 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:15:21.319 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:15:32.835 UTC [26] LOG:  checkpoint complete: wrote 4201 buffers (25.6%); 0 WAL file(s) added, 12 removed, 31 recycled; write=7.605 s, sync=1.820 s, total=11.516 s; sync files=42, longest=0.859 s, average=0.044 s; distance=702052 kB, estimate=748915 kB; lsn=7F/1923B6C0, redo lsn=7E/F931F598
postgres_container  | 2024-11-04 23:15:32.836 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:15:32.836 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:15:32.836 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:15:45.258 UTC [1639] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:15:45.258 UTC [1639] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:15:59.412 UTC [26] LOG:  checkpoint complete: wrote 3990 buffers (24.4%); 0 WAL file(s) added, 18 removed, 24 recycled; write=20.814 s, sync=3.265 s, total=26.576 s; sync files=232, longest=1.030 s, average=0.015 s; distance=688500 kB, estimate=742874 kB; lsn=7F/4ACBBF98, redo lsn=7F/2337C678
postgres_container  | 2024-11-04 23:15:59.412 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 23:15:59.412 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:15:59.412 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:16:12.656 UTC [26] LOG:  checkpoint complete: wrote 8464 buffers (51.7%); 0 WAL file(s) added, 19 removed, 32 recycled; write=8.703 s, sync=2.051 s, total=13.244 s; sync files=76, longest=2.014 s, average=0.027 s; distance=841611 kB, estimate=841611 kB; lsn=7F/75402020, redo lsn=7F/5695F308
postgres_container  | 2024-11-04 23:16:12.656 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:16:12.656 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:16:12.676 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:16:23.860 UTC [26] LOG:  checkpoint complete: wrote 1155 buffers (7.0%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.809 s, sync=2.646 s, total=11.204 s; sync files=39, longest=2.378 s, average=0.068 s; distance=715395 kB, estimate=828989 kB; lsn=7F/A1402080, redo lsn=7F/82400058
postgres_container  | 2024-11-04 23:16:23.861 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:16:23.861 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:16:23.861 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:16:32.562 UTC [1660] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:16:32.562 UTC [1660] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:16:44.046 UTC [26] LOG:  checkpoint complete: wrote 203 buffers (1.2%); 0 WAL file(s) added, 6 removed, 31 recycled; write=15.971 s, sync=2.472 s, total=20.186 s; sync files=224, longest=1.419 s, average=0.012 s; distance=612018 kB, estimate=807292 kB; lsn=7F/C74001F8, redo lsn=7F/A79AC868
postgres_container  | 2024-11-04 23:16:44.047 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 23:16:44.047 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:16:44.073 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:16:55.693 UTC [26] LOG:  checkpoint complete: wrote 8422 buffers (51.4%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.946 s, sync=1.649 s, total=11.646 s; sync files=73, longest=1.571 s, average=0.023 s; distance=678446 kB, estimate=794407 kB; lsn=7F/EF86AFC8, redo lsn=7F/D10380C0
postgres_container  | 2024-11-04 23:16:55.694 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:16:55.694 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:16:55.694 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:17:12.144 UTC [1682] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:17:12.144 UTC [1682] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:17:12.191 UTC [26] LOG:  checkpoint complete: wrote 2932 buffers (17.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=12.670 s, sync=2.426 s, total=16.498 s; sync files=57, longest=1.708 s, average=0.043 s; distance=701994 kB, estimate=785166 kB; lsn=80/19447D28, redo lsn=7F/FBDC28F0
postgres_container  | 2024-11-04 23:17:16.076 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 23:17:16.076 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:17:16.078 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:17:26.195 UTC [26] LOG:  checkpoint complete: wrote 3737 buffers (22.8%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.103 s, sync=3.657 s, total=10.119 s; sync files=223, longest=1.965 s, average=0.017 s; distance=530676 kB, estimate=759717 kB; lsn=80/3C5A7038, redo lsn=80/1C3FFAB8
postgres_container  | 2024-11-04 23:17:26.196 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:17:26.196 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:17:26.196 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:17:38.173 UTC [26] LOG:  checkpoint complete: wrote 4590 buffers (28.0%); 0 WAL file(s) added, 10 removed, 30 recycled; write=7.039 s, sync=3.160 s, total=11.978 s; sync files=41, longest=2.641 s, average=0.078 s; distance=661386 kB, estimate=749884 kB; lsn=80/64BFAC90, redo lsn=80/449E24F0
postgres_container  | 2024-11-04 23:17:38.174 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:17:38.174 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:17:38.197 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:17:50.160 UTC [26] LOG:  checkpoint complete: wrote 4533 buffers (27.7%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.200 s, sync=3.333 s, total=11.986 s; sync files=94, longest=2.712 s, average=0.036 s; distance=665735 kB, estimate=741469 kB; lsn=80/8B099D30, redo lsn=80/6D4041B0
postgres_container  | 2024-11-04 23:17:58.347 UTC [1704] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:17:58.347 UTC [1704] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:18:00.452 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-04 23:18:00.452 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:18:00.452 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:18:10.397 UTC [26] LOG:  checkpoint complete: wrote 3782 buffers (23.1%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.006 s, sync=3.561 s, total=9.945 s; sync files=248, longest=1.984 s, average=0.015 s; distance=539548 kB, estimate=721277 kB; lsn=80/AE422210, redo lsn=80/8E2EB3F0
postgres_container  | 2024-11-04 23:18:10.398 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:18:10.398 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:18:10.398 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:18:22.018 UTC [26] LOG:  checkpoint complete: wrote 4587 buffers (28.0%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.082 s, sync=2.551 s, total=11.621 s; sync files=42, longest=2.041 s, average=0.061 s; distance=675771 kB, estimate=716726 kB; lsn=80/D7400588, redo lsn=80/B76DA0E0
postgres_container  | 2024-11-04 23:18:22.019 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:18:22.019 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:18:22.019 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:18:38.315 UTC [1726] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:18:38.315 UTC [1726] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:18:41.552 UTC [1721] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:18:41.552 UTC [1721] CONTEXT:  while scanning block 6855 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:18:41.552 UTC [1721] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-04 23:18:42.552 UTC [1721] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:18:42.552 UTC [1721] CONTEXT:  while scanning block 4003 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 23:18:42.553 UTC [1721] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:18:42.553 UTC [1721] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:18:42.553 UTC [1721] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:18:42.553 UTC [1721] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:18:42.553 UTC [1721] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:18:47.172 UTC [26] LOG:  checkpoint complete: wrote 4135 buffers (25.2%); 0 WAL file(s) added, 15 removed, 28 recycled; write=21.929 s, sync=1.852 s, total=25.153 s; sync files=233, longest=0.320 s, average=0.008 s; distance=703808 kB, estimate=715434 kB; lsn=81/5A9FB30, redo lsn=80/E262A180
postgres_container  | 2024-11-04 23:18:47.172 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:18:47.172 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:18:47.172 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:18:58.708 UTC [26] LOG:  checkpoint complete: wrote 6272 buffers (38.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=6.512 s, sync=3.038 s, total=11.536 s; sync files=75, longest=2.538 s, average=0.041 s; distance=704405 kB, estimate=714331 kB; lsn=81/2C402108, redo lsn=81/D60F8A8
postgres_container  | 2024-11-04 23:18:58.708 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:18:58.708 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:18:58.708 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:19:09.997 UTC [26] LOG:  checkpoint complete: wrote 2209 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=6.208 s, sync=3.027 s, total=11.289 s; sync files=38, longest=1.088 s, average=0.080 s; distance=699756 kB, estimate=712874 kB; lsn=81/57B3F630, redo lsn=81/3816A948
postgres_container  | 2024-11-04 23:19:09.998 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:19:09.998 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:19:09.998 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:19:19.225 UTC [1747] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:19:19.225 UTC [1747] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:19:35.027 UTC [26] LOG:  checkpoint complete: wrote 1834 buffers (11.2%); 0 WAL file(s) added, 20 removed, 21 recycled; write=18.267 s, sync=5.058 s, total=25.029 s; sync files=221, longest=1.367 s, average=0.023 s; distance=684606 kB, estimate=710047 kB; lsn=81/8B400108, redo lsn=81/61DFA4C8
postgres_container  | 2024-11-04 23:19:35.028 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:19:35.028 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:19:35.028 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:19:49.649 UTC [26] LOG:  checkpoint complete: wrote 8474 buffers (51.7%); 0 WAL file(s) added, 18 removed, 31 recycled; write=8.906 s, sync=3.157 s, total=14.622 s; sync files=100, longest=2.951 s, average=0.032 s; distance=799743 kB, estimate=799743 kB; lsn=81/B228BDB8, redo lsn=81/92AFA180
postgres_container  | 2024-11-04 23:19:49.650 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:19:49.650 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:19:49.650 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:20:01.742 UTC [26] LOG:  checkpoint complete: wrote 2681 buffers (16.4%); 0 WAL file(s) added, 13 removed, 32 recycled; write=7.448 s, sync=3.099 s, total=12.093 s; sync files=61, longest=2.808 s, average=0.051 s; distance=732868 kB, estimate=793055 kB; lsn=81/DE49DE48, redo lsn=81/BF6AB1E8
postgres_container  | 2024-11-04 23:20:01.743 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:20:01.743 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:20:01.743 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:20:07.116 UTC [1769] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:20:07.116 UTC [1769] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:20:22.775 UTC [26] LOG:  checkpoint complete: wrote 249 buffers (1.5%); 0 WAL file(s) added, 5 removed, 28 recycled; write=15.209 s, sync=4.400 s, total=21.033 s; sync files=232, longest=1.520 s, average=0.019 s; distance=536479 kB, estimate=767398 kB; lsn=82/3400490, redo lsn=81/E0292EE0
postgres_container  | 2024-11-04 23:20:22.776 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 23:20:22.776 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:20:22.776 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:20:35.089 UTC [26] LOG:  checkpoint complete: wrote 8333 buffers (50.9%); 0 WAL file(s) added, 13 removed, 30 recycled; write=6.404 s, sync=3.702 s, total=12.314 s; sync files=82, longest=3.007 s, average=0.046 s; distance=712487 kB, estimate=761907 kB; lsn=82/2C1AFB18, redo lsn=82/BA5CE50
postgres_container  | 2024-11-04 23:20:35.090 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:20:35.090 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:20:35.090 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:20:52.364 UTC [1791] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:20:52.364 UTC [1791] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:21:01.458 UTC [26] LOG:  checkpoint complete: wrote 5382 buffers (32.8%); 0 WAL file(s) added, 15 removed, 28 recycled; write=23.104 s, sync=1.984 s, total=26.369 s; sync files=255, longest=0.399 s, average=0.008 s; distance=700872 kB, estimate=755803 kB; lsn=82/59ECC178, redo lsn=82/366CEFA8
postgres_container  | 2024-11-04 23:21:01.459 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:21:01.459 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:21:01.459 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:21:13.515 UTC [26] LOG:  checkpoint complete: wrote 6183 buffers (37.7%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.458 s, sync=3.440 s, total=12.057 s; sync files=74, longest=1.740 s, average=0.047 s; distance=685244 kB, estimate=748747 kB; lsn=82/7F1E5B30, redo lsn=82/603FE098
postgres_container  | 2024-11-04 23:21:13.516 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:21:13.516 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:21:13.517 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:21:25.474 UTC [26] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.639 s, sync=1.953 s, total=11.958 s; sync files=38, longest=1.711 s, average=0.052 s; distance=698248 kB, estimate=743697 kB; lsn=82/A9A6DE50, redo lsn=82/8ADE0100
postgres_container  | 2024-11-04 23:21:25.475 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:21:25.475 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:21:25.475 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:21:36.429 UTC [1813] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:21:36.429 UTC [1813] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:21:41.673 UTC [1808] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:21:41.673 UTC [1808] CONTEXT:  while scanning block 7656 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:21:41.673 UTC [1808] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 23:21:41.673 UTC [1808] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:21:41.674 UTC [1808] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:21:51.765 UTC [26] LOG:  checkpoint complete: wrote 2345 buffers (14.3%); 0 WAL file(s) added, 22 removed, 20 recycled; write=20.252 s, sync=4.300 s, total=26.290 s; sync files=234, longest=1.225 s, average=0.019 s; distance=685738 kB, estimate=737901 kB; lsn=82/DF3CCF48, redo lsn=82/B4B8AC58
postgres_container  | 2024-11-04 23:21:51.765 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:21:51.765 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:21:51.766 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:22:05.866 UTC [26] LOG:  checkpoint complete: wrote 8429 buffers (51.4%); 0 WAL file(s) added, 20 removed, 32 recycled; write=8.412 s, sync=3.138 s, total=14.101 s; sync files=77, longest=2.793 s, average=0.041 s; distance=847397 kB, estimate=847397 kB; lsn=83/7400900, redo lsn=82/E8714070
postgres_container  | 2024-11-04 23:22:05.867 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:22:05.867 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:22:05.867 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:22:17.839 UTC [26] LOG:  checkpoint complete: wrote 3132 buffers (19.1%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.490 s, sync=1.965 s, total=11.972 s; sync files=38, longest=1.805 s, average=0.052 s; distance=721410 kB, estimate=834798 kB; lsn=83/327A86B8, redo lsn=83/14794938
postgres_container  | 2024-11-04 23:22:17.839 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:22:17.839 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:22:17.840 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:22:23.208 UTC [1834] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:22:23.208 UTC [1834] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:22:36.628 UTC [26] LOG:  checkpoint complete: wrote 149 buffers (0.9%); 0 WAL file(s) added, 2 removed, 31 recycled; write=14.480 s, sync=2.513 s, total=18.789 s; sync files=225, longest=1.280 s, average=0.012 s; distance=537644 kB, estimate=805082 kB; lsn=83/55400730, redo lsn=83/3549FCD8
postgres_container  | 2024-11-04 23:22:36.628 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-04 23:22:36.628 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:22:36.629 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:22:48.884 UTC [26] LOG:  checkpoint complete: wrote 8509 buffers (51.9%); 0 WAL file(s) added, 6 removed, 33 recycled; write=7.194 s, sync=2.457 s, total=12.256 s; sync files=99, longest=2.301 s, average=0.025 s; distance=642976 kB, estimate=788872 kB; lsn=83/7ADC6BB8, redo lsn=83/5C888028
postgres_container  | 2024-11-04 23:22:48.884 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:22:48.884 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:22:48.884 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:23:01.711 UTC [26] LOG:  checkpoint complete: wrote 4037 buffers (24.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.585 s, sync=3.467 s, total=12.827 s; sync files=45, longest=3.385 s, average=0.078 s; distance=709745 kB, estimate=780959 kB; lsn=83/A6440828, redo lsn=83/87DA4628
postgres_container  | 2024-11-04 23:23:10.152 UTC [1856] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:23:10.152 UTC [1856] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:23:11.910 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:23:11.910 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:23:11.910 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:23:21.997 UTC [26] LOG:  checkpoint complete: wrote 2994 buffers (18.3%); 0 WAL file(s) added, 1 removed, 32 recycled; write=5.773 s, sync=2.752 s, total=10.088 s; sync files=253, longest=1.539 s, average=0.011 s; distance=530810 kB, estimate=755944 kB; lsn=83/C78C6068, redo lsn=83/A8403000
postgres_container  | 2024-11-04 23:23:21.998 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:23:21.998 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:23:21.998 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:23:33.960 UTC [26] LOG:  checkpoint complete: wrote 5378 buffers (32.8%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.038 s, sync=2.751 s, total=11.962 s; sync files=36, longest=2.669 s, average=0.077 s; distance=667700 kB, estimate=747120 kB; lsn=83/EF631C98, redo lsn=83/D10102F8
postgres_container  | 2024-11-04 23:23:33.961 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:23:33.961 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:23:33.962 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:23:49.923 UTC [1878] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:23:49.923 UTC [1878] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:23:58.306 UTC [26] LOG:  checkpoint complete: wrote 3875 buffers (23.7%); 0 WAL file(s) added, 13 removed, 30 recycled; write=21.811 s, sync=1.177 s, total=24.345 s; sync files=227, longest=0.057 s, average=0.006 s; distance=708405 kB, estimate=743248 kB; lsn=84/1D3FE480, redo lsn=83/FC3DD7E0
postgres_container  | 2024-11-04 23:23:58.307 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:23:58.307 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:23:58.307 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:24:08.724 UTC [26] LOG:  checkpoint complete: wrote 3815 buffers (23.3%); 0 WAL file(s) added, 7 removed, 31 recycled; write=5.829 s, sync=3.009 s, total=10.417 s; sync files=97, longest=1.417 s, average=0.032 s; distance=630524 kB, estimate=731976 kB; lsn=84/4240F1D8, redo lsn=84/22B9CA78
postgres_container  | 2024-11-04 23:24:08.725 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:24:08.725 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:24:08.725 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:24:20.711 UTC [26] LOG:  checkpoint complete: wrote 4584 buffers (28.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.016 s, sync=2.934 s, total=11.987 s; sync files=42, longest=2.022 s, average=0.070 s; distance=687502 kB, estimate=727529 kB; lsn=84/6C40A548, redo lsn=84/4CB00490
postgres_container  | 2024-11-04 23:24:20.712 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:24:20.712 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:24:20.712 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:24:35.385 UTC [1900] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:24:35.385 UTC [1900] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:24:38.510 UTC [1895] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:24:38.510 UTC [1895] CONTEXT:  while scanning block 6666 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:24:38.510 UTC [1895] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-04 23:24:38.510 UTC [1895] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-04 23:24:39.511 UTC [1895] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:24:39.511 UTC [1895] CONTEXT:  while scanning block 4030 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] CONTEXT:  while scanning block 3787 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:24:40.511 UTC [1895] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:24:40.516 UTC [1895] LOG:  skipping vacuum of "pg_toast_364494" --- lock not available
postgres_container  | 2024-11-04 23:24:49.090 UTC [26] LOG:  checkpoint complete: wrote 2131 buffers (13.0%); 0 WAL file(s) added, 16 removed, 26 recycled; write=22.825 s, sync=3.289 s, total=28.378 s; sync files=229, longest=1.444 s, average=0.015 s; distance=681060 kB, estimate=722882 kB; lsn=84/9B400C38, redo lsn=84/764195C0
postgres_container  | 2024-11-04 23:24:49.090 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-04 23:24:49.090 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:24:49.090 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:25:02.233 UTC [26] LOG:  checkpoint complete: wrote 8452 buffers (51.6%); 0 WAL file(s) added, 17 removed, 32 recycled; write=7.608 s, sync=3.188 s, total=13.143 s; sync files=77, longest=1.350 s, average=0.042 s; distance=814071 kB, estimate=814071 kB; lsn=84/C6400128, redo lsn=84/A7F17410
postgres_container  | 2024-11-04 23:25:02.234 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:25:02.234 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:25:02.234 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:25:13.743 UTC [26] LOG:  checkpoint complete: wrote 1129 buffers (6.9%); 0 WAL file(s) added, 10 removed, 33 recycled; write=6.907 s, sync=2.627 s, total=11.510 s; sync files=17, longest=2.546 s, average=0.155 s; distance=689788 kB, estimate=801643 kB; lsn=84/F058CD68, redo lsn=84/D20B67C8
postgres_container  | 2024-11-04 23:25:13.743 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:25:13.743 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:25:13.744 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:25:23.608 UTC [1921] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:25:23.608 UTC [1921] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:25:36.073 UTC [26] LOG:  checkpoint complete: wrote 331 buffers (2.0%); 0 WAL file(s) added, 10 removed, 30 recycled; write=18.037 s, sync=2.394 s, total=22.330 s; sync files=222, longest=1.206 s, average=0.011 s; distance=668972 kB, estimate=788376 kB; lsn=85/1B404728, redo lsn=84/FAE01B20
postgres_container  | 2024-11-04 23:25:36.074 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:25:36.074 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:25:36.074 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:25:49.453 UTC [26] LOG:  checkpoint complete: wrote 8517 buffers (52.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.322 s, sync=3.410 s, total=13.380 s; sync files=98, longest=2.982 s, average=0.035 s; distance=657414 kB, estimate=775280 kB; lsn=85/4205FA30, redo lsn=85/23003428
postgres_container  | 2024-11-04 23:25:49.454 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:25:49.454 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:25:49.454 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:26:01.780 UTC [26] LOG:  checkpoint complete: wrote 3185 buffers (19.4%); 0 WAL file(s) added, 11 removed, 34 recycled; write=6.906 s, sync=4.470 s, total=12.326 s; sync files=57, longest=1.781 s, average=0.079 s; distance=741421 kB, estimate=771894 kB; lsn=85/6DF339A8, redo lsn=85/5040E8C0
postgres_container  | 2024-11-04 23:26:07.367 UTC [1943] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:26:07.367 UTC [1943] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:26:12.013 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:26:12.013 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:26:12.013 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:26:22.335 UTC [26] LOG:  checkpoint complete: wrote 3782 buffers (23.1%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.723 s, sync=2.970 s, total=10.323 s; sync files=238, longest=1.388 s, average=0.013 s; distance=538656 kB, estimate=748570 kB; lsn=85/91400668, redo lsn=85/71216920
postgres_container  | 2024-11-04 23:26:22.336 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:26:22.336 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:26:22.375 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:26:34.083 UTC [26] LOG:  checkpoint complete: wrote 4584 buffers (28.0%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.624 s, sync=2.793 s, total=11.748 s; sync files=41, longest=2.422 s, average=0.069 s; distance=682989 kB, estimate=742012 kB; lsn=85/BA3DB548, redo lsn=85/9AD120A0
postgres_container  | 2024-11-04 23:26:34.084 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:26:34.084 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:26:34.084 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:26:52.072 UTC [1965] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:26:52.072 UTC [1965] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:26:59.504 UTC [26] LOG:  checkpoint complete: wrote 2390 buffers (14.6%); 0 WAL file(s) added, 15 removed, 28 recycled; write=22.157 s, sync=1.878 s, total=25.420 s; sync files=250, longest=0.394 s, average=0.008 s; distance=701700 kB, estimate=737981 kB; lsn=85/E8DC3948, redo lsn=85/C5A532A0
postgres_container  | 2024-11-04 23:26:59.504 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-04 23:26:59.504 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:26:59.556 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:27:12.352 UTC [26] LOG:  checkpoint complete: wrote 6201 buffers (37.8%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.501 s, sync=2.486 s, total=12.848 s; sync files=74, longest=1.508 s, average=0.034 s; distance=714411 kB, estimate=735624 kB; lsn=86/105EBAA8, redo lsn=85/F13FE238
postgres_container  | 2024-11-04 23:27:12.352 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:27:12.352 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:27:12.352 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:27:23.686 UTC [26] LOG:  checkpoint complete: wrote 2205 buffers (13.5%); 0 WAL file(s) added, 12 removed, 31 recycled; write=6.542 s, sync=2.364 s, total=11.334 s; sync files=38, longest=1.122 s, average=0.063 s; distance=710777 kB, estimate=733139 kB; lsn=86/3C400710, redo lsn=86/1CA1C980
postgres_container  | 2024-11-04 23:27:23.686 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:27:23.686 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:27:23.686 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:27:34.743 UTC [1987] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:27:34.743 UTC [1987] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:27:37.884 UTC [1982] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:27:37.884 UTC [1982] CONTEXT:  while scanning block 4839 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:27:38.884 UTC [1982] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:27:38.884 UTC [1982] CONTEXT:  while scanning block 4021 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-04 23:27:38.885 UTC [1982] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:27:38.885 UTC [1982] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:27:38.885 UTC [1982] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:27:38.885 UTC [1982] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:27:38.885 UTC [1982] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:27:50.382 UTC [26] LOG:  checkpoint complete: wrote 1682 buffers (10.3%); 0 WAL file(s) added, 17 removed, 24 recycled; write=20.163 s, sync=4.524 s, total=26.696 s; sync files=231, longest=1.242 s, average=0.020 s; distance=664263 kB, estimate=726251 kB; lsn=86/6C400180, redo lsn=86/452CE668
postgres_container  | 2024-11-04 23:27:50.383 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 23:27:50.383 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:27:50.383 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:28:03.345 UTC [26] LOG:  checkpoint complete: wrote 8433 buffers (51.5%); 0 WAL file(s) added, 16 removed, 32 recycled; write=7.947 s, sync=2.246 s, total=12.963 s; sync files=77, longest=2.209 s, average=0.030 s; distance=793978 kB, estimate=793978 kB; lsn=86/943F88A8, redo lsn=86/75A2D130
postgres_container  | 2024-11-04 23:28:03.345 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:28:03.345 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:28:03.346 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:28:15.122 UTC [26] LOG:  checkpoint complete: wrote 3135 buffers (19.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.664 s, sync=2.591 s, total=11.777 s; sync files=38, longest=2.429 s, average=0.069 s; distance=717939 kB, estimate=786374 kB; lsn=86/C0400310, redo lsn=86/A1749F88
postgres_container  | 2024-11-04 23:28:15.123 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:28:15.123 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:28:15.123 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:28:23.864 UTC [2008] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:28:23.864 UTC [2008] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:28:36.368 UTC [26] LOG:  checkpoint complete: wrote 160 buffers (1.0%); 0 WAL file(s) added, 3 removed, 31 recycled; write=16.544 s, sync=2.874 s, total=21.246 s; sync files=225, longest=1.575 s, average=0.013 s; distance=550592 kB, estimate=762796 kB; lsn=86/E3400798, redo lsn=86/C30FA208
postgres_container  | 2024-11-04 23:28:36.369 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 23:28:36.369 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:28:36.374 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:28:48.890 UTC [26] LOG:  checkpoint complete: wrote 8514 buffers (52.0%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.041 s, sync=3.365 s, total=12.521 s; sync files=98, longest=2.988 s, average=0.035 s; distance=652996 kB, estimate=751816 kB; lsn=87/9A80698, redo lsn=86/EAEAB588
postgres_container  | 2024-11-04 23:28:48.891 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:28:48.891 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:28:48.928 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:29:00.257 UTC [26] LOG:  checkpoint complete: wrote 2887 buffers (17.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.185 s, sync=2.711 s, total=11.366 s; sync files=43, longest=2.515 s, average=0.064 s; distance=703522 kB, estimate=746987 kB; lsn=87/34461D58, redo lsn=87/15DB4078
postgres_container  | 2024-11-04 23:29:07.526 UTC [2030] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:29:07.526 UTC [2030] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:29:09.496 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-04 23:29:09.496 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:29:09.496 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:29:19.038 UTC [26] LOG:  checkpoint complete: wrote 3323 buffers (20.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.020 s, sync=3.010 s, total=9.542 s; sync files=253, longest=1.491 s, average=0.012 s; distance=530746 kB, estimate=725363 kB; lsn=87/56411590, redo lsn=87/36402B70
postgres_container  | 2024-11-04 23:29:19.038 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:29:19.038 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:29:19.038 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:29:30.727 UTC [26] LOG:  checkpoint complete: wrote 5082 buffers (31.0%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.641 s, sync=1.964 s, total=11.690 s; sync files=31, longest=1.848 s, average=0.064 s; distance=674603 kB, estimate=720287 kB; lsn=87/7D93C308, redo lsn=87/5F6CDB10
postgres_container  | 2024-11-04 23:29:30.728 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:29:30.728 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:29:30.728 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:29:46.362 UTC [2052] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:29:46.362 UTC [2052] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:29:52.203 UTC [26] LOG:  checkpoint complete: wrote 2407 buffers (14.7%); 0 WAL file(s) added, 8 removed, 34 recycled; write=16.846 s, sync=3.681 s, total=21.475 s; sync files=108, longest=1.658 s, average=0.035 s; distance=689104 kB, estimate=717169 kB; lsn=87/A6A64370, redo lsn=87/897C1E70
postgres_container  | 2024-11-04 23:29:53.418 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:29:53.418 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:29:53.419 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:30:03.041 UTC [26] LOG:  checkpoint complete: wrote 3891 buffers (23.7%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.186 s, sync=2.905 s, total=9.623 s; sync files=217, longest=1.371 s, average=0.014 s; distance=536819 kB, estimate=699134 kB; lsn=87/CA400268, redo lsn=87/AA3FED90
postgres_container  | 2024-11-04 23:30:03.042 UTC [26] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-04 23:30:03.042 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:30:03.087 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:30:14.423 UTC [26] LOG:  checkpoint complete: wrote 4585 buffers (28.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.671 s, sync=2.969 s, total=11.381 s; sync files=42, longest=2.529 s, average=0.071 s; distance=671740 kB, estimate=696394 kB; lsn=87/F2DBFFC8, redo lsn=87/D33FE0F0
postgres_container  | 2024-11-04 23:30:14.424 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:30:14.424 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:30:14.424 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:30:31.160 UTC [2073] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:30:31.160 UTC [2073] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:30:37.437 UTC [26] LOG:  checkpoint complete: wrote 4137 buffers (25.3%); 0 WAL file(s) added, 14 removed, 27 recycled; write=19.386 s, sync=2.068 s, total=23.014 s; sync files=226, longest=0.331 s, average=0.010 s; distance=678500 kB, estimate=694605 kB; lsn=88/203481C8, redo lsn=87/FCA973C0
postgres_container  | 2024-11-04 23:30:37.438 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-04 23:30:37.438 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:30:37.490 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:30:48.973 UTC [26] LOG:  checkpoint complete: wrote 6337 buffers (38.7%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.685 s, sync=1.425 s, total=11.535 s; sync files=92, longest=0.679 s, average=0.016 s; distance=714139 kB, estimate=714139 kB; lsn=88/474002B0, redo lsn=88/283FE0F8
postgres_container  | 2024-11-04 23:30:48.974 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:30:48.974 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:30:48.975 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:30:59.519 UTC [26] LOG:  checkpoint complete: wrote 2204 buffers (13.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.767 s, sync=2.030 s, total=10.545 s; sync files=37, longest=1.207 s, average=0.055 s; distance=696268 kB, estimate=712352 kB; lsn=88/71B077F8, redo lsn=88/52BF1228
postgres_container  | 2024-11-04 23:30:59.520 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-04 23:30:59.520 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:30:59.520 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:31:11.066 UTC [2095] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:31:11.066 UTC [2095] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:31:23.323 UTC [26] LOG:  checkpoint complete: wrote 2130 buffers (13.0%); 0 WAL file(s) added, 19 removed, 21 recycled; write=17.694 s, sync=4.390 s, total=23.803 s; sync files=223, longest=1.018 s, average=0.020 s; distance=657082 kB, estimate=706825 kB; lsn=88/A4181B08, redo lsn=88/7AD9FB60
postgres_container  | 2024-11-04 23:31:23.323 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 23:31:23.323 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:31:23.371 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-04 23:49:32.830 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-04 23:49:32.830 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-04 23:49:32.831 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-04 23:49:32.856 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-04 23:49:32.892 UTC [30] LOG:  database system was interrupted; last known up at 2024-11-04 23:31:21 UTC
postgres_container  | 2024-11-04 23:49:33.999 UTC [30] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-04 23:49:34.277 UTC [30] LOG:  redo starts at 88/7AD9FB60
postgres_container  | 2024-11-04 23:49:44.284 UTC [30] LOG:  redo in progress, elapsed time: 10.00 s, current LSN: 88/80FFB4C8
postgres_container  | 2024-11-04 23:49:47.271 UTC [31] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:49:47.271 UTC [31] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:49:54.303 UTC [30] LOG:  redo in progress, elapsed time: 20.02 s, current LSN: 88/871FB4E8
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-04 23:50:15.723 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-04 23:50:15.724 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-04 23:50:15.724 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-04 23:50:20.307 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-04 23:50:20.378 UTC [29] LOG:  database system was interrupted while in recovery at 2024-11-04 23:49:33 UTC
postgres_container  | 2024-11-04 23:50:20.378 UTC [29] HINT:  This probably means that some data is corrupted and you will have to use the last backup for recovery.
postgres_container  | 2024-11-04 23:50:20.382 UTC [30] FATAL:  the database system is starting up
postgres_container  | 2024-11-04 23:50:22.048 UTC [31] FATAL:  the database system is starting up
postgres_container  | 2024-11-04 23:50:26.768 UTC [32] FATAL:  the database system is starting up
postgres_container  | 2024-11-04 23:50:30.621 UTC [29] LOG:  syncing data directory (fsync), elapsed time: 10.23 s, current path: ./base/5/369805
postgres_container  | 2024-11-04 23:50:32.660 UTC [29] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-04 23:50:32.686 UTC [29] LOG:  redo starts at 88/7AD9FB60
postgres_container  | 2024-11-04 23:50:33.816 UTC [33] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:50:33.816 UTC [33] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:50:37.703 UTC [34] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:50:37.703 UTC [34] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:50:42.730 UTC [29] LOG:  redo in progress, elapsed time: 10.04 s, current LSN: 88/89F77E00
postgres_container  | 2024-11-04 23:50:44.442 UTC [35] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:50:44.442 UTC [35] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:50:52.702 UTC [29] LOG:  redo in progress, elapsed time: 20.01 s, current LSN: 88/8C6F9B10
postgres_container  | 2024-11-04 23:50:56.475 UTC [36] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:50:56.475 UTC [36] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:51:02.771 UTC [29] LOG:  redo in progress, elapsed time: 30.08 s, current LSN: 88/906F9B68
postgres_container  | 2024-11-04 23:51:09.968 UTC [37] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:51:09.968 UTC [37] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:51:12.883 UTC [29] LOG:  redo in progress, elapsed time: 40.19 s, current LSN: 88/92F59B18
postgres_container  | 2024-11-04 23:51:22.703 UTC [29] LOG:  redo in progress, elapsed time: 50.01 s, current LSN: 88/955F9B38
postgres_container  | 2024-11-04 23:51:29.248 UTC [38] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:51:29.248 UTC [38] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:51:33.046 UTC [29] LOG:  redo in progress, elapsed time: 60.35 s, current LSN: 88/9827A378
postgres_container  | 2024-11-04 23:51:42.686 UTC [29] LOG:  redo in progress, elapsed time: 70.00 s, current LSN: 88/9C6F8230
postgres_container  | 2024-11-04 23:51:52.744 UTC [29] LOG:  redo in progress, elapsed time: 80.05 s, current LSN: 88/9F5F9650
postgres_container  | 2024-11-04 23:52:02.781 UTC [29] LOG:  redo in progress, elapsed time: 90.09 s, current LSN: 88/A2FFD5D0
postgres_container  | 2024-11-04 23:52:03.422 UTC [39] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:52:03.422 UTC [39] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:52:12.759 UTC [29] LOG:  redo in progress, elapsed time: 100.07 s, current LSN: 88/A5A1B2A8
postgres_container  | 2024-11-04 23:52:22.688 UTC [29] LOG:  redo in progress, elapsed time: 110.00 s, current LSN: 88/A9D7B2F0
postgres_container  | 2024-11-04 23:52:32.696 UTC [29] LOG:  redo in progress, elapsed time: 120.00 s, current LSN: 88/AE71B2B8
postgres_container  | 2024-11-04 23:52:42.687 UTC [29] LOG:  redo in progress, elapsed time: 130.00 s, current LSN: 88/B4003368
postgres_container  | 2024-11-04 23:52:52.746 UTC [29] LOG:  redo in progress, elapsed time: 140.05 s, current LSN: 88/BD3DB298
postgres_container  | 2024-11-04 23:52:57.480 UTC [29] LOG:  invalid magic number 0000 in WAL segment 0000000100000088000000C0, LSN 88/C0000000, offset 0
postgres_container  | 2024-11-04 23:52:57.489 UTC [29] LOG:  redo done at 88/BFFFFF80 system usage: CPU: user: 7.08 s, system: 2.14 s, elapsed: 144.80 s
postgres_container  | 2024-11-04 23:52:57.579 UTC [27] LOG:  checkpoint starting: end-of-recovery immediate wait
postgres_container  | 2024-11-04 23:52:59.075 UTC [40] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-04 23:52:59.075 UTC [40] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-04 23:53:03.555 UTC [27] LOG:  checkpoint complete: wrote 16287 buffers (99.4%); 0 WAL file(s) added, 7 removed, 63 recycled; write=0.224 s, sync=3.157 s, total=5.990 s; sync files=221, longest=3.077 s, average=0.015 s; distance=1132929 kB, estimate=1132929 kB; lsn=88/C0000058, redo lsn=88/C0000058
postgres_container  | 2024-11-04 23:53:03.578 UTC [1] LOG:  database system is ready to accept connections
postgres_container  | 2024-11-04 23:53:30.828 UTC [53] ERROR:  relation "mimiciv_hosp.admissions" does not exist at character 57
postgres_container  | 2024-11-04 23:53:30.828 UTC [53] STATEMENT:  CREATE VIEW stage_omopcdm.admissions AS 
postgres_container  | 	SELECT * FROM  mimiciv_hosp.admissions;
postgres_container  | 2024-11-04 23:54:12.318 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:54:33.726 UTC [152] LOG:  skipping vacuum of "d_icd_diagnoses" --- lock not available
postgres_container  | 2024-11-04 23:54:35.644 UTC [152] LOG:  skipping analyze of "d_icd_procedures" --- lock not available
postgres_container  | 2024-11-04 23:54:51.422 UTC [27] LOG:  checkpoint complete: wrote 7486 buffers (45.7%); 0 WAL file(s) added, 6 removed, 27 recycled; write=31.583 s, sync=4.784 s, total=39.492 s; sync files=392, longest=1.992 s, average=0.013 s; distance=542656 kB, estimate=1073901 kB; lsn=89/5CAD588, redo lsn=88/E11F0060
postgres_container  | 2024-11-04 23:54:51.423 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:55:04.966 UTC [27] LOG:  checkpoint complete: wrote 4987 buffers (30.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=9.816 s, sync=1.412 s, total=13.544 s; sync files=139, longest=1.147 s, average=0.011 s; distance=690239 kB, estimate=1035535 kB; lsn=89/2A0B59F0, redo lsn=89/B400028
postgres_container  | 2024-11-04 23:55:04.967 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:55:04.967 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:55:04.967 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:55:16.623 UTC [184] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:55:16.623 UTC [184] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:55:36.026 UTC [27] LOG:  checkpoint complete: wrote 755 buffers (4.6%); 0 WAL file(s) added, 7 removed, 30 recycled; write=25.263 s, sync=3.527 s, total=31.060 s; sync files=275, longest=1.791 s, average=0.013 s; distance=610623 kB, estimate=993044 kB; lsn=89/51408150, redo lsn=89/3084FF20
postgres_container  | 2024-11-04 23:55:36.027 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:55:40.598 UTC [206] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:55:40.598 UTC [206] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:56:00.607 UTC [27] LOG:  checkpoint complete: wrote 1720 buffers (10.5%); 0 WAL file(s) added, 12 removed, 29 recycled; write=18.265 s, sync=3.800 s, total=24.581 s; sync files=299, longest=2.845 s, average=0.013 s; distance=679115 kB, estimate=961651 kB; lsn=89/7B3FFD30, redo lsn=89/59F82D70
postgres_container  | 2024-11-04 23:56:00.607 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-04 23:56:00.607 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:56:00.608 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:56:17.990 UTC [27] LOG:  checkpoint complete: wrote 6010 buffers (36.7%); 0 WAL file(s) added, 14 removed, 32 recycled; write=13.235 s, sync=1.922 s, total=17.382 s; sync files=71, longest=1.401 s, average=0.028 s; distance=740450 kB, estimate=939531 kB; lsn=89/A64020A0, redo lsn=89/8729B920
postgres_container  | 2024-11-04 23:56:17.990 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 23:56:17.990 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:56:17.991 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:56:33.851 UTC [27] LOG:  checkpoint complete: wrote 2644 buffers (16.1%); 0 WAL file(s) added, 10 removed, 30 recycled; write=10.311 s, sync=3.307 s, total=15.861 s; sync files=40, longest=1.120 s, average=0.083 s; distance=664862 kB, estimate=912064 kB; lsn=89/D0401528, redo lsn=89/AFBE3448
postgres_container  | 2024-11-04 23:56:33.852 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-04 23:56:33.852 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:56:33.852 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:56:52.072 UTC [228] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:56:52.072 UTC [228] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:57:07.777 UTC [27] LOG:  checkpoint complete: wrote 6053 buffers (36.9%); 0 WAL file(s) added, 21 removed, 21 recycled; write=26.775 s, sync=5.143 s, total=33.925 s; sync files=251, longest=1.428 s, average=0.021 s; distance=692098 kB, estimate=890068 kB; lsn=8A/37E30E8, redo lsn=89/D9FC3D20
postgres_container  | 2024-11-04 23:57:07.777 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:57:24.398 UTC [27] LOG:  checkpoint complete: wrote 6983 buffers (42.6%); 0 WAL file(s) added, 22 removed, 32 recycled; write=12.394 s, sync=1.549 s, total=16.621 s; sync files=66, longest=1.101 s, average=0.024 s; distance=870449 kB, estimate=888106 kB; lsn=8A/2E3F93D0, redo lsn=8A/F1D0170
postgres_container  | 2024-11-04 23:57:24.398 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-04 23:57:24.398 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:57:24.432 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:57:38.728 UTC [27] LOG:  checkpoint complete: wrote 4398 buffers (26.8%); 0 WAL file(s) added, 14 removed, 32 recycled; write=8.940 s, sync=2.925 s, total=14.330 s; sync files=61, longest=1.767 s, average=0.048 s; distance=755895 kB, estimate=874885 kB; lsn=8A/5CBFBB18, redo lsn=8A/3D3FE080
postgres_container  | 2024-11-04 23:57:38.729 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-04 23:57:38.729 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:57:38.729 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:57:50.668 UTC [250] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:57:50.668 UTC [250] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:57:53.388 UTC [240] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:57:53.388 UTC [240] CONTEXT:  while scanning block 13550 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:58:06.263 UTC [27] LOG:  checkpoint complete: wrote 394 buffers (2.4%); 0 WAL file(s) added, 2 removed, 30 recycled; write=20.594 s, sync=4.168 s, total=27.535 s; sync files=262, longest=2.020 s, average=0.016 s; distance=530280 kB, estimate=840424 kB; lsn=8A/7EFE1E00, redo lsn=8A/5D9D81A8
postgres_container  | 2024-11-04 23:58:06.264 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-04 23:58:06.264 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:58:06.264 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:58:19.843 UTC [27] LOG:  checkpoint complete: wrote 7442 buffers (45.4%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.562 s, sync=3.872 s, total=13.579 s; sync files=62, longest=3.783 s, average=0.063 s; distance=701189 kB, estimate=826501 kB; lsn=8A/A69356C8, redo lsn=8A/88699940
postgres_container  | 2024-11-04 23:58:19.844 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-04 23:58:19.844 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:58:19.866 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:58:38.254 UTC [272] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:58:38.254 UTC [272] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] CONTEXT:  while scanning block 11813 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-04 23:58:42.889 UTC [267] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-04 23:58:42.900 UTC [267] LOG:  skipping vacuum of "pg_toast_373479" --- lock not available
postgres_container  | 2024-11-04 23:58:45.967 UTC [27] LOG:  checkpoint complete: wrote 4155 buffers (25.4%); 0 WAL file(s) added, 12 removed, 30 recycled; write=23.518 s, sync=1.025 s, total=26.124 s; sync files=213, longest=0.062 s, average=0.005 s; distance=696945 kB, estimate=813545 kB; lsn=8A/D3E2A0F0, redo lsn=8A/B2F36080
postgres_container  | 2024-11-04 23:58:45.968 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-04 23:58:45.968 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:58:45.968 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:58:57.734 UTC [27] LOG:  checkpoint complete: wrote 5595 buffers (34.1%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.927 s, sync=2.286 s, total=11.766 s; sync files=100, longest=0.980 s, average=0.023 s; distance=648693 kB, estimate=797060 kB; lsn=8A/FA22C108, redo lsn=8A/DA8B34B0
postgres_container  | 2024-11-04 23:58:57.734 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:58:57.734 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:58:57.734 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:59:09.072 UTC [27] LOG:  checkpoint complete: wrote 564 buffers (3.4%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.852 s, sync=2.280 s, total=11.338 s; sync files=39, longest=1.511 s, average=0.059 s; distance=724325 kB, estimate=789786 kB; lsn=8B/25ECC238, redo lsn=8B/6C0C9F0
postgres_container  | 2024-11-04 23:59:09.073 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-04 23:59:09.073 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:59:09.073 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:59:24.126 UTC [293] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-04 23:59:24.126 UTC [293] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-04 23:59:36.125 UTC [27] LOG:  checkpoint complete: wrote 3373 buffers (20.6%); 0 WAL file(s) added, 20 removed, 23 recycled; write=20.478 s, sync=4.341 s, total=27.052 s; sync files=224, longest=0.972 s, average=0.020 s; distance=696144 kB, estimate=780422 kB; lsn=8B/590F2118, redo lsn=8B/313E0DC0
postgres_container  | 2024-11-04 23:59:36.125 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-04 23:59:36.125 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:59:36.126 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-04 23:59:51.304 UTC [27] LOG:  checkpoint complete: wrote 6447 buffers (39.3%); 0 WAL file(s) added, 19 removed, 32 recycled; write=9.419 s, sync=2.927 s, total=15.178 s; sync files=100, longest=2.354 s, average=0.030 s; distance=841525 kB, estimate=841525 kB; lsn=8B/836741C8, redo lsn=8B/649AE2A0
postgres_container  | 2024-11-04 23:59:51.304 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-04 23:59:51.304 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-04 23:59:51.304 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:00:04.309 UTC [27] LOG:  checkpoint complete: wrote 6154 buffers (37.6%); 0 WAL file(s) added, 13 removed, 32 recycled; write=10.081 s, sync=0.663 s, total=13.006 s; sync files=50, longest=0.527 s, average=0.014 s; distance=742012 kB, estimate=831573 kB; lsn=8B/B06D3840, redo lsn=8B/91E4D5A0
postgres_container  | 2024-11-05 00:00:04.310 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:00:04.310 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:00:04.310 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:00:13.705 UTC [315] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:00:13.705 UTC [315] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:00:27.650 UTC [27] LOG:  checkpoint complete: wrote 117 buffers (0.7%); 0 WAL file(s) added, 3 removed, 30 recycled; write=17.678 s, sync=2.614 s, total=23.340 s; sync files=229, longest=1.253 s, average=0.012 s; distance=541144 kB, estimate=802531 kB; lsn=8B/D3087D40, redo lsn=8B/B2EC3710
postgres_container  | 2024-11-05 00:00:27.650 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:00:27.650 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:00:27.650 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:00:42.802 UTC [27] LOG:  checkpoint complete: wrote 8333 buffers (50.9%); 0 WAL file(s) added, 20 removed, 26 recycled; write=7.553 s, sync=4.844 s, total=15.152 s; sync files=103, longest=2.318 s, average=0.048 s; distance=749344 kB, estimate=797212 kB; lsn=8C/5404098, redo lsn=8B/E0A8B7B8
postgres_container  | 2024-11-05 00:00:42.803 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:00:42.803 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:00:42.838 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:00:56.155 UTC [337] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:00:56.155 UTC [337] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:01:11.756 UTC [27] LOG:  checkpoint complete: wrote 4961 buffers (30.3%); 0 WAL file(s) added, 28 removed, 21 recycled; write=22.883 s, sync=3.758 s, total=28.954 s; sync files=252, longest=0.973 s, average=0.015 s; distance=807323 kB, estimate=807323 kB; lsn=8C/3B3FE1A8, redo lsn=8C/11EF25F0
postgres_container  | 2024-11-05 00:01:11.756 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 00:01:11.756 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:01:11.756 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:01:26.107 UTC [27] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 22 removed, 33 recycled; write=10.865 s, sync=0.735 s, total=14.351 s; sync files=73, longest=0.691 s, average=0.011 s; distance=893519 kB, estimate=893519 kB; lsn=8C/66402058, redo lsn=8C/48786438
postgres_container  | 2024-11-05 00:01:26.107 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:01:26.107 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:01:26.107 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:01:39.261 UTC [27] LOG:  checkpoint complete: wrote 3047 buffers (18.6%); 0 WAL file(s) added, 15 removed, 31 recycled; write=7.982 s, sync=3.227 s, total=13.154 s; sync files=56, longest=2.676 s, average=0.058 s; distance=757968 kB, estimate=879964 kB; lsn=8C/96403628, redo lsn=8C/76BBA760
postgres_container  | 2024-11-05 00:01:46.305 UTC [359] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:01:46.305 UTC [359] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:01:51.336 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 00:01:51.336 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:01:51.337 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:02:06.142 UTC [27] LOG:  checkpoint complete: wrote 3004 buffers (18.3%); 0 WAL file(s) added, 7 removed, 26 recycled; write=5.365 s, sync=6.191 s, total=14.806 s; sync files=260, longest=2.519 s, average=0.024 s; distance=528726 kB, estimate=844840 kB; lsn=8C/BC4007D8, redo lsn=8C/97010020
postgres_container  | 2024-11-05 00:02:06.143 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:02:06.143 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:02:06.143 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:02:19.143 UTC [27] LOG:  checkpoint complete: wrote 5448 buffers (33.3%); 0 WAL file(s) added, 19 removed, 31 recycled; write=6.898 s, sync=2.632 s, total=13.001 s; sync files=50, longest=1.476 s, average=0.053 s; distance=822371 kB, estimate=842593 kB; lsn=8C/E9402098, redo lsn=8C/C9328D18
postgres_container  | 2024-11-05 00:02:19.144 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:02:19.144 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:02:19.144 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:02:33.811 UTC [381] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:02:33.811 UTC [381] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:02:36.768 UTC [376] LOG:  skipping analyze of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 00:02:37.769 UTC [376] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:02:37.769 UTC [376] CONTEXT:  while scanning block 3779 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 00:02:48.524 UTC [27] LOG:  checkpoint complete: wrote 2332 buffers (14.2%); 0 WAL file(s) added, 22 removed, 25 recycled; write=23.236 s, sync=3.486 s, total=29.381 s; sync files=229, longest=0.932 s, average=0.016 s; distance=778612 kB, estimate=836195 kB; lsn=8D/1E400118, redo lsn=8C/F8B85D70
postgres_container  | 2024-11-05 00:02:48.524 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 00:02:48.524 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:02:48.524 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:03:03.510 UTC [27] LOG:  checkpoint complete: wrote 8438 buffers (51.5%); 0 WAL file(s) added, 20 removed, 32 recycled; write=9.390 s, sync=2.752 s, total=14.986 s; sync files=74, longest=2.668 s, average=0.038 s; distance=854624 kB, estimate=854624 kB; lsn=8D/4B884BE8, redo lsn=8D/2CE1E048
postgres_container  | 2024-11-05 00:03:03.510 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:03:03.510 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:03:03.510 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:03:16.485 UTC [27] LOG:  checkpoint complete: wrote 2927 buffers (17.9%); 0 WAL file(s) added, 14 removed, 33 recycled; write=10.640 s, sync=0.110 s, total=12.975 s; sync files=36, longest=0.082 s, average=0.004 s; distance=758443 kB, estimate=845006 kB; lsn=8D/794006E8, redo lsn=8D/5B2C8FC8
postgres_container  | 2024-11-05 00:03:25.223 UTC [402] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:03:25.223 UTC [402] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:03:27.662 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 00:03:27.662 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:03:27.663 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:03:39.897 UTC [27] LOG:  checkpoint complete: wrote 3730 buffers (22.8%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.682 s, sync=4.122 s, total=12.235 s; sync files=253, longest=1.620 s, average=0.017 s; distance=538716 kB, estimate=814377 kB; lsn=8D/9E400260, redo lsn=8D/7C0E00A0
postgres_container  | 2024-11-05 00:03:39.897 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:03:39.897 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:03:39.897 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:03:54.571 UTC [27] LOG:  checkpoint complete: wrote 8414 buffers (51.4%); 0 WAL file(s) added, 16 removed, 30 recycled; write=10.741 s, sync=1.210 s, total=14.674 s; sync files=102, longest=0.589 s, average=0.012 s; distance=764078 kB, estimate=809347 kB; lsn=8D/CB230A98, redo lsn=8D/AAB0B9D8
postgres_container  | 2024-11-05 00:03:54.572 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:03:54.572 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:03:54.572 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:04:10.787 UTC [424] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:04:10.787 UTC [424] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:04:20.934 UTC [27] LOG:  checkpoint complete: wrote 4189 buffers (25.6%); 0 WAL file(s) added, 19 removed, 26 recycled; write=20.810 s, sync=3.144 s, total=26.362 s; sync files=235, longest=1.010 s, average=0.014 s; distance=728250 kB, estimate=801237 kB; lsn=8D/FCD49B20, redo lsn=8D/D723A2C8
postgres_container  | 2024-11-05 00:04:20.935 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:04:20.935 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:04:20.935 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:04:35.132 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 19 removed, 32 recycled; write=10.506 s, sync=1.170 s, total=14.198 s; sync files=69, longest=0.848 s, average=0.017 s; distance=837439 kB, estimate=837439 kB; lsn=8E/29403590, redo lsn=8E/A409F50
postgres_container  | 2024-11-05 00:04:35.133 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:04:35.133 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:04:35.133 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:04:47.490 UTC [27] LOG:  checkpoint complete: wrote 3081 buffers (18.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=6.701 s, sync=3.311 s, total=12.357 s; sync files=97, longest=2.021 s, average=0.035 s; distance=703161 kB, estimate=824011 kB; lsn=8E/541489C0, redo lsn=8E/352B8458
postgres_container  | 2024-11-05 00:04:47.490 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:04:47.490 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:04:47.490 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:04:57.283 UTC [446] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:04:57.283 UTC [446] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:05:09.790 UTC [27] LOG:  checkpoint complete: wrote 67 buffers (0.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=17.855 s, sync=2.025 s, total=22.301 s; sync files=228, longest=0.998 s, average=0.009 s; distance=658404 kB, estimate=807450 kB; lsn=8E/7C400168, redo lsn=8E/5D5B1850
postgres_container  | 2024-11-05 00:05:09.791 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 00:05:09.791 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:05:09.791 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:05:22.010 UTC [27] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.413 s, sync=2.612 s, total=12.220 s; sync files=70, longest=2.507 s, average=0.038 s; distance=702789 kB, estimate=796984 kB; lsn=8E/A6530518, redo lsn=8E/88402DB8
postgres_container  | 2024-11-05 00:05:22.011 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:05:22.011 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:05:22.023 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:05:41.270 UTC [468] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:05:41.270 UTC [468] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:05:46.831 UTC [460] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:05:46.831 UTC [460] CONTEXT:  while scanning block 17567 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 00:05:51.381 UTC [27] LOG:  checkpoint complete: wrote 4145 buffers (25.3%); 0 WAL file(s) added, 14 removed, 29 recycled; write=25.648 s, sync=1.910 s, total=29.371 s; sync files=223, longest=0.152 s, average=0.009 s; distance=701788 kB, estimate=787464 kB; lsn=8E/D5A08E28, redo lsn=8E/B315A048
postgres_container  | 2024-11-05 00:05:51.382 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 00:05:51.382 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:05:51.382 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:06:05.351 UTC [27] LOG:  checkpoint complete: wrote 6247 buffers (38.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=9.513 s, sync=2.025 s, total=13.969 s; sync files=84, longest=1.818 s, average=0.025 s; distance=722016 kB, estimate=780920 kB; lsn=8E/FE000080, redo lsn=8E/DF272280
postgres_container  | 2024-11-05 00:06:05.351 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:06:05.351 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:06:05.351 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:06:16.957 UTC [27] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.095 s, sync=2.126 s, total=11.607 s; sync files=37, longest=1.609 s, average=0.058 s; distance=721167 kB, estimate=774944 kB; lsn=8F/29B7E2D0, redo lsn=8F/B2B6110
postgres_container  | 2024-11-05 00:06:16.958 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 00:06:16.958 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:06:16.958 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:06:29.185 UTC [489] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:06:29.185 UTC [489] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:06:32.612 UTC [490] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 00:06:32.612 UTC [490] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 00:06:32.612 UTC [490] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 00:06:32.662 UTC [490] LOG:  skipping analyze of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 00:06:32.663 UTC [490] LOG:  skipping analyze of "cdm_person" --- lock not available
postgres_container  | 2024-11-05 00:06:44.135 UTC [27] LOG:  checkpoint complete: wrote 1513 buffers (9.2%); 0 WAL file(s) added, 21 removed, 22 recycled; write=20.492 s, sync=4.735 s, total=27.178 s; sync files=229, longest=1.077 s, average=0.021 s; distance=712861 kB, estimate=768736 kB; lsn=8F/5F402258, redo lsn=8F/36ADD860
postgres_container  | 2024-11-05 00:06:44.136 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 00:06:44.136 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:06:44.136 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:06:57.174 UTC [27] LOG:  checkpoint complete: wrote 8394 buffers (51.2%); 0 WAL file(s) added, 19 removed, 32 recycled; write=10.529 s, sync=0.184 s, total=13.039 s; sync files=76, longest=0.164 s, average=0.003 s; distance=840354 kB, estimate=840354 kB; lsn=8F/884001D0, redo lsn=8F/69F86068
postgres_container  | 2024-11-05 00:06:57.175 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:06:57.175 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:06:57.175 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:07:16.315 UTC [511] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:07:16.315 UTC [511] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:07:20.396 UTC [27] LOG:  checkpoint complete: wrote 2944 buffers (18.0%); 0 WAL file(s) added, 14 removed, 30 recycled; write=20.877 s, sync=0.948 s, total=23.221 s; sync files=198, longest=0.051 s, average=0.005 s; distance=713841 kB, estimate=827702 kB; lsn=8F/B63FF880, redo lsn=8F/958A2490
postgres_container  | 2024-11-05 00:07:20.396 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:07:20.396 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:07:20.396 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:07:31.458 UTC [27] LOG:  checkpoint complete: wrote 3738 buffers (22.8%); 0 WAL file(s) added, 7 removed, 31 recycled; write=5.657 s, sync=3.041 s, total=11.062 s; sync files=89, longest=1.495 s, average=0.035 s; distance=629383 kB, estimate=807870 kB; lsn=8F/DBA2D1C8, redo lsn=8F/BBF443E0
postgres_container  | 2024-11-05 00:07:31.458 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 00:07:31.458 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:07:31.458 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:07:44.723 UTC [27] LOG:  checkpoint complete: wrote 5000 buffers (30.5%); 0 WAL file(s) added, 14 removed, 30 recycled; write=6.974 s, sync=3.804 s, total=13.265 s; sync files=98, longest=2.251 s, average=0.039 s; distance=714819 kB, estimate=798565 kB; lsn=90/85D34E0, redo lsn=8F/E79551F8
postgres_container  | 2024-11-05 00:07:44.723 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:07:44.723 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:07:44.723 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:07:59.116 UTC [533] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:07:59.116 UTC [533] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:08:14.065 UTC [27] LOG:  checkpoint complete: wrote 4181 buffers (25.5%); 0 WAL file(s) added, 24 removed, 21 recycled; write=22.773 s, sync=4.106 s, total=29.342 s; sync files=244, longest=1.111 s, average=0.017 s; distance=738990 kB, estimate=792608 kB; lsn=90/3E45A338, redo lsn=90/14B00D50
postgres_container  | 2024-11-05 00:08:14.066 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:08:28.400 UTC [27] LOG:  checkpoint complete: wrote 8378 buffers (51.1%); 0 WAL file(s) added, 22 removed, 32 recycled; write=11.680 s, sync=0.337 s, total=14.334 s; sync files=78, longest=0.157 s, average=0.005 s; distance=883992 kB, estimate=883992 kB; lsn=90/69416CC0, redo lsn=90/4AA46FD8
postgres_container  | 2024-11-05 00:08:28.400 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:08:28.400 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:08:28.400 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:08:41.673 UTC [27] LOG:  checkpoint complete: wrote 3038 buffers (18.5%); 0 WAL file(s) added, 12 removed, 33 recycled; write=9.473 s, sync=2.271 s, total=13.273 s; sync files=78, longest=0.672 s, average=0.030 s; distance=733362 kB, estimate=868929 kB; lsn=90/95F41B58, redo lsn=90/77673818
postgres_container  | 2024-11-05 00:08:48.692 UTC [555] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:08:48.692 UTC [555] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:08:53.149 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 00:08:53.149 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:08:53.149 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:09:05.375 UTC [27] LOG:  checkpoint complete: wrote 3918 buffers (23.9%); 0 WAL file(s) added, 9 removed, 24 recycled; write=5.020 s, sync=5.379 s, total=12.226 s; sync files=256, longest=1.467 s, average=0.022 s; distance=538175 kB, estimate=835854 kB; lsn=90/BF362A08, redo lsn=90/984034C8
postgres_container  | 2024-11-05 00:09:05.376 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:09:05.376 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:09:05.376 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:09:19.075 UTC [27] LOG:  checkpoint complete: wrote 4586 buffers (28.0%); 0 WAL file(s) added, 17 removed, 32 recycled; write=8.131 s, sync=2.955 s, total=13.700 s; sync files=43, longest=2.120 s, average=0.069 s; distance=801162 kB, estimate=832385 kB; lsn=90/E8430400, redo lsn=90/C9266050
postgres_container  | 2024-11-05 00:09:19.075 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:09:19.075 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:09:19.075 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:09:34.272 UTC [577] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:09:34.272 UTC [577] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:09:37.252 UTC [574] LOG:  skipping analyze of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 00:09:37.252 UTC [574] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 00:09:46.801 UTC [27] LOG:  checkpoint complete: wrote 2136 buffers (13.0%); 0 WAL file(s) added, 22 removed, 23 recycled; write=21.888 s, sync=3.744 s, total=27.726 s; sync files=223, longest=1.156 s, average=0.017 s; distance=738743 kB, estimate=823020 kB; lsn=91/1E402390, redo lsn=90/F63D3FB8
postgres_container  | 2024-11-05 00:09:46.802 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 00:09:46.802 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:09:46.802 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:10:00.318 UTC [27] LOG:  checkpoint complete: wrote 8439 buffers (51.5%); 0 WAL file(s) added, 21 removed, 31 recycled; write=8.430 s, sync=2.903 s, total=13.517 s; sync files=74, longest=1.119 s, average=0.040 s; distance=860126 kB, estimate=860126 kB; lsn=91/4A400190, redo lsn=91/2ABCBA98
postgres_container  | 2024-11-05 00:10:00.318 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:10:00.318 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:10:00.363 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:10:12.589 UTC [27] LOG:  checkpoint complete: wrote 3230 buffers (19.7%); 0 WAL file(s) added, 14 removed, 32 recycled; write=7.184 s, sync=2.752 s, total=12.271 s; sync files=37, longest=2.561 s, average=0.075 s; distance=741905 kB, estimate=848304 kB; lsn=91/771BDFD8, redo lsn=91/58050068
postgres_container  | 2024-11-05 00:10:12.589 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:10:12.589 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:10:12.590 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:10:21.506 UTC [598] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:10:21.506 UTC [598] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:10:33.405 UTC [27] LOG:  checkpoint complete: wrote 91 buffers (0.6%); 0 WAL file(s) added, 2 removed, 31 recycled; write=16.218 s, sync=2.415 s, total=20.816 s; sync files=227, longest=1.239 s, average=0.011 s; distance=546368 kB, estimate=818110 kB; lsn=91/994167F8, redo lsn=91/795E0238
postgres_container  | 2024-11-05 00:10:33.406 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 00:10:33.406 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:10:33.406 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:10:47.406 UTC [27] LOG:  checkpoint complete: wrote 8427 buffers (51.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.406 s, sync=2.590 s, total=14.001 s; sync files=97, longest=2.375 s, average=0.027 s; distance=669025 kB, estimate=803202 kB; lsn=91/C0DF29D0, redo lsn=91/A2338A28
postgres_container  | 2024-11-05 00:10:47.407 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:10:47.407 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:10:47.449 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:11:05.062 UTC [620] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:11:05.062 UTC [620] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:11:12.798 UTC [27] LOG:  checkpoint complete: wrote 3682 buffers (22.5%); 0 WAL file(s) added, 18 removed, 28 recycled; write=21.081 s, sync=2.282 s, total=25.392 s; sync files=236, longest=0.671 s, average=0.010 s; distance=754453 kB, estimate=798327 kB; lsn=91/F34020B0, redo lsn=91/D03FE0D8
postgres_container  | 2024-11-05 00:11:12.798 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 00:11:12.798 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:11:12.846 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:11:25.575 UTC [27] LOG:  checkpoint complete: wrote 6341 buffers (38.7%); 0 WAL file(s) added, 14 removed, 32 recycled; write=6.846 s, sync=2.858 s, total=12.777 s; sync files=74, longest=1.735 s, average=0.039 s; distance=752224 kB, estimate=793717 kB; lsn=92/1D10CBA0, redo lsn=91/FE2961C0
postgres_container  | 2024-11-05 00:11:25.575 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:11:25.575 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:11:25.575 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:11:39.346 UTC [27] LOG:  checkpoint complete: wrote 2029 buffers (12.4%); 0 WAL file(s) added, 15 removed, 31 recycled; write=8.309 s, sync=2.353 s, total=13.771 s; sync files=46, longest=1.148 s, average=0.052 s; distance=753780 kB, estimate=789723 kB; lsn=92/4C4005D8, redo lsn=92/2C2B33B0
postgres_container  | 2024-11-05 00:11:39.346 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:11:39.346 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:11:39.382 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:11:53.642 UTC [642] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:11:53.642 UTC [642] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:12:10.081 UTC [27] LOG:  checkpoint complete: wrote 976 buffers (6.0%); 0 WAL file(s) added, 24 removed, 20 recycled; write=21.300 s, sync=6.755 s, total=30.735 s; sync files=257, longest=1.789 s, average=0.027 s; distance=733668 kB, estimate=784118 kB; lsn=92/83434198, redo lsn=92/58F2C528
postgres_container  | 2024-11-05 00:12:10.147 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:12:24.786 UTC [27] LOG:  checkpoint complete: wrote 8330 buffers (50.8%); 0 WAL file(s) added, 24 removed, 31 recycled; write=10.089 s, sync=1.571 s, total=14.706 s; sync files=89, longest=0.596 s, average=0.018 s; distance=889678 kB, estimate=889678 kB; lsn=92/AFD57398, redo lsn=92/8F400070
postgres_container  | 2024-11-05 00:12:24.786 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:12:24.786 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:12:24.786 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:12:39.508 UTC [664] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:12:39.508 UTC [664] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:12:43.811 UTC [659] LOG:  skipping analyze of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 00:12:44.811 UTC [659] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:12:44.811 UTC [659] CONTEXT:  while scanning block 3931 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 00:12:55.934 UTC [27] LOG:  checkpoint complete: wrote 3479 buffers (21.2%); 0 WAL file(s) added, 25 removed, 21 recycled; write=24.067 s, sync=4.959 s, total=31.148 s; sync files=225, longest=1.344 s, average=0.023 s; distance=762344 kB, estimate=876945 kB; lsn=92/E7402100, redo lsn=92/BDC7A130
postgres_container  | 2024-11-05 00:12:55.972 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:13:10.081 UTC [27] LOG:  checkpoint complete: wrote 8436 buffers (51.5%); 0 WAL file(s) added, 21 removed, 33 recycled; write=10.538 s, sync=1.006 s, total=14.147 s; sync files=74, longest=0.927 s, average=0.014 s; distance=876047 kB, estimate=876855 kB; lsn=93/116CCBC0, redo lsn=92/F33FE0B0
postgres_container  | 2024-11-05 00:13:10.082 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:13:10.082 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:13:10.082 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:13:21.875 UTC [27] LOG:  checkpoint complete: wrote 3138 buffers (19.2%); 0 WAL file(s) added, 12 removed, 33 recycled; write=9.256 s, sync=0.704 s, total=11.794 s; sync files=38, longest=0.187 s, average=0.019 s; distance=737279 kB, estimate=862898 kB; lsn=93/3EA707A0, redo lsn=93/203FE060
postgres_container  | 2024-11-05 00:13:21.876 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 00:13:21.876 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:13:21.876 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:13:29.696 UTC [685] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:13:29.696 UTC [685] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:13:42.219 UTC [27] LOG:  checkpoint complete: wrote 156 buffers (1.0%); 0 WAL file(s) added, 2 removed, 30 recycled; write=15.438 s, sync=2.636 s, total=20.344 s; sync files=227, longest=1.370 s, average=0.012 s; distance=525153 kB, estimate=829123 kB; lsn=93/6103CDA0, redo lsn=93/404D6750
postgres_container  | 2024-11-05 00:13:42.220 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 00:13:42.220 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:13:42.220 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:13:55.625 UTC [27] LOG:  checkpoint complete: wrote 8325 buffers (50.8%); 0 WAL file(s) added, 13 removed, 31 recycled; write=7.370 s, sync=3.360 s, total=13.405 s; sync files=84, longest=2.929 s, average=0.040 s; distance=719723 kB, estimate=818183 kB; lsn=93/8C405E40, redo lsn=93/6C3B15B0
postgres_container  | 2024-11-05 00:13:55.625 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:13:55.625 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:13:55.625 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:14:11.757 UTC [707] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:14:11.757 UTC [707] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:14:21.488 UTC [27] LOG:  checkpoint complete: wrote 2441 buffers (14.9%); 0 WAL file(s) added, 19 removed, 27 recycled; write=20.215 s, sync=3.178 s, total=25.863 s; sync files=223, longest=1.141 s, average=0.015 s; distance=753083 kB, estimate=811673 kB; lsn=93/BE400148, redo lsn=93/9A3203E0
postgres_container  | 2024-11-05 00:14:21.489 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:14:21.489 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:14:21.489 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:14:36.418 UTC [27] LOG:  checkpoint complete: wrote 8282 buffers (50.5%); 0 WAL file(s) added, 20 removed, 32 recycled; write=10.930 s, sync=1.146 s, total=14.930 s; sync files=68, longest=0.903 s, average=0.017 s; distance=851746 kB, estimate=851746 kB; lsn=93/ED4001A8, redo lsn=93/CE2E8FB8
postgres_container  | 2024-11-05 00:14:36.419 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:14:36.419 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:14:36.419 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:14:50.367 UTC [27] LOG:  checkpoint complete: wrote 3089 buffers (18.9%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.029 s, sync=3.327 s, total=13.948 s; sync files=89, longest=3.012 s, average=0.038 s; distance=726488 kB, estimate=839221 kB; lsn=94/196C8EF0, redo lsn=93/FA85F110
postgres_container  | 2024-11-05 00:14:50.367 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:14:50.367 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:14:50.367 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:15:01.249 UTC [729] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:15:01.249 UTC [729] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:15:14.373 UTC [27] LOG:  checkpoint complete: wrote 277 buffers (1.7%); 0 WAL file(s) added, 11 removed, 30 recycled; write=18.944 s, sync=2.760 s, total=24.006 s; sync files=240, longest=1.663 s, average=0.012 s; distance=674696 kB, estimate=822768 kB; lsn=94/44400140, redo lsn=94/23B412E0
postgres_container  | 2024-11-05 00:15:14.374 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 00:15:14.374 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:15:14.374 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:15:29.826 UTC [27] LOG:  checkpoint complete: wrote 8355 buffers (51.0%); 0 WAL file(s) added, 15 removed, 29 recycled; write=8.236 s, sync=4.616 s, total=15.452 s; sync files=84, longest=3.775 s, average=0.055 s; distance=724595 kB, estimate=812951 kB; lsn=94/71400298, redo lsn=94/4FEDE228
postgres_container  | 2024-11-05 00:15:29.827 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:15:29.827 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:15:29.827 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:15:48.168 UTC [751] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:15:48.168 UTC [751] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:16:00.189 UTC [27] LOG:  checkpoint complete: wrote 3690 buffers (22.5%); 0 WAL file(s) added, 18 removed, 28 recycled; write=25.012 s, sync=2.950 s, total=30.362 s; sync files=232, longest=1.128 s, average=0.013 s; distance=745404 kB, estimate=806196 kB; lsn=94/A04021E0, redo lsn=94/7D6CD418
postgres_container  | 2024-11-05 00:16:00.190 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:16:15.012 UTC [27] LOG:  checkpoint complete: wrote 8458 buffers (51.6%); 0 WAL file(s) added, 19 removed, 32 recycled; write=8.484 s, sync=3.196 s, total=14.822 s; sync files=77, longest=2.901 s, average=0.042 s; distance=831840 kB, estimate=831840 kB; lsn=94/CF4001D8, redo lsn=94/B03257F8
postgres_container  | 2024-11-05 00:16:15.012 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:16:15.012 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:16:15.030 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:16:27.437 UTC [27] LOG:  checkpoint complete: wrote 1120 buffers (6.8%); 0 WAL file(s) added, 13 removed, 33 recycled; write=9.561 s, sync=0.305 s, total=12.425 s; sync files=38, longest=0.238 s, average=0.009 s; distance=754530 kB, estimate=824109 kB; lsn=94/FC402320, redo lsn=94/DE3FE348
postgres_container  | 2024-11-05 00:16:27.437 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:16:27.437 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:16:27.438 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:16:37.511 UTC [773] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:16:37.511 UTC [773] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:16:41.372 UTC [768] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:16:41.372 UTC [768] CONTEXT:  while scanning block 4301 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 00:16:53.261 UTC [27] LOG:  checkpoint complete: wrote 208 buffers (1.3%); 0 WAL file(s) added, 11 removed, 30 recycled; write=19.712 s, sync=3.889 s, total=25.824 s; sync files=227, longest=2.239 s, average=0.018 s; distance=669172 kB, estimate=808616 kB; lsn=95/285C57F8, redo lsn=95/717B3A8
postgres_container  | 2024-11-05 00:16:53.262 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:16:53.262 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:16:53.262 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:17:06.589 UTC [27] LOG:  checkpoint complete: wrote 8434 buffers (51.5%); 0 WAL file(s) added, 14 removed, 31 recycled; write=8.189 s, sync=2.708 s, total=13.328 s; sync files=89, longest=2.128 s, average=0.031 s; distance=739866 kB, estimate=801741 kB; lsn=95/544022A0, redo lsn=95/34401F78
postgres_container  | 2024-11-05 00:17:06.590 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:17:06.590 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:17:06.590 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:17:23.467 UTC [794] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:17:23.467 UTC [794] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:17:32.979 UTC [27] LOG:  checkpoint complete: wrote 2126 buffers (13.0%); 0 WAL file(s) added, 19 removed, 25 recycled; write=20.771 s, sync=3.232 s, total=26.389 s; sync files=219, longest=1.230 s, average=0.015 s; distance=730967 kB, estimate=794663 kB; lsn=95/860E9FA8, redo lsn=95/60DD7C48
postgres_container  | 2024-11-05 00:17:32.980 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:17:32.980 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:17:32.980 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:17:47.906 UTC [27] LOG:  checkpoint complete: wrote 6438 buffers (39.3%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.640 s, sync=0.890 s, total=14.927 s; sync files=99, longest=0.649 s, average=0.009 s; distance=790617 kB, estimate=794259 kB; lsn=95/B0405038, redo lsn=95/911EE068
postgres_container  | 2024-11-05 00:17:47.906 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:17:47.906 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:17:47.906 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:18:00.546 UTC [27] LOG:  checkpoint complete: wrote 2758 buffers (16.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.354 s, sync=1.617 s, total=12.640 s; sync files=49, longest=1.143 s, average=0.033 s; distance=687106 kB, estimate=783543 kB; lsn=95/DA0FC028, redo lsn=95/BB0EEBE8
postgres_container  | 2024-11-05 00:18:00.547 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:18:00.547 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:18:00.572 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:18:11.309 UTC [816] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:18:11.309 UTC [816] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:18:23.584 UTC [27] LOG:  checkpoint complete: wrote 852 buffers (5.2%); 0 WAL file(s) added, 12 removed, 31 recycled; write=18.838 s, sync=1.928 s, total=23.038 s; sync files=233, longest=1.053 s, average=0.009 s; distance=711933 kB, estimate=776382 kB; lsn=96/66C3FA0, redo lsn=95/E682E268
postgres_container  | 2024-11-05 00:18:23.585 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:18:23.585 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:18:23.585 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:18:35.671 UTC [27] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.164 s, sync=2.406 s, total=12.087 s; sync files=68, longest=2.225 s, average=0.036 s; distance=720525 kB, estimate=770797 kB; lsn=96/30D84EE0, redo lsn=96/127D16C8
postgres_container  | 2024-11-05 00:18:35.673 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:18:35.673 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:18:35.673 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:18:48.776 UTC [27] LOG:  checkpoint complete: wrote 5098 buffers (31.1%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.074 s, sync=3.653 s, total=13.104 s; sync files=99, longest=1.738 s, average=0.037 s; distance=686493 kB, estimate=762366 kB; lsn=96/5C52D7F8, redo lsn=96/3C638DA0
postgres_container  | 2024-11-05 00:18:56.858 UTC [838] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:18:56.858 UTC [838] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:18:58.886 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:18:58.886 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:18:58.886 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:19:09.527 UTC [27] LOG:  checkpoint complete: wrote 3124 buffers (19.1%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.675 s, sync=2.849 s, total=10.642 s; sync files=254, longest=1.298 s, average=0.012 s; distance=538164 kB, estimate=739946 kB; lsn=96/7D402130, redo lsn=96/5D3C5E50
postgres_container  | 2024-11-05 00:19:09.528 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 00:19:09.528 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:19:09.555 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:19:23.300 UTC [27] LOG:  checkpoint complete: wrote 5257 buffers (32.1%); 0 WAL file(s) added, 13 removed, 30 recycled; write=7.520 s, sync=3.621 s, total=13.772 s; sync files=44, longest=3.032 s, average=0.083 s; distance=711056 kB, estimate=737057 kB; lsn=96/A94020C8, redo lsn=96/88A2A030
postgres_container  | 2024-11-05 00:19:23.300 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:19:23.300 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:19:23.300 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:19:39.674 UTC [860] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:19:39.674 UTC [860] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:19:45.311 UTC [852] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:19:45.311 UTC [852] CONTEXT:  while scanning block 8663 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 00:19:46.335 UTC [852] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:19:46.335 UTC [852] CONTEXT:  while scanning block 3913 of relation "stage_omopcdm.voc_concept_synonym"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_synonym"
postgres_container  | 2024-11-05 00:19:46.342 UTC [852] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 00:19:53.524 UTC [27] LOG:  checkpoint complete: wrote 2492 buffers (15.2%); 0 WAL file(s) added, 19 removed, 27 recycled; write=25.012 s, sync=2.650 s, total=30.225 s; sync files=225, longest=0.674 s, average=0.012 s; distance=746330 kB, estimate=746330 kB; lsn=96/DA402090, redo lsn=96/B6300840
postgres_container  | 2024-11-05 00:19:53.525 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:20:08.845 UTC [27] LOG:  checkpoint complete: wrote 8422 buffers (51.4%); 0 WAL file(s) added, 20 removed, 32 recycled; write=12.028 s, sync=0.300 s, total=15.321 s; sync files=74, longest=0.263 s, average=0.005 s; distance=862132 kB, estimate=862132 kB; lsn=97/94002C8, redo lsn=96/EACED870
postgres_container  | 2024-11-05 00:20:08.846 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:20:08.846 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:20:08.846 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:20:21.984 UTC [27] LOG:  checkpoint complete: wrote 1147 buffers (7.0%); 0 WAL file(s) added, 15 removed, 32 recycled; write=7.836 s, sync=2.590 s, total=13.138 s; sync files=37, longest=1.438 s, average=0.070 s; distance=758125 kB, estimate=851731 kB; lsn=97/38400748, redo lsn=97/19148DE0
postgres_container  | 2024-11-05 00:20:21.984 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:20:21.984 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:20:21.984 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:20:31.506 UTC [882] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:20:31.506 UTC [882] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:20:34.216 UTC [879] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:20:34.216 UTC [879] CONTEXT:  while scanning block 3959 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 00:20:35.216 UTC [879] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:20:35.216 UTC [879] CONTEXT:  while scanning block 4066 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] CONTEXT:  while scanning block 3967 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 00:20:36.216 UTC [879] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 00:20:36.245 UTC [879] LOG:  skipping vacuum of "pg_toast_388898" --- lock not available
postgres_container  | 2024-11-05 00:20:47.584 UTC [27] LOG:  checkpoint complete: wrote 239 buffers (1.5%); 0 WAL file(s) added, 8 removed, 30 recycled; write=19.878 s, sync=3.062 s, total=25.600 s; sync files=237, longest=0.904 s, average=0.013 s; distance=634229 kB, estimate=829981 kB; lsn=97/60A04040, redo lsn=97/3FCA6210
postgres_container  | 2024-11-05 00:20:47.584 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:20:47.584 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:20:47.584 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:21:00.600 UTC [27] LOG:  checkpoint complete: wrote 8410 buffers (51.3%); 0 WAL file(s) added, 16 removed, 31 recycled; write=9.649 s, sync=0.906 s, total=13.016 s; sync files=92, longest=0.283 s, average=0.010 s; distance=760479 kB, estimate=823030 kB; lsn=97/8E400480, redo lsn=97/6E34DFF0
postgres_container  | 2024-11-05 00:21:00.601 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:21:00.601 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:21:00.618 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:21:17.429 UTC [903] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:21:17.429 UTC [903] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:21:27.351 UTC [27] LOG:  checkpoint complete: wrote 2501 buffers (15.3%); 0 WAL file(s) added, 19 removed, 26 recycled; write=21.033 s, sync=3.364 s, total=26.750 s; sync files=220, longest=1.343 s, average=0.016 s; distance=737984 kB, estimate=814526 kB; lsn=97/C03FE838, redo lsn=97/9B3FE070
postgres_container  | 2024-11-05 00:21:27.352 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 00:21:27.352 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:21:27.352 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:21:42.625 UTC [27] LOG:  checkpoint complete: wrote 8288 buffers (50.6%); 0 WAL file(s) added, 22 removed, 29 recycled; write=9.187 s, sync=3.759 s, total=15.273 s; sync files=87, longest=2.721 s, average=0.044 s; distance=843414 kB, estimate=843414 kB; lsn=97/F0784EE8, redo lsn=97/CEBA3878
postgres_container  | 2024-11-05 00:21:42.625 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 00:21:42.625 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:21:42.625 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:21:56.790 UTC [27] LOG:  checkpoint complete: wrote 3206 buffers (19.6%); 0 WAL file(s) added, 14 removed, 32 recycled; write=10.973 s, sync=0.876 s, total=14.166 s; sync files=102, longest=0.656 s, average=0.009 s; distance=754092 kB, estimate=834481 kB; lsn=98/1B8EF5D0, redo lsn=97/FCC0E9C0
postgres_container  | 2024-11-05 00:21:56.792 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:21:56.792 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:21:56.792 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:22:06.644 UTC [925] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:22:06.644 UTC [925] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:22:19.385 UTC [27] LOG:  checkpoint complete: wrote 367 buffers (2.2%); 0 WAL file(s) added, 7 removed, 32 recycled; write=18.079 s, sync=2.357 s, total=22.594 s; sync files=232, longest=1.218 s, average=0.011 s; distance=631401 kB, estimate=814173 kB; lsn=98/42B35448, redo lsn=98/234A8EE8
postgres_container  | 2024-11-05 00:22:19.385 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:22:19.385 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:22:19.385 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:22:32.386 UTC [27] LOG:  checkpoint complete: wrote 8341 buffers (50.9%); 0 WAL file(s) added, 12 removed, 31 recycled; write=6.843 s, sync=3.746 s, total=13.001 s; sync files=83, longest=3.360 s, average=0.046 s; distance=710979 kB, estimate=803854 kB; lsn=98/6EB893C0, redo lsn=98/4EAF9D58
postgres_container  | 2024-11-05 00:22:32.387 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:22:32.387 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:22:32.387 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:22:51.813 UTC [947] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:22:51.813 UTC [947] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:22:58.036 UTC [27] LOG:  checkpoint complete: wrote 2528 buffers (15.4%); 0 WAL file(s) added, 15 removed, 28 recycled; write=22.267 s, sync=1.823 s, total=25.649 s; sync files=255, longest=0.096 s, average=0.008 s; distance=706466 kB, estimate=794115 kB; lsn=98/9C94E1C8, redo lsn=98/79CE28D0
postgres_container  | 2024-11-05 00:22:58.037 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:22:58.037 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:22:58.037 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:23:09.846 UTC [27] LOG:  checkpoint complete: wrote 6172 buffers (37.7%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.685 s, sync=1.572 s, total=11.809 s; sync files=74, longest=0.736 s, average=0.022 s; distance=694337 kB, estimate=784137 kB; lsn=98/C3400870, redo lsn=98/A42F2DD0
postgres_container  | 2024-11-05 00:23:09.846 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 00:23:09.846 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:23:09.847 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:23:22.294 UTC [27] LOG:  checkpoint complete: wrote 2205 buffers (13.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.651 s, sync=3.190 s, total=12.448 s; sync files=37, longest=2.129 s, average=0.087 s; distance=730543 kB, estimate=778778 kB; lsn=98/EFFA57E8, redo lsn=98/D0C5EC68
postgres_container  | 2024-11-05 00:23:22.295 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:23:22.295 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:23:22.295 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:23:36.153 UTC [969] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:23:36.153 UTC [969] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:23:38.721 UTC [966] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:23:38.721 UTC [966] CONTEXT:  while scanning block 15195 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 00:23:38.721 UTC [966] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 00:23:51.222 UTC [27] LOG:  checkpoint complete: wrote 1463 buffers (8.9%); 0 WAL file(s) added, 24 removed, 22 recycled; write=21.621 s, sync=5.270 s, total=28.928 s; sync files=221, longest=1.667 s, average=0.024 s; distance=746976 kB, estimate=775598 kB; lsn=99/274F9088, redo lsn=98/FE5D7028
postgres_container  | 2024-11-05 00:23:51.223 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 00:23:51.223 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:23:51.223 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:24:04.816 UTC [27] LOG:  checkpoint complete: wrote 8434 buffers (51.5%); 0 WAL file(s) added, 20 removed, 31 recycled; write=9.800 s, sync=0.830 s, total=13.593 s; sync files=77, longest=0.672 s, average=0.011 s; distance=839593 kB, estimate=839593 kB; lsn=99/51268B68, redo lsn=99/319C1648
postgres_container  | 2024-11-05 00:24:04.816 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:24:04.816 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:24:04.816 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:24:21.701 UTC [990] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:24:21.701 UTC [990] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:24:30.387 UTC [27] LOG:  checkpoint complete: wrote 3226 buffers (19.7%); 0 WAL file(s) added, 19 removed, 28 recycled; write=20.598 s, sync=2.763 s, total=25.571 s; sync files=229, longest=1.034 s, average=0.013 s; distance=767260 kB, estimate=832360 kB; lsn=99/83E3DE40, redo lsn=99/60708730
postgres_container  | 2024-11-05 00:24:30.388 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:24:30.388 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:24:30.388 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:24:47.428 UTC [27] LOG:  checkpoint complete: wrote 6285 buffers (38.4%); 0 WAL file(s) added, 19 removed, 30 recycled; write=13.283 s, sync=1.415 s, total=17.040 s; sync files=88, longest=0.256 s, average=0.017 s; distance=796861 kB, estimate=828810 kB; lsn=99/B2AFC170, redo lsn=99/91137CC0
postgres_container  | 2024-11-05 00:24:47.428 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 00:24:47.428 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:24:47.428 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:25:01.086 UTC [27] LOG:  checkpoint complete: wrote 4965 buffers (30.3%); 0 WAL file(s) added, 13 removed, 33 recycled; write=9.269 s, sync=1.859 s, total=13.658 s; sync files=104, longest=1.646 s, average=0.018 s; distance=759156 kB, estimate=821844 kB; lsn=99/DDFAAF38, redo lsn=99/BF694F80
postgres_container  | 2024-11-05 00:25:01.087 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:25:01.087 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:25:01.088 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:25:10.892 UTC [1012] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:25:10.892 UTC [1012] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:25:23.187 UTC [27] LOG:  checkpoint complete: wrote 261 buffers (1.6%); 0 WAL file(s) added, 11 removed, 31 recycled; write=17.819 s, sync=2.090 s, total=22.100 s; sync files=235, longest=1.198 s, average=0.009 s; distance=693769 kB, estimate=809037 kB; lsn=9A/99A06A0, redo lsn=99/E9C17650
postgres_container  | 2024-11-05 00:25:23.187 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 00:25:23.187 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:25:23.187 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:25:35.885 UTC [27] LOG:  checkpoint complete: wrote 8339 buffers (50.9%); 0 WAL file(s) added, 14 removed, 30 recycled; write=7.665 s, sync=3.295 s, total=12.698 s; sync files=83, longest=2.669 s, average=0.040 s; distance=718413 kB, estimate=799975 kB; lsn=9A/36C65658, redo lsn=9A/159AAC60
postgres_container  | 2024-11-05 00:25:35.885 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:25:35.885 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:25:35.885 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:25:56.498 UTC [1034] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:25:56.498 UTC [1034] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:26:01.022 UTC [27] LOG:  checkpoint complete: wrote 7105 buffers (43.4%); 0 WAL file(s) added, 12 removed, 30 recycled; write=22.596 s, sync=0.990 s, total=25.137 s; sync files=220, longest=0.074 s, average=0.005 s; distance=682273 kB, estimate=788204 kB; lsn=9A/60400168, redo lsn=9A/3F3F3208
postgres_container  | 2024-11-05 00:26:01.023 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:26:01.023 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:26:01.023 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:26:11.930 UTC [27] LOG:  checkpoint complete: wrote 4467 buffers (27.3%); 0 WAL file(s) added, 8 removed, 31 recycled; write=4.732 s, sync=4.214 s, total=10.907 s; sync files=100, longest=1.545 s, average=0.043 s; distance=640624 kB, estimate=773446 kB; lsn=9A/86492668, redo lsn=9A/6658F338
postgres_container  | 2024-11-05 00:26:11.931 UTC [27] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-05 00:26:11.931 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:26:11.931 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:26:23.741 UTC [27] LOG:  checkpoint complete: wrote 3900 buffers (23.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.687 s, sync=0.873 s, total=11.810 s; sync files=42, longest=0.563 s, average=0.021 s; distance=713241 kB, estimate=767426 kB; lsn=9A/B0402328, redo lsn=9A/91E158C0
postgres_container  | 2024-11-05 00:26:23.742 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:26:23.742 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:26:23.784 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:26:38.096 UTC [1056] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:26:38.096 UTC [1056] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:26:43.108 UTC [1051] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:26:43.108 UTC [1051] CONTEXT:  while scanning block 3985 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 00:26:52.292 UTC [27] LOG:  checkpoint complete: wrote 2774 buffers (16.9%); 0 WAL file(s) added, 19 removed, 24 recycled; write=22.941 s, sync=3.836 s, total=28.551 s; sync files=223, longest=1.125 s, average=0.018 s; distance=694177 kB, estimate=760101 kB; lsn=9A/E3402120, redo lsn=9A/BC3FE080
postgres_container  | 2024-11-05 00:26:52.293 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 00:26:52.293 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:26:52.303 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:27:05.268 UTC [27] LOG:  checkpoint complete: wrote 8437 buffers (51.5%); 0 WAL file(s) added, 18 removed, 32 recycled; write=10.164 s, sync=0.340 s, total=12.975 s; sync files=75, longest=0.223 s, average=0.005 s; distance=819200 kB, estimate=819200 kB; lsn=9B/D1762D0, redo lsn=9A/EE3FE1F0
postgres_container  | 2024-11-05 00:27:05.269 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:27:05.269 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:27:05.310 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:27:17.727 UTC [27] LOG:  checkpoint complete: wrote 1053 buffers (6.4%); 0 WAL file(s) added, 13 removed, 32 recycled; write=5.742 s, sync=4.265 s, total=12.459 s; sync files=39, longest=2.226 s, average=0.110 s; distance=737279 kB, estimate=811008 kB; lsn=9B/39F13818, redo lsn=9B/1B3FE058
postgres_container  | 2024-11-05 00:27:17.728 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:27:17.728 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:27:17.728 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:27:25.905 UTC [1077] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:27:25.905 UTC [1077] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:27:40.065 UTC [27] LOG:  checkpoint complete: wrote 238 buffers (1.5%); 0 WAL file(s) added, 8 removed, 28 recycled; write=16.588 s, sync=3.975 s, total=22.337 s; sync files=249, longest=1.374 s, average=0.016 s; distance=592017 kB, estimate=789109 kB; lsn=9B/624063E8, redo lsn=9B/3F622630
postgres_container  | 2024-11-05 00:27:40.065 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:27:40.065 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:27:40.065 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:27:53.586 UTC [27] LOG:  checkpoint complete: wrote 8444 buffers (51.5%); 0 WAL file(s) added, 15 removed, 29 recycled; write=9.926 s, sync=1.411 s, total=13.521 s; sync files=112, longest=0.344 s, average=0.013 s; distance=726444 kB, estimate=782842 kB; lsn=9B/8D4020B0, redo lsn=9B/6BB8D9E8
postgres_container  | 2024-11-05 00:27:53.587 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:27:53.587 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:27:53.599 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:28:11.162 UTC [1099] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:28:11.162 UTC [1099] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:28:19.095 UTC [27] LOG:  checkpoint complete: wrote 5144 buffers (31.4%); 0 WAL file(s) added, 18 removed, 27 recycled; write=21.052 s, sync=2.341 s, total=25.509 s; sync files=233, longest=0.388 s, average=0.011 s; distance=729537 kB, estimate=777512 kB; lsn=9B/BC1ABEE0, redo lsn=9B/983FE0C8
postgres_container  | 2024-11-05 00:28:19.095 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:28:19.095 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:28:19.095 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:28:31.946 UTC [27] LOG:  checkpoint complete: wrote 6348 buffers (38.7%); 0 WAL file(s) added, 15 removed, 33 recycled; write=10.253 s, sync=0.225 s, total=12.852 s; sync files=69, longest=0.073 s, average=0.004 s; distance=788178 kB, estimate=788178 kB; lsn=9B/E6BC8980, redo lsn=9B/C85B28F8
postgres_container  | 2024-11-05 00:28:31.947 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:28:31.947 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:28:31.947 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:28:45.421 UTC [27] LOG:  checkpoint complete: wrote 2476 buffers (15.1%); 0 WAL file(s) added, 14 removed, 29 recycled; write=8.000 s, sync=3.253 s, total=13.475 s; sync files=96, longest=1.335 s, average=0.034 s; distance=706496 kB, estimate=780009 kB; lsn=9C/15402308, redo lsn=9B/F37A29C8
postgres_container  | 2024-11-05 00:28:45.422 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:28:45.422 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:28:45.422 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:28:56.538 UTC [1121] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:28:56.538 UTC [1121] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:29:12.674 UTC [27] LOG:  checkpoint complete: wrote 588 buffers (3.6%); 0 WAL file(s) added, 23 removed, 22 recycled; write=19.296 s, sync=5.835 s, total=27.253 s; sync files=242, longest=1.963 s, average=0.025 s; distance=741792 kB, estimate=776188 kB; lsn=9C/490DA030, redo lsn=9C/20C0ABF8
postgres_container  | 2024-11-05 00:29:12.675 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 00:29:12.675 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:29:12.676 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:29:26.228 UTC [27] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 20 removed, 31 recycled; write=8.449 s, sync=2.747 s, total=13.553 s; sync files=87, longest=2.093 s, average=0.032 s; distance=826383 kB, estimate=826383 kB; lsn=9C/73135FA0, redo lsn=9C/5330EA48
postgres_container  | 2024-11-05 00:29:26.229 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:29:26.229 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:29:26.239 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:29:41.331 UTC [1143] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:29:41.331 UTC [1143] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:29:45.950 UTC [1135] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:29:45.950 UTC [1135] CONTEXT:  while scanning block 17482 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 00:29:53.706 UTC [27] LOG:  checkpoint complete: wrote 2140 buffers (13.1%); 0 WAL file(s) added, 17 removed, 27 recycled; write=22.296 s, sync=2.957 s, total=27.477 s; sync files=224, longest=1.135 s, average=0.014 s; distance=721853 kB, estimate=815930 kB; lsn=9C/A3419CB0, redo lsn=9C/7F3FE020
postgres_container  | 2024-11-05 00:29:53.706 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 00:29:53.706 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:29:53.706 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:30:06.851 UTC [27] LOG:  checkpoint complete: wrote 8420 buffers (51.4%); 0 WAL file(s) added, 18 removed, 33 recycled; write=8.579 s, sync=2.123 s, total=13.145 s; sync files=75, longest=1.361 s, average=0.029 s; distance=834439 kB, estimate=834439 kB; lsn=9C/D0616DB8, redo lsn=9C/B22DFD88
postgres_container  | 2024-11-05 00:30:06.851 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:30:06.851 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:30:06.851 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:30:18.280 UTC [27] LOG:  checkpoint complete: wrote 1231 buffers (7.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.624 s, sync=2.484 s, total=11.429 s; sync files=37, longest=0.839 s, average=0.068 s; distance=721811 kB, estimate=823176 kB; lsn=9C/FD3FE920, redo lsn=9C/DE3C4C58
postgres_container  | 2024-11-05 00:30:18.280 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:30:18.280 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:30:18.280 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:30:27.861 UTC [1164] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:30:27.861 UTC [1164] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:30:40.961 UTC [27] LOG:  checkpoint complete: wrote 164 buffers (1.0%); 0 WAL file(s) added, 9 removed, 31 recycled; write=17.535 s, sync=2.950 s, total=22.682 s; sync files=242, longest=1.521 s, average=0.013 s; distance=657009 kB, estimate=806559 kB; lsn=9D/2697DB48, redo lsn=9D/65612A0
postgres_container  | 2024-11-05 00:30:40.962 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 00:30:40.962 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:30:40.962 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:30:53.560 UTC [27] LOG:  checkpoint complete: wrote 8465 buffers (51.7%); 0 WAL file(s) added, 14 removed, 30 recycled; write=6.933 s, sync=2.958 s, total=12.598 s; sync files=106, longest=2.495 s, average=0.028 s; distance=724606 kB, estimate=798364 kB; lsn=9D/531B97C8, redo lsn=9D/32900D70
postgres_container  | 2024-11-05 00:30:53.561 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:30:53.561 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:30:53.561 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:31:09.038 UTC [1186] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:31:09.038 UTC [1186] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:31:18.777 UTC [27] LOG:  checkpoint complete: wrote 3497 buffers (21.3%); 0 WAL file(s) added, 19 removed, 27 recycled; write=19.626 s, sync=3.237 s, total=25.217 s; sync files=230, longest=1.271 s, average=0.015 s; distance=757715 kB, estimate=794299 kB; lsn=9D/84614148, redo lsn=9D/60CF5D20
postgres_container  | 2024-11-05 00:31:18.778 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 00:31:18.778 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:31:18.809 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:31:32.493 UTC [27] LOG:  checkpoint complete: wrote 8323 buffers (50.8%); 0 WAL file(s) added, 19 removed, 33 recycled; write=10.598 s, sync=0.674 s, total=13.715 s; sync files=69, longest=0.606 s, average=0.010 s; distance=842784 kB, estimate=842784 kB; lsn=9D/B28F9F48, redo lsn=9D/943FE098
postgres_container  | 2024-11-05 00:31:32.493 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:31:32.493 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:31:32.493 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:31:45.122 UTC [27] LOG:  checkpoint complete: wrote 1423 buffers (8.7%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.584 s, sync=2.644 s, total=12.630 s; sync files=91, longest=0.957 s, average=0.030 s; distance=718164 kB, estimate=830322 kB; lsn=9D/DF1F2750, redo lsn=9D/C0153348
postgres_container  | 2024-11-05 00:31:45.123 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:31:45.123 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:31:45.123 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:31:55.264 UTC [1208] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:31:55.264 UTC [1208] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:32:08.131 UTC [27] LOG:  checkpoint complete: wrote 265 buffers (1.6%); 0 WAL file(s) added, 11 removed, 30 recycled; write=18.179 s, sync=2.580 s, total=23.009 s; sync files=235, longest=1.376 s, average=0.011 s; distance=683110 kB, estimate=815601 kB; lsn=9E/A036118, redo lsn=9D/E9C6CD60
postgres_container  | 2024-11-05 00:32:08.132 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:32:08.132 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:32:08.132 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:32:21.482 UTC [27] LOG:  checkpoint complete: wrote 8318 buffers (50.8%); 0 WAL file(s) added, 16 removed, 29 recycled; write=7.500 s, sync=3.467 s, total=13.350 s; sync files=81, longest=2.820 s, average=0.043 s; distance=734108 kB, estimate=807452 kB; lsn=9E/380934B8, redo lsn=9E/16954140
postgres_container  | 2024-11-05 00:32:21.483 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:32:21.483 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:32:21.483 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:32:36.274 UTC [1230] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:32:36.274 UTC [1230] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:32:40.492 UTC [1225] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 00:32:40.492 UTC [1225] CONTEXT:  while scanning block 3851 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 00:32:47.495 UTC [27] LOG:  checkpoint complete: wrote 3847 buffers (23.5%); 0 WAL file(s) added, 19 removed, 27 recycled; write=21.437 s, sync=2.438 s, total=26.013 s; sync files=228, longest=0.786 s, average=0.011 s; distance=757520 kB, estimate=802459 kB; lsn=9E/68CBADB8, redo lsn=9E/44D18158
postgres_container  | 2024-11-05 00:32:47.496 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:32:47.496 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:32:47.496 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:33:00.689 UTC [27] LOG:  checkpoint complete: wrote 8456 buffers (51.6%); 0 WAL file(s) added, 17 removed, 33 recycled; write=8.839 s, sync=2.002 s, total=13.194 s; sync files=78, longest=1.880 s, average=0.026 s; distance=812504 kB, estimate=812504 kB; lsn=9E/946860C0, redo lsn=9E/7668E458
postgres_container  | 2024-11-05 00:33:00.690 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:33:00.690 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:33:00.690 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:33:12.689 UTC [27] LOG:  checkpoint complete: wrote 79 buffers (0.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.319 s, sync=2.253 s, total=12.000 s; sync files=17, longest=1.324 s, average=0.133 s; distance=707050 kB, estimate=801959 kB; lsn=9E/C0FA5EA0, redo lsn=9E/A1908EE8
postgres_container  | 2024-11-05 00:33:12.691 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:33:12.691 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:33:12.691 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:33:22.370 UTC [1251] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:33:22.370 UTC [1251] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:33:35.238 UTC [27] LOG:  checkpoint complete: wrote 207 buffers (1.3%); 0 WAL file(s) added, 12 removed, 31 recycled; write=17.504 s, sync=2.591 s, total=22.548 s; sync files=224, longest=1.458 s, average=0.012 s; distance=698064 kB, estimate=791569 kB; lsn=9E/EC1CE768, redo lsn=9E/CC2BCFB0
postgres_container  | 2024-11-05 00:33:35.239 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 00:33:35.239 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:33:35.239 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:33:48.445 UTC [27] LOG:  checkpoint complete: wrote 8478 buffers (51.7%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.915 s, sync=2.999 s, total=13.206 s; sync files=98, longest=2.460 s, average=0.031 s; distance=689501 kB, estimate=781362 kB; lsn=9F/15402198, redo lsn=9E/F6414588
postgres_container  | 2024-11-05 00:33:48.445 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 00:33:48.445 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:33:48.446 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:34:05.428 UTC [1273] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:34:05.428 UTC [1273] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:34:09.879 UTC [27] LOG:  checkpoint complete: wrote 4219 buffers (25.8%); 0 WAL file(s) added, 14 removed, 29 recycled; write=18.763 s, sync=1.275 s, total=21.434 s; sync files=201, longest=0.063 s, average=0.007 s; distance=714130 kB, estimate=774639 kB; lsn=9F/43652B60, redo lsn=9F/21D78E30
postgres_container  | 2024-11-05 00:34:09.880 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 00:34:09.880 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:34:09.880 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:34:21.101 UTC [27] LOG:  checkpoint complete: wrote 4803 buffers (29.3%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.314 s, sync=2.011 s, total=11.222 s; sync files=99, longest=0.696 s, average=0.021 s; distance=650995 kB, estimate=762275 kB; lsn=9F/68400108, redo lsn=9F/49935BB8
postgres_container  | 2024-11-05 00:34:21.102 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:34:21.102 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:34:21.102 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:34:33.565 UTC [27] LOG:  checkpoint complete: wrote 3561 buffers (21.7%); 0 WAL file(s) added, 12 removed, 31 recycled; write=7.059 s, sync=2.900 s, total=12.464 s; sync files=42, longest=1.728 s, average=0.070 s; distance=699043 kB, estimate=755952 kB; lsn=9F/94400298, redo lsn=9F/743DE978
postgres_container  | 2024-11-05 00:34:33.566 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:34:33.566 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:34:33.567 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:34:49.537 UTC [1295] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:34:49.537 UTC [1295] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 00:34:59.654 UTC [27] LOG:  checkpoint complete: wrote 4019 buffers (24.5%); 0 WAL file(s) added, 19 removed, 23 recycled; write=20.626 s, sync=3.631 s, total=26.088 s; sync files=248, longest=0.960 s, average=0.015 s; distance=688323 kB, estimate=749189 kB; lsn=9F/C6B0B660, redo lsn=9F/9E40F940
postgres_container  | 2024-11-05 00:34:59.654 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 00:34:59.654 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:34:59.654 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:35:13.829 UTC [27] LOG:  checkpoint complete: wrote 8318 buffers (50.8%); 0 WAL file(s) added, 20 removed, 32 recycled; write=10.775 s, sync=1.082 s, total=14.176 s; sync files=74, longest=0.971 s, average=0.015 s; distance=853075 kB, estimate=853075 kB; lsn=9F/F11B6AD8, redo lsn=9F/D2524608
postgres_container  | 2024-11-05 00:35:13.829 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 00:35:13.829 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:35:13.829 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:35:25.370 UTC [27] LOG:  checkpoint complete: wrote 1286 buffers (7.8%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.088 s, sync=2.390 s, total=11.541 s; sync files=37, longest=2.290 s, average=0.065 s; distance=720924 kB, estimate=839860 kB; lsn=A0/1CD48F90, redo lsn=9F/FE52B660
postgres_container  | 2024-11-05 00:35:25.370 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 00:35:25.370 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 00:35:25.371 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 00:35:33.512 UTC [1317] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 00:35:33.512 UTC [1317] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-05 12:18:58.145 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-05 12:18:58.146 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-05 12:18:58.146 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-05 12:18:58.245 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-05 12:18:58.346 UTC [28] LOG:  database system was interrupted; last known up at 2024-11-05 00:35:23 UTC
postgres_container  | 2024-11-05 12:18:59.084 UTC [28] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-05 12:18:59.199 UTC [28] LOG:  redo starts at 9F/FE52B660
postgres_container  | 2024-11-05 12:19:09.317 UTC [28] LOG:  redo in progress, elapsed time: 10.11 s, current LSN: A0/1CDB4D8
postgres_container  | 2024-11-05 12:19:12.074 UTC [29] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:19:12.074 UTC [29] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:19:17.458 UTC [30] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:19:17.458 UTC [30] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:19:19.237 UTC [28] LOG:  redo in progress, elapsed time: 20.03 s, current LSN: A0/56BB4F8
postgres_container  | 2024-11-05 12:19:23.778 UTC [31] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:19:23.778 UTC [31] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:19:26.799 UTC [32] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:19:26.799 UTC [32] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:19:28.198 UTC [1] LOG:  received fast shutdown request
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-05 12:19:51.715 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-05 12:19:51.716 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-05 12:19:51.716 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-05 12:19:51.783 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-05 12:19:51.834 UTC [29] LOG:  database system was interrupted while in recovery at 2024-11-05 12:18:59 UTC
postgres_container  | 2024-11-05 12:19:51.834 UTC [29] HINT:  This probably means that some data is corrupted and you will have to use the last backup for recovery.
postgres_container  | 2024-11-05 12:19:52.166 UTC [30] FATAL:  the database system is starting up
postgres_container  | 2024-11-05 12:19:55.639 UTC [31] FATAL:  the database system is starting up
postgres_container  | 2024-11-05 12:20:01.171 UTC [32] FATAL:  the database system is starting up
postgres_container  | 2024-11-05 12:20:01.856 UTC [29] LOG:  syncing data directory (fsync), elapsed time: 10.00 s, current path: ./base/5/399846
postgres_container  | 2024-11-05 12:20:03.547 UTC [33] FATAL:  the database system is starting up
postgres_container  | 2024-11-05 12:20:03.775 UTC [29] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-05 12:20:03.832 UTC [29] LOG:  redo starts at 9F/FE52B660
postgres_container  | 2024-11-05 12:20:11.020 UTC [34] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:20:11.020 UTC [34] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:20:13.864 UTC [29] LOG:  redo in progress, elapsed time: 10.03 s, current LSN: A0/721B500
postgres_container  | 2024-11-05 12:20:17.861 UTC [35] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:20:17.861 UTC [35] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:20:23.842 UTC [29] LOG:  redo in progress, elapsed time: 20.00 s, current LSN: A0/E31B508
postgres_container  | 2024-11-05 12:20:30.968 UTC [36] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:20:30.968 UTC [36] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:20:34.169 UTC [29] LOG:  redo in progress, elapsed time: 30.33 s, current LSN: A0/139FB500
postgres_container  | 2024-11-05 12:20:43.832 UTC [29] LOG:  redo in progress, elapsed time: 40.00 s, current LSN: A0/193DACF8
postgres_container  | 2024-11-05 12:20:44.324 UTC [37] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:20:44.324 UTC [37] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:20:53.841 UTC [29] LOG:  redo in progress, elapsed time: 50.00 s, current LSN: A0/1E21B4D0
postgres_container  | 2024-11-05 12:21:00.488 UTC [38] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-05 12:21:00.488 UTC [38] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-05 12:21:04.019 UTC [29] LOG:  redo in progress, elapsed time: 60.18 s, current LSN: A0/22559770
postgres_container  | 2024-11-05 12:21:06.417 UTC [29] LOG:  unexpected pageaddr 9F/D8588000 in WAL segment 00000001000000A000000022, LSN A0/22588000, offset 5799936
postgres_container  | 2024-11-05 12:21:06.417 UTC [29] LOG:  redo done at A0/22587F98 system usage: CPU: user: 5.27 s, system: 1.40 s, elapsed: 62.58 s
postgres_container  | 2024-11-05 12:21:06.675 UTC [27] LOG:  checkpoint starting: end-of-recovery immediate wait
postgres_container  | 2024-11-05 12:21:12.863 UTC [27] LOG:  checkpoint complete: wrote 16187 buffers (98.8%); 0 WAL file(s) added, 0 removed, 36 recycled; write=0.180 s, sync=5.248 s, total=6.230 s; sync files=61, longest=5.222 s, average=0.087 s; distance=590194 kB, estimate=590194 kB; lsn=A0/22588048, redo lsn=A0/22588048
postgres_container  | 2024-11-05 12:21:12.886 UTC [1] LOG:  database system is ready to accept connections
postgres_container  | 2024-11-05 12:22:30.145 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:23:31.639 UTC [27] LOG:  checkpoint complete: wrote 8270 buffers (50.5%); 0 WAL file(s) added, 1 removed, 32 recycled; write=53.594 s, sync=5.629 s, total=61.494 s; sync files=230, longest=2.362 s, average=0.025 s; distance=539096 kB, estimate=585084 kB; lsn=A0/626D7610, redo lsn=A0/433FE048
postgres_container  | 2024-11-05 12:23:31.640 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:23:45.901 UTC [27] LOG:  checkpoint complete: wrote 3234 buffers (19.7%); 0 WAL file(s) added, 5 removed, 33 recycled; write=9.961 s, sync=2.285 s, total=14.262 s; sync files=80, longest=2.211 s, average=0.029 s; distance=622143 kB, estimate=622143 kB; lsn=A0/874002A8, redo lsn=A0/6938DEB0
postgres_container  | 2024-11-05 12:23:45.902 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:23:45.902 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:23:45.902 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:24:00.162 UTC [65] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:24:00.162 UTC [65] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:24:14.078 UTC [27] LOG:  checkpoint complete: wrote 693 buffers (4.2%); 0 WAL file(s) added, 7 removed, 32 recycled; write=23.326 s, sync=2.598 s, total=28.177 s; sync files=234, longest=1.455 s, average=0.012 s; distance=636536 kB, estimate=636536 kB; lsn=A0/AF82E918, redo lsn=A0/9012C048
postgres_container  | 2024-11-05 12:24:14.080 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 12:24:14.080 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:24:14.080 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:24:28.252 UTC [27] LOG:  checkpoint complete: wrote 8324 buffers (50.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=11.071 s, sync=0.246 s, total=14.173 s; sync files=70, longest=0.076 s, average=0.004 s; distance=707008 kB, estimate=707008 kB; lsn=A0/D9C88FB0, redo lsn=A0/BB39C418
postgres_container  | 2024-11-05 12:24:28.253 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:24:28.253 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:24:28.253 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:24:42.575 UTC [27] LOG:  checkpoint complete: wrote 3461 buffers (21.1%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.859 s, sync=2.607 s, total=14.323 s; sync files=49, longest=2.162 s, average=0.054 s; distance=700177 kB, estimate=706325 kB; lsn=A1/55CA038, redo lsn=A0/E5F60A10
postgres_container  | 2024-11-05 12:24:49.257 UTC [87] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:24:49.257 UTC [87] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:24:53.215 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:24:53.215 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:24:53.215 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:25:05.918 UTC [27] LOG:  checkpoint complete: wrote 1189 buffers (7.3%); 0 WAL file(s) added, 5 removed, 28 recycled; write=5.943 s, sync=4.408 s, total=12.704 s; sync files=260, longest=1.152 s, average=0.017 s; distance=524956 kB, estimate=688188 kB; lsn=A1/290EB1C8, redo lsn=A1/6007A20
postgres_container  | 2024-11-05 12:25:05.919 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:25:05.919 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:25:05.919 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:25:20.258 UTC [27] LOG:  checkpoint complete: wrote 7291 buffers (44.5%); 0 WAL file(s) added, 14 removed, 31 recycled; write=8.789 s, sync=2.743 s, total=14.339 s; sync files=53, longest=1.890 s, average=0.052 s; distance=739730 kB, estimate=739730 kB; lsn=A1/53402058, redo lsn=A1/3326C2B0
postgres_container  | 2024-11-05 12:25:20.259 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:25:20.259 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:25:20.259 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:25:39.882 UTC [109] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:25:39.882 UTC [109] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:25:47.490 UTC [104] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:25:47.490 UTC [104] CONTEXT:  while scanning block 9473 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 12:25:55.957 UTC [27] LOG:  checkpoint complete: wrote 2276 buffers (13.9%); 0 WAL file(s) added, 18 removed, 26 recycled; write=30.101 s, sync=3.354 s, total=35.698 s; sync files=223, longest=0.675 s, average=0.016 s; distance=731263 kB, estimate=738883 kB; lsn=A1/846F9398, redo lsn=A1/5FC8C1A0
postgres_container  | 2024-11-05 12:25:55.962 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:26:10.961 UTC [27] LOG:  checkpoint complete: wrote 6441 buffers (39.3%); 0 WAL file(s) added, 16 removed, 32 recycled; write=12.037 s, sync=0.618 s, total=15.005 s; sync files=77, longest=0.444 s, average=0.009 s; distance=779274 kB, estimate=779274 kB; lsn=A1/AE400788, redo lsn=A1/8F58EAB0
postgres_container  | 2024-11-05 12:26:10.962 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:26:10.962 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:26:10.971 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:26:24.198 UTC [27] LOG:  checkpoint complete: wrote 2025 buffers (12.4%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.495 s, sync=2.181 s, total=13.236 s; sync files=35, longest=1.110 s, average=0.063 s; distance=686525 kB, estimate=769999 kB; lsn=A1/D74DF840, redo lsn=A1/B93FE198
postgres_container  | 2024-11-05 12:26:24.199 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:26:24.199 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:26:24.199 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:26:36.914 UTC [131] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:26:36.914 UTC [131] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:26:38.519 UTC [128] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 12:26:38.519 UTC [128] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 12:26:38.564 UTC [128] LOG:  skipping analyze of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping analyze of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 12:26:38.592 UTC [128] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 12:26:52.584 UTC [27] LOG:  checkpoint complete: wrote 1067 buffers (6.5%); 0 WAL file(s) added, 18 removed, 23 recycled; write=20.310 s, sync=5.856 s, total=28.385 s; sync files=225, longest=1.603 s, average=0.027 s; distance=675269 kB, estimate=760526 kB; lsn=A2/A400138, redo lsn=A1/E276F5B0
postgres_container  | 2024-11-05 12:26:52.585 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:26:52.585 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:26:52.585 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:27:08.698 UTC [27] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 20 removed, 30 recycled; write=9.440 s, sync=3.667 s, total=16.114 s; sync files=89, longest=2.658 s, average=0.042 s; distance=825467 kB, estimate=825467 kB; lsn=A2/35977C90, redo lsn=A2/14D8E1F0
postgres_container  | 2024-11-05 12:27:08.699 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 12:27:08.699 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:27:08.699 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:27:28.683 UTC [152] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:27:28.683 UTC [152] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:27:38.971 UTC [27] LOG:  checkpoint complete: wrote 1635 buffers (10.0%); 0 WAL file(s) added, 20 removed, 26 recycled; write=24.023 s, sync=3.860 s, total=30.272 s; sync files=226, longest=1.395 s, average=0.018 s; distance=752927 kB, estimate=818213 kB; lsn=A2/6714CBE0, redo lsn=A2/42CD5FA0
postgres_container  | 2024-11-05 12:27:38.971 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:27:53.347 UTC [27] LOG:  checkpoint complete: wrote 6506 buffers (39.7%); 0 WAL file(s) added, 14 removed, 33 recycled; write=9.004 s, sync=2.970 s, total=14.376 s; sync files=91, longest=1.586 s, average=0.033 s; distance=759495 kB, estimate=812341 kB; lsn=A2/8FC02908, redo lsn=A2/71287F48
postgres_container  | 2024-11-05 12:27:53.348 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:27:53.348 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:27:53.348 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:28:06.135 UTC [27] LOG:  checkpoint complete: wrote 2027 buffers (12.4%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.516 s, sync=2.630 s, total=12.788 s; sync files=37, longest=2.344 s, average=0.072 s; distance=683454 kB, estimate=799452 kB; lsn=A2/B98FA050, redo lsn=A2/9ADF7978
postgres_container  | 2024-11-05 12:28:06.136 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:28:06.136 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:28:06.136 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:28:19.709 UTC [174] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:28:19.709 UTC [174] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:28:36.403 UTC [27] LOG:  checkpoint complete: wrote 1268 buffers (7.7%); 0 WAL file(s) added, 20 removed, 22 recycled; write=21.585 s, sync=6.623 s, total=30.267 s; sync files=222, longest=1.717 s, average=0.030 s; distance=684375 kB, estimate=787944 kB; lsn=A2/ED402128, redo lsn=A2/C4A4D650
postgres_container  | 2024-11-05 12:28:36.404 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:28:52.877 UTC [27] LOG:  checkpoint complete: wrote 8430 buffers (51.5%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.899 s, sync=2.989 s, total=16.473 s; sync files=98, longest=2.812 s, average=0.031 s; distance=803185 kB, estimate=803185 kB; lsn=A3/14C53430, redo lsn=A2/F5AA9A70
postgres_container  | 2024-11-05 12:28:52.877 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 12:28:52.877 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:28:52.877 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:29:13.145 UTC [196] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:29:13.145 UTC [196] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:29:20.150 UTC [27] LOG:  checkpoint complete: wrote 4152 buffers (25.3%); 0 WAL file(s) added, 18 removed, 28 recycled; write=22.988 s, sync=2.261 s, total=27.273 s; sync files=243, longest=0.321 s, average=0.010 s; distance=750930 kB, estimate=797959 kB; lsn=A3/46F526B0, redo lsn=A3/237FE480
postgres_container  | 2024-11-05 12:29:20.151 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:29:20.151 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:29:20.151 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:29:33.671 UTC [27] LOG:  checkpoint complete: wrote 6191 buffers (37.8%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.879 s, sync=1.314 s, total=13.520 s; sync files=74, longest=1.122 s, average=0.018 s; distance=736741 kB, estimate=791837 kB; lsn=A3/6F2A7248, redo lsn=A3/50777C20
postgres_container  | 2024-11-05 12:29:33.672 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:29:33.672 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:29:33.672 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:29:47.773 UTC [27] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.902 s, sync=2.464 s, total=14.101 s; sync files=71, longest=1.712 s, average=0.035 s; distance=683552 kB, estimate=781009 kB; lsn=A3/994020A8, redo lsn=A3/7A2FFF20
postgres_container  | 2024-11-05 12:29:47.773 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:29:47.773 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:29:47.773 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:30:04.301 UTC [218] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:30:04.301 UTC [218] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:30:20.809 UTC [27] LOG:  checkpoint complete: wrote 3048 buffers (18.6%); 0 WAL file(s) added, 19 removed, 22 recycled; write=24.358 s, sync=6.911 s, total=33.037 s; sync files=253, longest=1.767 s, average=0.028 s; distance=675400 kB, estimate=770448 kB; lsn=A3/CC4004E0, redo lsn=A3/A3692030
postgres_container  | 2024-11-05 12:30:20.832 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:30:35.878 UTC [27] LOG:  checkpoint complete: wrote 8340 buffers (50.9%); 0 WAL file(s) added, 17 removed, 31 recycled; write=8.594 s, sync=4.127 s, total=15.068 s; sync files=76, longest=3.904 s, average=0.055 s; distance=794448 kB, estimate=794448 kB; lsn=A3/F34126C8, redo lsn=A3/D3E661F0
postgres_container  | 2024-11-05 12:30:35.878 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:30:35.878 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:30:35.879 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:30:50.009 UTC [27] LOG:  checkpoint complete: wrote 3163 buffers (19.3%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.366 s, sync=4.148 s, total=14.131 s; sync files=91, longest=1.719 s, average=0.046 s; distance=689634 kB, estimate=783967 kB; lsn=A4/1D5D4888, redo lsn=A3/FDFDECF0
postgres_container  | 2024-11-05 12:30:50.009 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:30:50.009 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:30:50.009 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:30:59.604 UTC [240] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:30:59.604 UTC [240] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:31:15.037 UTC [27] LOG:  checkpoint complete: wrote 339 buffers (2.1%); 0 WAL file(s) added, 8 removed, 28 recycled; write=18.023 s, sync=4.993 s, total=25.028 s; sync files=239, longest=1.669 s, average=0.021 s; distance=589561 kB, estimate=764526 kB; lsn=A4/445D40F0, redo lsn=A4/21F9D4C0
postgres_container  | 2024-11-05 12:31:15.038 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:31:15.038 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:31:15.038 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:31:28.020 UTC [27] LOG:  checkpoint complete: wrote 8324 buffers (50.8%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.070 s, sync=2.514 s, total=12.983 s; sync files=78, longest=2.039 s, average=0.033 s; distance=702240 kB, estimate=758297 kB; lsn=A4/6CD46C70, redo lsn=A4/4CD657D8
postgres_container  | 2024-11-05 12:31:28.020 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:31:28.020 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:31:28.020 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:31:46.287 UTC [262] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:31:46.287 UTC [262] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:31:50.354 UTC [252] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:31:50.354 UTC [252] CONTEXT:  while scanning block 17443 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 12:31:53.804 UTC [27] LOG:  checkpoint complete: wrote 3526 buffers (21.5%); 0 WAL file(s) added, 13 removed, 29 recycled; write=22.804 s, sync=1.383 s, total=25.784 s; sync files=204, longest=0.081 s, average=0.007 s; distance=687595 kB, estimate=751227 kB; lsn=A4/98400128, redo lsn=A4/76CE0778
postgres_container  | 2024-11-05 12:31:53.805 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:31:53.805 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:31:53.805 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:32:06.542 UTC [27] LOG:  checkpoint complete: wrote 4556 buffers (27.8%); 0 WAL file(s) added, 8 removed, 31 recycled; write=6.801 s, sync=3.514 s, total=12.738 s; sync files=101, longest=1.818 s, average=0.035 s; distance=641551 kB, estimate=740260 kB; lsn=A4/BD5C2170, redo lsn=A4/9DF64718
postgres_container  | 2024-11-05 12:32:06.543 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:32:06.543 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:32:06.544 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:32:19.361 UTC [27] LOG:  checkpoint complete: wrote 3919 buffers (23.9%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.319 s, sync=3.490 s, total=12.818 s; sync files=42, longest=2.236 s, average=0.084 s; distance=705617 kB, estimate=736795 kB; lsn=A4/E89CD860, redo lsn=A4/C9078B70
postgres_container  | 2024-11-05 12:32:19.362 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:32:19.362 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:32:19.362 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:32:38.182 UTC [284] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:32:38.182 UTC [284] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:32:41.650 UTC [279] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:32:41.650 UTC [279] CONTEXT:  while scanning block 6216 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 12:32:42.650 UTC [279] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:32:42.650 UTC [279] CONTEXT:  while scanning block 3976 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 12:32:42.659 UTC [279] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 12:32:42.659 UTC [279] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 12:32:42.659 UTC [279] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 12:32:42.659 UTC [279] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 12:32:42.660 UTC [279] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 12:32:42.660 UTC [279] LOG:  skipping vacuum of "pg_toast_409044" --- lock not available
postgres_container  | 2024-11-05 12:32:49.816 UTC [27] LOG:  checkpoint complete: wrote 2132 buffers (13.0%); 0 WAL file(s) added, 12 removed, 26 recycled; write=25.759 s, sync=3.013 s, total=30.454 s; sync files=230, longest=0.942 s, average=0.014 s; distance=625256 kB, estimate=725641 kB; lsn=A5/14179078, redo lsn=A4/EF312BD0
postgres_container  | 2024-11-05 12:32:49.817 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:33:03.177 UTC [27] LOG:  checkpoint complete: wrote 6413 buffers (39.1%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.329 s, sync=2.189 s, total=13.361 s; sync files=77, longest=1.333 s, average=0.029 s; distance=737231 kB, estimate=737231 kB; lsn=A5/3B2BD968, redo lsn=A5/1C306968
postgres_container  | 2024-11-05 12:33:03.178 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:33:03.178 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:33:03.178 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:33:16.210 UTC [27] LOG:  checkpoint complete: wrote 1223 buffers (7.5%); 0 WAL file(s) added, 11 removed, 33 recycled; write=9.278 s, sync=1.352 s, total=13.033 s; sync files=36, longest=1.095 s, average=0.038 s; distance=721885 kB, estimate=735696 kB; lsn=A5/668A8B38, redo lsn=A5/483FE030
postgres_container  | 2024-11-05 12:33:16.211 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:33:16.211 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:33:16.211 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:33:28.432 UTC [305] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:33:28.432 UTC [305] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:33:44.607 UTC [27] LOG:  checkpoint complete: wrote 1434 buffers (8.8%); 0 WAL file(s) added, 11 removed, 29 recycled; write=19.798 s, sync=6.510 s, total=28.397 s; sync files=224, longest=2.435 s, average=0.029 s; distance=664243 kB, estimate=728551 kB; lsn=A5/927A16C0, redo lsn=A5/70CAAF58
postgres_container  | 2024-11-05 12:33:44.608 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:33:44.608 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:33:44.608 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:33:58.174 UTC [27] LOG:  checkpoint complete: wrote 8530 buffers (52.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.615 s, sync=0.442 s, total=13.566 s; sync files=100, longest=0.279 s, average=0.005 s; distance=687196 kB, estimate=724415 kB; lsn=A5/B9425A78, redo lsn=A5/9ABC1F98
postgres_container  | 2024-11-05 12:33:58.174 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:33:58.174 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:33:58.174 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:34:11.589 UTC [27] LOG:  checkpoint complete: wrote 3077 buffers (18.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.754 s, sync=2.403 s, total=13.415 s; sync files=49, longest=1.960 s, average=0.050 s; distance=696480 kB, estimate=721622 kB; lsn=A5/E44023F0, redo lsn=A5/C53EA060
postgres_container  | 2024-11-05 12:34:11.589 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:34:11.589 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:34:11.590 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:34:19.795 UTC [327] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:34:19.795 UTC [327] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:34:34.700 UTC [27] LOG:  checkpoint complete: wrote 211 buffers (1.3%); 0 WAL file(s) added, 8 removed, 27 recycled; write=16.233 s, sync=5.169 s, total=23.111 s; sync files=228, longest=1.418 s, average=0.023 s; distance=583608 kB, estimate=707820 kB; lsn=A6/C402078, redo lsn=A5/E8DD8180
postgres_container  | 2024-11-05 12:34:34.701 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:34:34.701 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:34:34.701 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:34:47.414 UTC [27] LOG:  checkpoint complete: wrote 8337 buffers (50.9%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.156 s, sync=2.211 s, total=12.714 s; sync files=88, longest=1.984 s, average=0.026 s; distance=710860 kB, estimate=710860 kB; lsn=A6/32E67060, redo lsn=A6/1440B250
postgres_container  | 2024-11-05 12:34:47.415 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:34:47.415 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:34:47.415 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:35:06.448 UTC [349] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:35:06.448 UTC [349] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:35:06.892 UTC [27] LOG:  checkpoint complete: wrote 4642 buffers (28.3%); 0 WAL file(s) added, 7 removed, 34 recycled; write=12.278 s, sync=4.220 s, total=19.478 s; sync files=118, longest=3.869 s, average=0.036 s; distance=668738 kB, estimate=706648 kB; lsn=A6/5AA85698, redo lsn=A6/3D11BBD8
postgres_container  | 2024-11-05 12:35:10.424 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:35:10.424 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:35:10.424 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:35:24.177 UTC [27] LOG:  checkpoint complete: wrote 3782 buffers (23.1%); 0 WAL file(s) added, 6 removed, 27 recycled; write=5.336 s, sync=5.525 s, total=13.754 s; sync files=233, longest=1.247 s, average=0.024 s; distance=540276 kB, estimate=690010 kB; lsn=A6/82FCE410, redo lsn=A6/5E0B8EF8
postgres_container  | 2024-11-05 12:35:24.178 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:35:24.178 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:35:24.179 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:35:36.860 UTC [27] LOG:  checkpoint complete: wrote 4583 buffers (28.0%); 0 WAL file(s) added, 15 removed, 32 recycled; write=7.805 s, sync=2.393 s, total=12.682 s; sync files=42, longest=1.456 s, average=0.057 s; distance=776535 kB, estimate=776535 kB; lsn=A6/AC402338, redo lsn=A6/8D70EDC8
postgres_container  | 2024-11-05 12:35:36.861 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:35:36.861 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:35:36.861 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:35:51.561 UTC [371] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:35:51.561 UTC [371] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:36:04.437 UTC [27] LOG:  checkpoint complete: wrote 4005 buffers (24.4%); 0 WAL file(s) added, 15 removed, 26 recycled; write=22.342 s, sync=3.334 s, total=27.577 s; sync files=254, longest=0.975 s, average=0.014 s; distance=669884 kB, estimate=765870 kB; lsn=A6/DBE2C2A8, redo lsn=A6/B653DF48
postgres_container  | 2024-11-05 12:36:04.438 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:36:04.438 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:36:04.438 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:36:18.753 UTC [27] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 16 removed, 33 recycled; write=9.137 s, sync=2.788 s, total=14.316 s; sync files=75, longest=2.679 s, average=0.038 s; distance=798632 kB, estimate=798632 kB; lsn=A7/5589E28, redo lsn=A6/E7128158
postgres_container  | 2024-11-05 12:36:18.754 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:36:18.754 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:36:18.782 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:36:31.072 UTC [27] LOG:  checkpoint complete: wrote 47 buffers (0.3%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.185 s, sync=3.000 s, total=12.319 s; sync files=17, longest=1.712 s, average=0.177 s; distance=696327 kB, estimate=788402 kB; lsn=A7/304022A0, redo lsn=A7/1192A080
postgres_container  | 2024-11-05 12:36:31.073 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:36:31.073 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:36:31.104 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:36:42.401 UTC [393] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:36:42.401 UTC [393] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:36:46.151 UTC [388] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:36:46.151 UTC [388] CONTEXT:  while scanning block 17252 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 12:36:47.151 UTC [388] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:36:47.151 UTC [388] CONTEXT:  while scanning block 3967 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 12:36:47.157 UTC [388] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 12:36:57.818 UTC [27] LOG:  checkpoint complete: wrote 564 buffers (3.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=22.089 s, sync=2.782 s, total=26.745 s; sync files=221, longest=1.104 s, average=0.013 s; distance=678592 kB, estimate=777421 kB; lsn=A7/5A70B6A0, redo lsn=A7/3AFDA0D0
postgres_container  | 2024-11-05 12:36:57.820 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 12:36:57.820 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:36:57.851 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:37:10.409 UTC [27] LOG:  checkpoint complete: wrote 8467 buffers (51.7%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.840 s, sync=2.182 s, total=12.590 s; sync files=75, longest=2.079 s, average=0.030 s; distance=664479 kB, estimate=766126 kB; lsn=A7/82032D60, redo lsn=A7/638C2058
postgres_container  | 2024-11-05 12:37:10.410 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:37:10.410 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:37:10.410 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:37:21.078 UTC [27] LOG:  checkpoint complete: wrote 1709 buffers (10.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.189 s, sync=1.615 s, total=10.668 s; sync files=36, longest=1.495 s, average=0.045 s; distance=666947 kB, estimate=756208 kB; lsn=A7/AA95E9D0, redo lsn=A7/8C412C80
postgres_container  | 2024-11-05 12:37:21.079 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 12:37:21.079 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:37:21.079 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:37:30.888 UTC [414] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:37:30.888 UTC [414] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:37:44.378 UTC [27] LOG:  checkpoint complete: wrote 227 buffers (1.4%); 0 WAL file(s) added, 6 removed, 29 recycled; write=18.392 s, sync=3.121 s, total=23.299 s; sync files=238, longest=1.305 s, average=0.014 s; distance=582664 kB, estimate=738854 kB; lsn=A7/D18B0C48, redo lsn=A7/AFD15020
postgres_container  | 2024-11-05 12:37:44.378 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:37:44.378 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:37:44.378 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:37:56.456 UTC [27] LOG:  checkpoint complete: wrote 8425 buffers (51.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.424 s, sync=2.483 s, total=12.078 s; sync files=90, longest=2.367 s, average=0.028 s; distance=689714 kB, estimate=733940 kB; lsn=A7/F853C750, redo lsn=A7/D9EA1A18
postgres_container  | 2024-11-05 12:37:56.456 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:37:56.456 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:37:56.456 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:38:13.918 UTC [27] LOG:  checkpoint complete: wrote 2531 buffers (15.4%); 0 WAL file(s) added, 6 removed, 33 recycled; write=15.057 s, sync=0.139 s, total=17.462 s; sync files=39, longest=0.104 s, average=0.004 s; distance=626209 kB, estimate=723167 kB; lsn=A8/1E291E50, redo lsn=A8/22A1E0
postgres_container  | 2024-11-05 12:38:13.918 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 12:38:13.918 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:38:13.919 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:38:27.496 UTC [436] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:38:27.496 UTC [436] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:38:44.334 UTC [27] LOG:  checkpoint complete: wrote 120 buffers (0.7%); 0 WAL file(s) added, 9 removed, 24 recycled; write=21.710 s, sync=6.534 s, total=30.415 s; sync files=230, longest=1.978 s, average=0.029 s; distance=546601 kB, estimate=705510 kB; lsn=A8/48ED62C0, redo lsn=A8/217F4928
postgres_container  | 2024-11-05 12:38:44.367 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:38:59.909 UTC [27] LOG:  checkpoint complete: wrote 8428 buffers (51.4%); 0 WAL file(s) added, 17 removed, 31 recycled; write=11.855 s, sync=1.117 s, total=15.575 s; sync files=111, longest=0.317 s, average=0.011 s; distance=782394 kB, estimate=782394 kB; lsn=A8/714004E8, redo lsn=A8/51403388
postgres_container  | 2024-11-05 12:38:59.910 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:38:59.910 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:38:59.910 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:39:20.339 UTC [458] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:39:20.339 UTC [458] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:39:29.595 UTC [27] LOG:  checkpoint complete: wrote 5130 buffers (31.3%); 0 WAL file(s) added, 17 removed, 26 recycled; write=24.761 s, sync=2.880 s, total=29.685 s; sync files=232, longest=0.580 s, average=0.013 s; distance=703350 kB, estimate=774490 kB; lsn=A8/A13FF1B0, redo lsn=A8/7C2E0EF0
postgres_container  | 2024-11-05 12:39:29.596 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:39:44.704 UTC [27] LOG:  checkpoint complete: wrote 8188 buffers (50.0%); 0 WAL file(s) added, 17 removed, 31 recycled; write=9.789 s, sync=2.966 s, total=15.109 s; sync files=80, longest=2.524 s, average=0.038 s; distance=795290 kB, estimate=795290 kB; lsn=A8/CC402130, redo lsn=A8/ACB87790
postgres_container  | 2024-11-05 12:39:44.704 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:39:44.704 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:39:44.705 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:39:58.794 UTC [27] LOG:  checkpoint complete: wrote 2834 buffers (17.3%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.169 s, sync=1.278 s, total=14.090 s; sync files=102, longest=0.992 s, average=0.013 s; distance=680448 kB, estimate=783805 kB; lsn=A8/F51362E8, redo lsn=A8/D6407818
postgres_container  | 2024-11-05 12:39:58.795 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:39:58.795 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:39:58.795 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:40:10.706 UTC [480] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:40:10.706 UTC [480] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:40:31.851 UTC [27] LOG:  checkpoint complete: wrote 1669 buffers (10.2%); 0 WAL file(s) added, 11 removed, 29 recycled; write=22.890 s, sync=4.331 s, total=33.057 s; sync files=234, longest=0.930 s, average=0.019 s; distance=656786 kB, estimate=771104 kB; lsn=A9/1F15A0E8, redo lsn=A8/FE56C2B8
postgres_container  | 2024-11-05 12:40:31.852 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:41:01.468 UTC [27] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 17 removed, 29 recycled; write=19.830 s, sync=5.331 s, total=29.616 s; sync files=91, longest=1.332 s, average=0.059 s; distance=762715 kB, estimate=770265 kB; lsn=A9/4EADB880, redo lsn=A9/2CE430E0
postgres_container  | 2024-11-05 12:41:01.522 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:41:31.152 UTC [502] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:41:31.152 UTC [502] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:41:41.175 UTC [27] LOG:  checkpoint complete: wrote 4682 buffers (28.6%); 0 WAL file(s) added, 17 removed, 29 recycled; write=31.902 s, sync=4.391 s, total=39.707 s; sync files=249, longest=2.424 s, average=0.018 s; distance=743173 kB, estimate=767556 kB; lsn=A9/7C83C978, redo lsn=A9/5A404770
postgres_container  | 2024-11-05 12:41:41.197 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:41:54.178 UTC [27] LOG:  checkpoint complete: wrote 6245 buffers (38.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.990 s, sync=1.948 s, total=13.002 s; sync files=104, longest=1.664 s, average=0.019 s; distance=688103 kB, estimate=759610 kB; lsn=A9/A3249AB0, redo lsn=A9/843FE3E8
postgres_container  | 2024-11-05 12:41:54.179 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:41:54.179 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:41:54.179 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:42:06.734 UTC [27] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.548 s, sync=2.867 s, total=12.555 s; sync files=39, longest=1.688 s, average=0.074 s; distance=663357 kB, estimate=749985 kB; lsn=A9/CCA82A88, redo lsn=A9/ACBCDB00
postgres_container  | 2024-11-05 12:42:06.735 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:42:06.735 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:42:06.735 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:42:20.879 UTC [524] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:42:20.879 UTC [524] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:42:33.314 UTC [27] LOG:  checkpoint complete: wrote 3919 buffers (23.9%); 0 WAL file(s) added, 18 removed, 24 recycled; write=20.469 s, sync=3.937 s, total=26.579 s; sync files=223, longest=1.371 s, average=0.018 s; distance=679713 kB, estimate=742958 kB; lsn=A9/FD4020F0, redo lsn=A9/D63961A8
postgres_container  | 2024-11-05 12:42:33.315 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 12:42:33.315 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:42:33.315 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:42:48.531 UTC [27] LOG:  checkpoint complete: wrote 8317 buffers (50.8%); 0 WAL file(s) added, 19 removed, 29 recycled; write=8.740 s, sync=3.633 s, total=15.216 s; sync files=90, longest=2.730 s, average=0.041 s; distance=796060 kB, estimate=796060 kB; lsn=AA/284040D8, redo lsn=AA/6CFD3F8
postgres_container  | 2024-11-05 12:42:48.531 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:42:48.531 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:42:48.558 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:43:03.949 UTC [27] LOG:  checkpoint complete: wrote 3371 buffers (20.6%); 0 WAL file(s) added, 14 removed, 32 recycled; write=10.192 s, sync=2.276 s, total=15.418 s; sync files=103, longest=1.957 s, average=0.023 s; distance=749608 kB, estimate=791415 kB; lsn=AA/53B9C990, redo lsn=AA/349077C0
postgres_container  | 2024-11-05 12:43:03.950 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:43:03.950 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:43:03.950 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:43:13.298 UTC [546] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:43:13.298 UTC [546] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:43:26.946 UTC [27] LOG:  checkpoint complete: wrote 309 buffers (1.9%); 0 WAL file(s) added, 7 removed, 31 recycled; write=18.006 s, sync=2.613 s, total=22.996 s; sync files=235, longest=1.438 s, average=0.012 s; distance=618294 kB, estimate=774103 kB; lsn=AA/7A400790, redo lsn=AA/5A4D50B8
postgres_container  | 2024-11-05 12:43:26.947 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:43:26.947 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:43:26.993 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:43:39.606 UTC [27] LOG:  checkpoint complete: wrote 8326 buffers (50.8%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.649 s, sync=0.795 s, total=12.659 s; sync files=67, longest=0.677 s, average=0.012 s; distance=692739 kB, estimate=765966 kB; lsn=AA/A2A216E8, redo lsn=AA/849560A0
postgres_container  | 2024-11-05 12:43:39.606 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:43:39.606 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:43:39.630 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:43:52.627 UTC [27] LOG:  checkpoint complete: wrote 4647 buffers (28.4%); 0 WAL file(s) added, 6 removed, 33 recycled; write=8.779 s, sync=2.115 s, total=13.021 s; sync files=94, longest=1.950 s, average=0.023 s; distance=630588 kB, estimate=752429 kB; lsn=AA/C9CFCB68, redo lsn=AA/AB1250C0
postgres_container  | 2024-11-05 12:43:52.627 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:43:52.627 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:43:52.627 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:44:01.404 UTC [568] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:44:01.404 UTC [568] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:44:17.668 UTC [27] LOG:  checkpoint complete: wrote 276 buffers (1.7%); 0 WAL file(s) added, 9 removed, 24 recycled; write=16.696 s, sync=6.095 s, total=25.041 s; sync files=238, longest=1.960 s, average=0.026 s; distance=541167 kB, estimate=731302 kB; lsn=AA/F3400150, redo lsn=AA/CC1A0D38
postgres_container  | 2024-11-05 12:44:17.669 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:44:17.669 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:44:17.669 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:44:32.775 UTC [27] LOG:  checkpoint complete: wrote 8325 buffers (50.8%); 0 WAL file(s) added, 18 removed, 31 recycled; write=9.707 s, sync=2.981 s, total=15.107 s; sync files=82, longest=1.758 s, average=0.037 s; distance=804953 kB, estimate=804953 kB; lsn=AB/1DA42928, redo lsn=AA/FD3B74E8
postgres_container  | 2024-11-05 12:44:32.776 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:44:32.776 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:44:32.776 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:44:47.934 UTC [590] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:44:47.934 UTC [590] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:45:03.211 UTC [27] LOG:  checkpoint complete: wrote 4135 buffers (25.2%); 0 WAL file(s) added, 19 removed, 24 recycled; write=24.755 s, sync=3.358 s, total=30.436 s; sync files=232, longest=1.008 s, average=0.015 s; distance=714738 kB, estimate=795932 kB; lsn=AB/4EBA51E8, redo lsn=AB/28DB3DB8
postgres_container  | 2024-11-05 12:45:03.211 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:45:17.743 UTC [27] LOG:  checkpoint complete: wrote 8419 buffers (51.4%); 0 WAL file(s) added, 18 removed, 32 recycled; write=11.512 s, sync=0.415 s, total=14.532 s; sync files=77, longest=0.394 s, average=0.006 s; distance=817216 kB, estimate=817216 kB; lsn=AB/794002C8, redo lsn=AB/5ABC4110
postgres_container  | 2024-11-05 12:45:17.744 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:45:17.744 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:45:17.744 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:45:30.762 UTC [27] LOG:  checkpoint complete: wrote 596 buffers (3.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.838 s, sync=2.406 s, total=13.019 s; sync files=18, longest=1.374 s, average=0.134 s; distance=690058 kB, estimate=804501 kB; lsn=AB/A3402360, redo lsn=AB/84DA6B28
postgres_container  | 2024-11-05 12:45:30.763 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:45:30.763 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:45:30.763 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:45:41.408 UTC [612] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:45:41.408 UTC [612] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:45:44.200 UTC [607] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:45:44.200 UTC [607] CONTEXT:  while scanning block 17510 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 12:45:45.200 UTC [607] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:45:45.200 UTC [607] CONTEXT:  while scanning block 3976 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-05 12:45:56.632 UTC [27] LOG:  checkpoint complete: wrote 341 buffers (2.1%); 0 WAL file(s) added, 11 removed, 31 recycled; write=20.750 s, sync=3.005 s, total=25.870 s; sync files=226, longest=0.916 s, average=0.014 s; distance=674983 kB, estimate=791549 kB; lsn=AB/CECE91A0, redo lsn=AB/AE0D07E8
postgres_container  | 2024-11-05 12:45:56.633 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 12:45:56.633 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:45:56.634 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:46:08.439 UTC [27] LOG:  checkpoint complete: wrote 8432 buffers (51.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.808 s, sync=2.515 s, total=11.806 s; sync files=73, longest=0.357 s, average=0.035 s; distance=694362 kB, estimate=781830 kB; lsn=AB/F7402338, redo lsn=AB/D86E7090
postgres_container  | 2024-11-05 12:46:08.440 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:46:08.440 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:46:08.440 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:46:19.980 UTC [27] LOG:  checkpoint complete: wrote 2828 buffers (17.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.702 s, sync=2.031 s, total=11.540 s; sync files=36, longest=1.951 s, average=0.057 s; distance=687657 kB, estimate=772413 kB; lsn=AC/204022D0, redo lsn=AC/2671750
postgres_container  | 2024-11-05 12:46:28.584 UTC [633] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:46:28.584 UTC [633] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:46:31.065 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:46:31.065 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:46:31.065 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:46:43.526 UTC [27] LOG:  checkpoint complete: wrote 3729 buffers (22.8%); 0 WAL file(s) added, 3 removed, 30 recycled; write=6.599 s, sync=3.366 s, total=12.462 s; sync files=252, longest=1.298 s, average=0.014 s; distance=534951 kB, estimate=748667 kB; lsn=AC/44801448, redo lsn=AC/230DB468
postgres_container  | 2024-11-05 12:46:43.526 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:46:43.526 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:46:43.526 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:46:58.832 UTC [27] LOG:  checkpoint complete: wrote 8404 buffers (51.3%); 0 WAL file(s) added, 12 removed, 31 recycled; write=11.743 s, sync=1.017 s, total=15.306 s; sync files=101, longest=0.198 s, average=0.011 s; distance=718416 kB, estimate=745641 kB; lsn=AC/6EB5E340, redo lsn=AC/4EE6F618
postgres_container  | 2024-11-05 12:46:58.833 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:46:58.833 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:46:58.833 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:47:15.374 UTC [655] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:47:15.374 UTC [655] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:47:23.576 UTC [27] LOG:  checkpoint complete: wrote 3715 buffers (22.7%); 0 WAL file(s) added, 15 removed, 27 recycled; write=20.332 s, sync=2.253 s, total=24.743 s; sync files=231, longest=0.271 s, average=0.010 s; distance=687867 kB, estimate=739864 kB; lsn=AC/9C4001B8, redo lsn=AC/78E2E548
postgres_container  | 2024-11-05 12:47:23.577 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:47:23.577 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:47:23.577 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:47:36.483 UTC [27] LOG:  checkpoint complete: wrote 6333 buffers (38.7%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.785 s, sync=1.808 s, total=12.907 s; sync files=69, longest=1.715 s, average=0.027 s; distance=737420 kB, estimate=739620 kB; lsn=AC/C4729A70, redo lsn=AC/A5E51870
postgres_container  | 2024-11-05 12:47:36.484 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:47:36.484 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:47:36.484 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:47:50.589 UTC [27] LOG:  checkpoint complete: wrote 3071 buffers (18.7%); 0 WAL file(s) added, 10 removed, 31 recycled; write=10.460 s, sync=0.838 s, total=14.106 s; sync files=99, longest=0.217 s, average=0.009 s; distance=670658 kB, estimate=732723 kB; lsn=AC/EE621D10, redo lsn=AC/CED42138
postgres_container  | 2024-11-05 12:47:50.590 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:47:50.590 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:47:50.590 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:48:05.480 UTC [677] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:48:05.480 UTC [677] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:48:15.291 UTC [27] LOG:  checkpoint complete: wrote 2496 buffers (15.2%); 0 WAL file(s) added, 10 removed, 33 recycled; write=21.652 s, sync=1.116 s, total=24.702 s; sync files=232, longest=0.684 s, average=0.005 s; distance=695102 kB, estimate=728961 kB; lsn=AD/1751B1B8, redo lsn=AC/F9411C88
postgres_container  | 2024-11-05 12:48:15.292 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:48:15.292 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:48:15.292 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:48:27.928 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=10.429 s, sync=0.449 s, total=12.637 s; sync files=74, longest=0.428 s, average=0.007 s; distance=681578 kB, estimate=724223 kB; lsn=AD/414001F8, redo lsn=AD/22DAC4F8
postgres_container  | 2024-11-05 12:48:27.929 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:48:27.929 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:48:27.979 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:48:39.921 UTC [27] LOG:  checkpoint complete: wrote 69 buffers (0.4%); 0 WAL file(s) added, 6 removed, 32 recycled; write=6.826 s, sync=2.505 s, total=11.992 s; sync files=18, longest=1.452 s, average=0.140 s; distance=612678 kB, estimate=713069 kB; lsn=AD/67400360, redo lsn=AD/483FE038
postgres_container  | 2024-11-05 12:48:39.921 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:48:39.921 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:48:39.957 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:48:52.728 UTC [699] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:48:52.728 UTC [699] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:49:08.056 UTC [27] LOG:  checkpoint complete: wrote 1224 buffers (7.5%); 0 WAL file(s) added, 17 removed, 23 recycled; write=21.215 s, sync=4.760 s, total=28.135 s; sync files=257, longest=1.323 s, average=0.019 s; distance=661408 kB, estimate=707902 kB; lsn=AD/98402080, redo lsn=AD/709E60A0
postgres_container  | 2024-11-05 12:49:08.057 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 12:49:08.057 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:49:08.058 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:49:23.375 UTC [27] LOG:  checkpoint complete: wrote 8335 buffers (50.9%); 0 WAL file(s) added, 19 removed, 31 recycled; write=11.146 s, sync=1.207 s, total=15.318 s; sync files=90, longest=0.657 s, average=0.014 s; distance=813260 kB, estimate=813260 kB; lsn=AD/C2400378, redo lsn=AD/A2419490
postgres_container  | 2024-11-05 12:49:23.375 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:49:23.375 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:49:23.390 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:49:40.968 UTC [721] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:49:40.968 UTC [721] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:49:43.253 UTC [716] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 12:49:43.253 UTC [716] CONTEXT:  while scanning block 9561 of relation "stage_omopcdm.voc_concept_synonym"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_synonym"
postgres_container  | 2024-11-05 12:49:43.253 UTC [716] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 12:49:49.850 UTC [27] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 19 removed, 26 recycled; write=21.628 s, sync=2.659 s, total=26.475 s; sync files=224, longest=0.407 s, average=0.012 s; distance=737171 kB, estimate=805651 kB; lsn=AD/F4400180, redo lsn=AD/CF3FE110
postgres_container  | 2024-11-05 12:49:49.851 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 12:49:49.851 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:49:49.851 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:50:04.360 UTC [27] LOG:  checkpoint complete: wrote 6462 buffers (39.4%); 0 WAL file(s) added, 16 removed, 32 recycled; write=9.665 s, sync=2.241 s, total=14.510 s; sync files=76, longest=2.114 s, average=0.030 s; distance=797475 kB, estimate=804834 kB; lsn=AE/1E72EF90, redo lsn=AD/FFEC6ED8
postgres_container  | 2024-11-05 12:50:04.360 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:50:04.360 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:50:04.360 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:50:18.307 UTC [27] LOG:  checkpoint complete: wrote 1064 buffers (6.5%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.042 s, sync=2.736 s, total=13.947 s; sync files=35, longest=1.555 s, average=0.079 s; distance=706564 kB, estimate=795007 kB; lsn=AE/49E353A8, redo lsn=AE/2B0C8278
postgres_container  | 2024-11-05 12:50:18.307 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:50:18.307 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:50:18.356 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:50:29.296 UTC [742] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:50:29.296 UTC [742] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:50:48.921 UTC [27] LOG:  checkpoint complete: wrote 499 buffers (3.0%); 0 WAL file(s) added, 24 removed, 20 recycled; write=19.967 s, sync=7.789 s, total=30.613 s; sync files=242, longest=1.633 s, average=0.033 s; distance=724183 kB, estimate=787925 kB; lsn=AE/824080C8, redo lsn=AE/573FE170
postgres_container  | 2024-11-05 12:50:48.921 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:51:05.339 UTC [27] LOG:  checkpoint complete: wrote 8457 buffers (51.6%); 0 WAL file(s) added, 24 removed, 30 recycled; write=11.975 s, sync=1.269 s, total=16.418 s; sync files=113, longest=0.581 s, average=0.012 s; distance=891728 kB, estimate=891728 kB; lsn=AE/AE166748, redo lsn=AE/8DAD24D8
postgres_container  | 2024-11-05 12:51:05.339 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 12:51:05.339 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:51:05.339 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:51:19.354 UTC [764] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:51:19.354 UTC [764] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:51:34.575 UTC [27] LOG:  checkpoint complete: wrote 2558 buffers (15.6%); 0 WAL file(s) added, 25 removed, 22 recycled; write=21.744 s, sync=5.344 s, total=29.236 s; sync files=232, longest=1.171 s, average=0.024 s; distance=759913 kB, estimate=878547 kB; lsn=AE/E5402080, redo lsn=AE/BC0EC8E8
postgres_container  | 2024-11-05 12:51:34.576 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 12:51:34.576 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:51:34.657 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:51:50.462 UTC [27] LOG:  checkpoint complete: wrote 8333 buffers (50.9%); 0 WAL file(s) added, 21 removed, 31 recycled; write=11.342 s, sync=1.890 s, total=15.887 s; sync files=87, longest=1.049 s, average=0.022 s; distance=855117 kB, estimate=876204 kB; lsn=AF/10402CF0, redo lsn=AE/F0400028
postgres_container  | 2024-11-05 12:51:50.463 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 12:51:50.463 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:51:50.463 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:52:04.269 UTC [27] LOG:  checkpoint complete: wrote 4604 buffers (28.1%); 0 WAL file(s) added, 11 removed, 32 recycled; write=10.217 s, sync=1.510 s, total=13.806 s; sync files=99, longest=1.160 s, average=0.016 s; distance=703828 kB, estimate=858966 kB; lsn=AF/3A3FE908, redo lsn=AF/1B3553E0
postgres_container  | 2024-11-05 12:52:04.270 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:52:04.270 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:52:04.270 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:52:13.077 UTC [786] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:52:13.077 UTC [786] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:52:25.214 UTC [27] LOG:  checkpoint complete: wrote 244 buffers (1.5%); 0 WAL file(s) added, 2 removed, 32 recycled; write=16.738 s, sync=2.393 s, total=20.945 s; sync files=237, longest=1.272 s, average=0.011 s; distance=560821 kB, estimate=829152 kB; lsn=AF/5C58B948, redo lsn=AF/3D7029F8
postgres_container  | 2024-11-05 12:52:25.215 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 12:52:25.215 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:52:25.227 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:52:37.183 UTC [27] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.906 s, sync=2.236 s, total=11.968 s; sync files=68, longest=2.153 s, average=0.033 s; distance=653317 kB, estimate=811568 kB; lsn=AF/83527A78, redo lsn=AF/65504110
postgres_container  | 2024-11-05 12:52:37.183 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:52:37.183 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:52:37.184 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:52:50.808 UTC [27] LOG:  checkpoint complete: wrote 2361 buffers (14.4%); 0 WAL file(s) added, 6 removed, 31 recycled; write=7.295 s, sync=4.170 s, total=13.625 s; sync files=90, longest=3.540 s, average=0.047 s; distance=611589 kB, estimate=791570 kB; lsn=AF/AA5FB050, redo lsn=AF/8AA45750
postgres_container  | 2024-11-05 12:52:50.808 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:52:50.808 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:52:50.808 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:53:01.570 UTC [808] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:53:01.570 UTC [808] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:53:15.081 UTC [27] LOG:  checkpoint complete: wrote 419 buffers (2.6%); 0 WAL file(s) added, 5 removed, 32 recycled; write=19.379 s, sync=2.848 s, total=24.273 s; sync files=239, longest=1.531 s, average=0.012 s; distance=599672 kB, estimate=772381 kB; lsn=AF/CECD74F0, redo lsn=AF/AF3E3A90
postgres_container  | 2024-11-05 12:53:15.082 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:53:15.082 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:53:15.082 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:53:27.273 UTC [27] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.627 s, sync=3.124 s, total=12.191 s; sync files=68, longest=3.043 s, average=0.046 s; distance=681393 kB, estimate=763282 kB; lsn=AF/F7408580, redo lsn=AF/D8D4FF98
postgres_container  | 2024-11-05 12:53:27.274 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:53:27.274 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:53:27.274 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:53:38.907 UTC [27] LOG:  checkpoint complete: wrote 2933 buffers (17.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.628 s, sync=2.228 s, total=11.634 s; sync files=41, longest=1.992 s, average=0.055 s; distance=678697 kB, estimate=754823 kB; lsn=B0/20803848, redo lsn=B0/241A5E8
postgres_container  | 2024-11-05 12:53:46.944 UTC [830] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:53:46.944 UTC [830] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:53:52.060 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 12:53:52.060 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:53:52.060 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:54:02.831 UTC [27] LOG:  checkpoint complete: wrote 3884 buffers (23.7%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.259 s, sync=3.775 s, total=10.771 s; sync files=265, longest=1.589 s, average=0.015 s; distance=540569 kB, estimate=733398 kB; lsn=B0/43D6EBC0, redo lsn=B0/23400A90
postgres_container  | 2024-11-05 12:54:02.832 UTC [27] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-05 12:54:02.832 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:54:02.863 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:54:15.611 UTC [27] LOG:  checkpoint complete: wrote 4587 buffers (28.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.883 s, sync=2.667 s, total=12.779 s; sync files=30, longest=2.441 s, average=0.089 s; distance=671733 kB, estimate=727231 kB; lsn=B0/6B402540, redo lsn=B0/4C3FE128
postgres_container  | 2024-11-05 12:54:15.612 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:54:15.612 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:54:15.612 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:54:33.932 UTC [851] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:54:33.932 UTC [851] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 12:54:37.011 UTC [852] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 12:54:41.651 UTC [27] LOG:  checkpoint complete: wrote 3451 buffers (21.1%); 0 WAL file(s) added, 14 removed, 28 recycled; write=22.193 s, sync=1.651 s, total=26.040 s; sync files=217, longest=0.066 s, average=0.008 s; distance=687600 kB, estimate=723268 kB; lsn=B0/9901D948, redo lsn=B0/7637A130
postgres_container  | 2024-11-05 12:54:41.652 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 12:54:41.652 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:54:41.652 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:54:55.296 UTC [27] LOG:  checkpoint complete: wrote 6248 buffers (38.1%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.179 s, sync=2.279 s, total=13.645 s; sync files=90, longest=1.195 s, average=0.026 s; distance=719789 kB, estimate=722920 kB; lsn=B0/C116C038, redo lsn=B0/A2265818
postgres_container  | 2024-11-05 12:54:55.297 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:54:55.297 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:54:55.297 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:55:08.510 UTC [27] LOG:  checkpoint complete: wrote 2209 buffers (13.5%); 0 WAL file(s) added, 12 removed, 33 recycled; write=9.230 s, sync=1.484 s, total=13.214 s; sync files=38, longest=0.803 s, average=0.040 s; distance=736754 kB, estimate=736754 kB; lsn=B0/ED4022C8, redo lsn=B0/CF1E2038
postgres_container  | 2024-11-05 12:55:08.511 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:55:08.511 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:55:08.511 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:55:22.075 UTC [873] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:55:22.075 UTC [873] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:55:35.887 UTC [27] LOG:  checkpoint complete: wrote 1648 buffers (10.1%); 0 WAL file(s) added, 20 removed, 22 recycled; write=19.901 s, sync=5.353 s, total=27.376 s; sync files=217, longest=1.360 s, average=0.025 s; distance=688147 kB, estimate=731893 kB; lsn=B1/22402058, redo lsn=B0/F91E6CD0
postgres_container  | 2024-11-05 12:55:35.888 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 12:55:35.888 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:55:35.889 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:55:51.288 UTC [27] LOG:  checkpoint complete: wrote 8450 buffers (51.6%); 0 WAL file(s) added, 17 removed, 33 recycled; write=11.926 s, sync=0.494 s, total=15.400 s; sync files=98, longest=0.223 s, average=0.006 s; distance=823795 kB, estimate=823795 kB; lsn=B1/49C7BB50, redo lsn=B1/2B6639F8
postgres_container  | 2024-11-05 12:55:51.288 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 12:55:51.288 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:55:51.288 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:56:04.666 UTC [27] LOG:  checkpoint complete: wrote 4283 buffers (26.1%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.676 s, sync=2.910 s, total=13.378 s; sync files=77, longest=2.627 s, average=0.038 s; distance=705641 kB, estimate=811979 kB; lsn=B1/75113620, redo lsn=B1/5677DE48
postgres_container  | 2024-11-05 12:56:11.542 UTC [895] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:56:11.542 UTC [895] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:56:15.330 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 12:56:15.330 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:56:15.330 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:56:27.338 UTC [27] LOG:  checkpoint complete: wrote 3077 buffers (18.8%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.483 s, sync=4.618 s, total=12.009 s; sync files=252, longest=2.005 s, average=0.019 s; distance=537108 kB, estimate=784492 kB; lsn=B1/994021E8, redo lsn=B1/77402E98
postgres_container  | 2024-11-05 12:56:27.338 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:56:27.338 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:56:27.338 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:56:40.644 UTC [27] LOG:  checkpoint complete: wrote 5282 buffers (32.2%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.629 s, sync=2.085 s, total=13.306 s; sync files=51, longest=1.663 s, average=0.041 s; distance=703595 kB, estimate=776402 kB; lsn=B1/C12AE340, redo lsn=B1/A231DD60
postgres_container  | 2024-11-05 12:56:40.645 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:56:40.645 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:56:40.645 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:57:01.787 UTC [917] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:57:01.787 UTC [917] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:57:06.699 UTC [27] LOG:  checkpoint complete: wrote 5918 buffers (36.1%); 0 WAL file(s) added, 12 removed, 28 recycled; write=22.804 s, sync=1.551 s, total=26.055 s; sync files=226, longest=0.053 s, average=0.007 s; distance=666789 kB, estimate=765441 kB; lsn=B1/ED3C7C58, redo lsn=B1/CAE472B8
postgres_container  | 2024-11-05 12:57:06.700 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 12:57:06.700 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:57:06.700 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:57:20.127 UTC [27] LOG:  checkpoint complete: wrote 5809 buffers (35.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.934 s, sync=2.203 s, total=13.427 s; sync files=99, longest=1.154 s, average=0.023 s; distance=658833 kB, estimate=754780 kB; lsn=B2/120F9810, redo lsn=B1/F31AB700
postgres_container  | 2024-11-05 12:57:20.128 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:57:20.128 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:57:20.128 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:57:32.330 UTC [27] LOG:  checkpoint complete: wrote 2557 buffers (15.6%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.357 s, sync=2.905 s, total=12.203 s; sync files=39, longest=1.949 s, average=0.075 s; distance=665458 kB, estimate=745848 kB; lsn=B2/3B4024C0, redo lsn=B2/1BB881B0
postgres_container  | 2024-11-05 12:57:32.331 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 12:57:32.331 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:57:32.331 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:57:47.762 UTC [939] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:57:47.762 UTC [939] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:58:00.923 UTC [27] LOG:  checkpoint complete: wrote 2138 buffers (13.0%); 0 WAL file(s) added, 15 removed, 26 recycled; write=22.783 s, sync=3.770 s, total=28.593 s; sync files=233, longest=1.255 s, average=0.017 s; distance=665460 kB, estimate=737809 kB; lsn=B2/69C10948, redo lsn=B2/445654C8
postgres_container  | 2024-11-05 12:58:00.924 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:58:00.924 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:58:00.924 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:58:15.559 UTC [27] LOG:  checkpoint complete: wrote 8424 buffers (51.4%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.105 s, sync=2.192 s, total=14.636 s; sync files=77, longest=2.152 s, average=0.029 s; distance=808680 kB, estimate=808680 kB; lsn=B2/94402580, redo lsn=B2/75B1F800
postgres_container  | 2024-11-05 12:58:15.560 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 12:58:15.560 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:58:15.562 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:58:28.916 UTC [27] LOG:  checkpoint complete: wrote 43 buffers (0.3%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.313 s, sync=1.862 s, total=13.356 s; sync files=18, longest=1.763 s, average=0.104 s; distance=686970 kB, estimate=796509 kB; lsn=B2/BE4022A8, redo lsn=B2/9F9FE328
postgres_container  | 2024-11-05 12:58:28.916 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:58:28.916 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:58:28.916 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:58:39.662 UTC [961] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:58:39.662 UTC [961] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:58:41.643 UTC [956] LOG:  skipping analyze of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 12:58:41.643 UTC [956] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 12:58:56.260 UTC [27] LOG:  checkpoint complete: wrote 204 buffers (1.2%); 0 WAL file(s) added, 14 removed, 30 recycled; write=19.316 s, sync=5.806 s, total=27.344 s; sync files=229, longest=1.266 s, average=0.026 s; distance=714424 kB, estimate=788301 kB; lsn=B2/EC5270C0, redo lsn=B2/CB3AC508
postgres_container  | 2024-11-05 12:58:56.261 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 12:58:56.261 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:58:56.261 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:59:09.135 UTC [27] LOG:  checkpoint complete: wrote 8439 buffers (51.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.204 s, sync=2.429 s, total=12.874 s; sync files=92, longest=1.964 s, average=0.027 s; distance=719135 kB, estimate=781384 kB; lsn=B3/16CBEB70, redo lsn=B2/F71F44B0
postgres_container  | 2024-11-05 12:59:09.136 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 12:59:09.136 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:59:09.136 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:59:26.267 UTC [982] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 12:59:26.267 UTC [982] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 12:59:32.845 UTC [27] LOG:  checkpoint complete: wrote 3249 buffers (19.8%); 0 WAL file(s) added, 13 removed, 28 recycled; write=20.314 s, sync=1.653 s, total=23.709 s; sync files=204, longest=0.077 s, average=0.009 s; distance=683405 kB, estimate=771586 kB; lsn=B3/43402100, redo lsn=B3/20D57A58
postgres_container  | 2024-11-05 12:59:32.845 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 12:59:32.845 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:59:32.898 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 12:59:46.812 UTC [27] LOG:  checkpoint complete: wrote 6112 buffers (37.3%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.082 s, sync=3.248 s, total=13.967 s; sync files=93, longest=1.361 s, average=0.035 s; distance=678554 kB, estimate=762283 kB; lsn=B3/6AA5A030, redo lsn=B3/4A3FE5D0
postgres_container  | 2024-11-05 12:59:46.812 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 12:59:46.812 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 12:59:46.834 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:00:02.545 UTC [27] LOG:  checkpoint complete: wrote 6077 buffers (37.1%); 0 WAL file(s) added, 15 removed, 30 recycled; write=8.674 s, sync=3.594 s, total=15.733 s; sync files=102, longest=0.899 s, average=0.036 s; distance=737295 kB, estimate=759784 kB; lsn=B3/98170190, redo lsn=B3/774023D8
postgres_container  | 2024-11-05 13:00:02.546 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:00:02.546 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:00:02.546 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:00:15.290 UTC [1004] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:00:15.290 UTC [1004] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:00:30.952 UTC [27] LOG:  checkpoint complete: wrote 2134 buffers (13.0%); 0 WAL file(s) added, 24 removed, 22 recycled; write=20.736 s, sync=5.336 s, total=28.407 s; sync files=238, longest=1.497 s, average=0.023 s; distance=752079 kB, estimate=759014 kB; lsn=B3/CE2558E0, redo lsn=B3/A5276270
postgres_container  | 2024-11-05 13:00:30.952 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:00:30.952 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:00:30.952 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:00:46.031 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 19 removed, 31 recycled; write=10.519 s, sync=1.616 s, total=15.080 s; sync files=81, longest=1.060 s, average=0.020 s; distance=824975 kB, estimate=824975 kB; lsn=B3/F74F9188, redo lsn=B3/D781A030
postgres_container  | 2024-11-05 13:00:46.032 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:00:46.032 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:00:46.032 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:01:06.897 UTC [1026] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:01:06.897 UTC [1026] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:01:12.089 UTC [27] LOG:  checkpoint complete: wrote 4385 buffers (26.8%); 0 WAL file(s) added, 16 removed, 28 recycled; write=22.687 s, sync=1.750 s, total=26.057 s; sync files=255, longest=0.061 s, average=0.007 s; distance=726865 kB, estimate=815164 kB; lsn=B4/26EF77C8, redo lsn=B4/3DEE770
postgres_container  | 2024-11-05 13:01:12.090 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:01:12.090 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:01:12.090 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:01:24.174 UTC [27] LOG:  checkpoint complete: wrote 6162 buffers (37.6%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.481 s, sync=1.330 s, total=12.084 s; sync files=86, longest=0.796 s, average=0.016 s; distance=672627 kB, estimate=800910 kB; lsn=B4/4BE4BDE0, redo lsn=B4/2CECB6A0
postgres_container  | 2024-11-05 13:01:24.175 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:01:24.175 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:01:24.175 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:01:36.351 UTC [27] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.039 s, sync=1.938 s, total=12.177 s; sync files=37, longest=1.319 s, average=0.053 s; distance=679535 kB, estimate=788773 kB; lsn=B4/75400458, redo lsn=B4/566674F8
postgres_container  | 2024-11-05 13:01:36.353 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:01:36.353 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:01:36.353 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:01:54.744 UTC [1048] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:01:54.744 UTC [1048] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:02:06.102 UTC [27] LOG:  checkpoint complete: wrote 2875 buffers (17.5%); 0 WAL file(s) added, 17 removed, 23 recycled; write=23.315 s, sync=4.133 s, total=29.749 s; sync files=258, longest=1.169 s, average=0.017 s; distance=664586 kB, estimate=776354 kB; lsn=B4/A64028D8, redo lsn=B4/7EF6A060
postgres_container  | 2024-11-05 13:02:06.116 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:02:20.387 UTC [27] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 19 removed, 33 recycled; write=8.990 s, sync=2.617 s, total=14.286 s; sync files=75, longest=2.498 s, average=0.035 s; distance=840271 kB, estimate=840271 kB; lsn=B4/D05FDB18, redo lsn=B4/B23FE020
postgres_container  | 2024-11-05 13:02:20.389 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:02:20.389 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:02:20.389 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:02:32.393 UTC [27] LOG:  checkpoint complete: wrote 778 buffers (4.7%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.307 s, sync=0.363 s, total=12.005 s; sync files=38, longest=0.280 s, average=0.010 s; distance=690541 kB, estimate=825298 kB; lsn=B4/FA92BBA8, redo lsn=B4/DC659490
postgres_container  | 2024-11-05 13:02:32.396 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:02:32.396 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:02:32.396 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:02:41.995 UTC [1070] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:02:41.995 UTC [1070] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:02:45.305 UTC [1065] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:02:45.305 UTC [1065] CONTEXT:  while scanning block 21162 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 13:02:45.305 UTC [1065] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:02:45.305 UTC [1065] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:02:58.064 UTC [27] LOG:  checkpoint complete: wrote 189 buffers (1.2%); 0 WAL file(s) added, 11 removed, 28 recycled; write=18.995 s, sync=4.544 s, total=25.668 s; sync files=226, longest=1.380 s, average=0.021 s; distance=647536 kB, estimate=807522 kB; lsn=B5/264004C8, redo lsn=B5/3EB5678
postgres_container  | 2024-11-05 13:02:58.065 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:02:58.065 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:02:58.065 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:03:10.819 UTC [27] LOG:  checkpoint complete: wrote 8435 buffers (51.5%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.301 s, sync=1.816 s, total=12.754 s; sync files=73, longest=1.746 s, average=0.025 s; distance=696926 kB, estimate=796463 kB; lsn=B5/4C4024A8, redo lsn=B5/2E74D258
postgres_container  | 2024-11-05 13:03:10.820 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:03:10.820 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:03:10.821 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:03:28.752 UTC [1091] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:03:28.752 UTC [1091] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:03:34.607 UTC [27] LOG:  checkpoint complete: wrote 3206 buffers (19.6%); 0 WAL file(s) added, 14 removed, 29 recycled; write=20.169 s, sync=1.663 s, total=23.787 s; sync files=208, longest=0.083 s, average=0.008 s; distance=703714 kB, estimate=787188 kB; lsn=B5/7BAE6190, redo lsn=B5/59685E10
postgres_container  | 2024-11-05 13:03:34.607 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 13:03:34.607 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:03:34.607 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:03:48.257 UTC [27] LOG:  checkpoint complete: wrote 6110 buffers (37.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.755 s, sync=1.911 s, total=13.650 s; sync files=103, longest=0.693 s, average=0.019 s; distance=677119 kB, estimate=776181 kB; lsn=B5/A1FA7830, redo lsn=B5/82BC5CE0
postgres_container  | 2024-11-05 13:03:48.257 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:03:48.257 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:03:48.257 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:04:03.130 UTC [27] LOG:  checkpoint complete: wrote 6047 buffers (36.9%); 0 WAL file(s) added, 13 removed, 31 recycled; write=9.029 s, sync=3.142 s, total=14.873 s; sync files=106, longest=1.256 s, average=0.030 s; distance=712743 kB, estimate=769837 kB; lsn=B5/CEED3908, redo lsn=B5/AE3CFB70
postgres_container  | 2024-11-05 13:04:03.131 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:04:03.131 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:04:03.131 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:04:16.210 UTC [1113] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:04:16.210 UTC [1113] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:04:29.099 UTC [27] LOG:  checkpoint complete: wrote 2545 buffers (15.5%); 0 WAL file(s) added, 20 removed, 23 recycled; write=19.247 s, sync=5.225 s, total=25.968 s; sync files=232, longest=1.358 s, average=0.023 s; distance=709315 kB, estimate=763785 kB; lsn=B6/1737E68, redo lsn=B5/D9880B08
postgres_container  | 2024-11-05 13:04:29.099 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:04:29.099 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:04:29.099 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:04:43.146 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 17 removed, 31 recycled; write=9.799 s, sync=1.779 s, total=14.047 s; sync files=76, longest=0.339 s, average=0.024 s; distance=786820 kB, estimate=786820 kB; lsn=B6/29403988, redo lsn=B6/98E1E98
postgres_container  | 2024-11-05 13:04:43.147 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:04:43.147 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:04:43.147 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:04:56.594 UTC [27] LOG:  checkpoint complete: wrote 3444 buffers (21.0%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.856 s, sync=3.537 s, total=13.447 s; sync files=99, longest=1.759 s, average=0.036 s; distance=686639 kB, estimate=776802 kB; lsn=B6/527047E8, redo lsn=B6/3376DD78
postgres_container  | 2024-11-05 13:04:56.595 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:04:56.595 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:04:56.595 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:05:06.566 UTC [1135] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:05:06.566 UTC [1135] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:05:19.736 UTC [27] LOG:  checkpoint complete: wrote 283 buffers (1.7%); 0 WAL file(s) added, 6 removed, 32 recycled; write=17.880 s, sync=2.958 s, total=23.142 s; sync files=227, longest=1.901 s, average=0.014 s; distance=618593 kB, estimate=760981 kB; lsn=B6/78E9D860, redo lsn=B6/593864A0
postgres_container  | 2024-11-05 13:05:19.737 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 13:05:19.737 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:05:19.737 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:05:32.507 UTC [27] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.486 s, sync=2.751 s, total=12.770 s; sync files=70, longest=2.639 s, average=0.040 s; distance=682224 kB, estimate=753106 kB; lsn=B6/A15957E0, redo lsn=B6/82DC26B0
postgres_container  | 2024-11-05 13:05:32.508 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:05:32.508 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:05:32.508 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:05:46.568 UTC [27] LOG:  checkpoint complete: wrote 1451 buffers (8.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.546 s, sync=2.833 s, total=14.060 s; sync files=68, longest=2.218 s, average=0.042 s; distance=682989 kB, estimate=746094 kB; lsn=B6/CAF61A98, redo lsn=B6/AC8BDD08
postgres_container  | 2024-11-05 13:05:53.200 UTC [1157] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:05:53.200 UTC [1157] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:05:57.767 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:05:57.767 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:05:57.768 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:06:10.399 UTC [27] LOG:  checkpoint complete: wrote 3850 buffers (23.5%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.406 s, sync=3.720 s, total=12.632 s; sync files=255, longest=1.936 s, average=0.015 s; distance=535850 kB, estimate=725070 kB; lsn=B6/ED74C180, redo lsn=B6/CD408658
postgres_container  | 2024-11-05 13:06:10.399 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:06:10.399 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:06:10.399 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:06:23.369 UTC [27] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 14 removed, 30 recycled; write=7.557 s, sync=2.877 s, total=12.970 s; sync files=43, longest=1.994 s, average=0.067 s; distance=728814 kB, estimate=728814 kB; lsn=B7/1A3FE790, redo lsn=B6/F9BC4178
postgres_container  | 2024-11-05 13:06:23.370 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:06:23.370 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:06:23.370 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:06:39.791 UTC [1179] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:06:39.791 UTC [1179] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:06:42.755 UTC [1174] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:06:42.755 UTC [1174] CONTEXT:  while scanning block 16687 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 13:06:42.755 UTC [1174] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:06:42.755 UTC [1174] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:06:51.649 UTC [27] LOG:  checkpoint complete: wrote 4136 buffers (25.2%); 0 WAL file(s) added, 20 removed, 25 recycled; write=21.902 s, sync=3.596 s, total=28.280 s; sync files=224, longest=0.790 s, average=0.017 s; distance=729296 kB, estimate=729296 kB; lsn=B7/4C408E88, redo lsn=B7/263F82B0
postgres_container  | 2024-11-05 13:06:51.650 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:06:51.650 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:06:51.650 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:07:06.409 UTC [27] LOG:  checkpoint complete: wrote 8456 buffers (51.6%); 0 WAL file(s) added, 20 removed, 32 recycled; write=9.291 s, sync=2.874 s, total=14.759 s; sync files=76, longest=2.844 s, average=0.038 s; distance=864224 kB, estimate=864224 kB; lsn=B7/79401500, redo lsn=B7/5AFF04E8
postgres_container  | 2024-11-05 13:07:06.409 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:07:06.409 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:07:06.494 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:07:19.622 UTC [27] LOG:  checkpoint complete: wrote 823 buffers (5.0%); 0 WAL file(s) added, 11 removed, 33 recycled; write=10.201 s, sync=0.438 s, total=13.213 s; sync files=36, longest=0.378 s, average=0.013 s; distance=708670 kB, estimate=848669 kB; lsn=B7/A4403590, redo lsn=B7/86400030
postgres_container  | 2024-11-05 13:07:19.623 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:07:19.623 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:07:19.624 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:07:30.086 UTC [1200] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:07:30.086 UTC [1200] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:07:46.551 UTC [27] LOG:  checkpoint complete: wrote 185 buffers (1.1%); 0 WAL file(s) added, 13 removed, 27 recycled; write=20.190 s, sync=3.880 s, total=26.928 s; sync files=247, longest=0.339 s, average=0.016 s; distance=656754 kB, estimate=829477 kB; lsn=B7/D202B5C0, redo lsn=B7/AE55C8E0
postgres_container  | 2024-11-05 13:07:46.552 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:07:46.552 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:07:46.552 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:08:01.870 UTC [27] LOG:  checkpoint complete: wrote 8442 buffers (51.5%); 0 WAL file(s) added, 16 removed, 31 recycled; write=10.789 s, sync=1.225 s, total=15.319 s; sync files=112, longest=0.344 s, average=0.011 s; distance=768670 kB, estimate=823396 kB; lsn=B7/FD400990, redo lsn=B7/DD4043D0
postgres_container  | 2024-11-05 13:08:01.871 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:08:01.871 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:08:01.871 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:08:17.471 UTC [1222] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:08:17.471 UTC [1222] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:08:29.413 UTC [27] LOG:  checkpoint complete: wrote 3433 buffers (21.0%); 0 WAL file(s) added, 20 removed, 25 recycled; write=21.044 s, sync=4.053 s, total=27.542 s; sync files=229, longest=1.374 s, average=0.018 s; distance=737393 kB, estimate=814796 kB; lsn=B8/307240D0, redo lsn=B8/A420998
postgres_container  | 2024-11-05 13:08:29.414 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:08:29.414 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:08:29.451 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:08:44.439 UTC [27] LOG:  checkpoint complete: wrote 8339 buffers (50.9%); 0 WAL file(s) added, 20 removed, 32 recycled; write=12.254 s, sync=0.568 s, total=15.026 s; sync files=79, longest=0.097 s, average=0.008 s; distance=850989 kB, estimate=850989 kB; lsn=B8/5D402270, redo lsn=B8/3E32C080
postgres_container  | 2024-11-05 13:08:44.439 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:08:44.439 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:08:44.439 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:09:00.150 UTC [27] LOG:  checkpoint complete: wrote 3485 buffers (21.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.602 s, sync=2.017 s, total=15.711 s; sync files=93, longest=1.579 s, average=0.022 s; distance=679186 kB, estimate=833809 kB; lsn=B8/86DFC2C8, redo lsn=B8/67A70AC8
postgres_container  | 2024-11-05 13:09:00.151 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:09:00.151 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:09:00.151 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:09:09.275 UTC [1244] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:09:09.275 UTC [1244] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:09:23.496 UTC [27] LOG:  checkpoint complete: wrote 260 buffers (1.6%); 0 WAL file(s) added, 12 removed, 30 recycled; write=17.918 s, sync=2.739 s, total=23.346 s; sync files=239, longest=1.484 s, average=0.012 s; distance=691836 kB, estimate=819612 kB; lsn=B8/B21A6B20, redo lsn=B8/91E0FDC8
postgres_container  | 2024-11-05 13:09:23.496 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 13:09:23.496 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:09:23.496 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:09:36.658 UTC [27] LOG:  checkpoint complete: wrote 8319 buffers (50.8%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.785 s, sync=0.450 s, total=13.163 s; sync files=82, longest=0.052 s, average=0.006 s; distance=724523 kB, estimate=810103 kB; lsn=B8/DD4020A8, redo lsn=B8/BE19ADA0
postgres_container  | 2024-11-05 13:09:36.659 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:09:36.659 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:09:36.675 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:09:55.020 UTC [1266] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:09:55.020 UTC [1266] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:10:04.901 UTC [27] LOG:  checkpoint complete: wrote 3395 buffers (20.7%); 0 WAL file(s) added, 16 removed, 26 recycled; write=23.705 s, sync=2.362 s, total=28.242 s; sync files=263, longest=0.234 s, average=0.009 s; distance=700932 kB, estimate=799186 kB; lsn=B9/D0099C0, redo lsn=B8/E8E1C060
postgres_container  | 2024-11-05 13:10:04.902 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:10:04.902 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:10:04.902 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:10:18.308 UTC [27] LOG:  checkpoint complete: wrote 6155 buffers (37.6%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.350 s, sync=2.645 s, total=13.407 s; sync files=75, longest=2.586 s, average=0.036 s; distance=736907 kB, estimate=792958 kB; lsn=B9/34475038, redo lsn=B9/15DBEE00
postgres_container  | 2024-11-05 13:10:18.309 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:10:18.309 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:10:18.309 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:10:30.793 UTC [27] LOG:  checkpoint complete: wrote 2205 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.651 s, sync=1.708 s, total=12.484 s; sync files=37, longest=0.678 s, average=0.047 s; distance=679181 kB, estimate=781580 kB; lsn=B9/5F400310, redo lsn=B9/3F5022D0
postgres_container  | 2024-11-05 13:10:30.794 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:10:30.794 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:10:30.794 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:10:41.450 UTC [1288] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:10:41.450 UTC [1288] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:10:48.263 UTC [1283] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:10:48.263 UTC [1283] CONTEXT:  while scanning block 10934 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-05 13:10:59.310 UTC [27] LOG:  checkpoint complete: wrote 1840 buffers (11.2%); 0 WAL file(s) added, 19 removed, 22 recycled; write=22.282 s, sync=4.546 s, total=28.517 s; sync files=222, longest=1.204 s, average=0.021 s; distance=680937 kB, estimate=771516 kB; lsn=B9/91400460, redo lsn=B9/68DFC7C0
postgres_container  | 2024-11-05 13:10:59.310 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 13:10:59.310 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:10:59.346 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:11:13.103 UTC [27] LOG:  checkpoint complete: wrote 8448 buffers (51.6%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.808 s, sync=0.487 s, total=13.793 s; sync files=76, longest=0.386 s, average=0.007 s; distance=792582 kB, estimate=792582 kB; lsn=B9/B84001F0, redo lsn=B9/993FE248
postgres_container  | 2024-11-05 13:11:13.104 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:11:13.104 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:11:13.104 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:11:26.048 UTC [27] LOG:  checkpoint complete: wrote 3661 buffers (22.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.742 s, sync=1.588 s, total=12.945 s; sync files=37, longest=1.562 s, average=0.043 s; distance=694136 kB, estimate=782738 kB; lsn=B9/E1F95D00, redo lsn=B9/C39DC510
postgres_container  | 2024-11-05 13:11:26.048 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:11:26.048 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:11:26.048 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:11:34.974 UTC [1309] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:11:34.974 UTC [1309] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:11:36.724 UTC [1310] LOG:  skipping analyze of "src_labevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.724 UTC [1310] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 13:11:36.734 UTC [1310] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.769 UTC [1310] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:11:36.858 UTC [1310] LOG:  skipping analyze of "cdm_person" --- lock not available
postgres_container  | 2024-11-05 13:11:48.460 UTC [27] LOG:  checkpoint complete: wrote 107 buffers (0.7%); 0 WAL file(s) added, 4 removed, 32 recycled; write=17.647 s, sync=2.589 s, total=22.412 s; sync files=229, longest=1.538 s, average=0.012 s; distance=580504 kB, estimate=762514 kB; lsn=BA/691CA88, redo lsn=B9/E70C27D8
postgres_container  | 2024-11-05 13:11:48.461 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:11:48.461 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:11:48.477 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:12:01.669 UTC [27] LOG:  checkpoint complete: wrote 8346 buffers (50.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.233 s, sync=3.422 s, total=13.209 s; sync files=72, longest=3.333 s, average=0.048 s; distance=691438 kB, estimate=755407 kB; lsn=BA/2F5FB998, redo lsn=BA/113FE200
postgres_container  | 2024-11-05 13:12:01.670 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:12:01.670 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:12:01.670 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:12:19.422 UTC [1331] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:12:19.422 UTC [1331] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:12:20.621 UTC [27] LOG:  checkpoint complete: wrote 2895 buffers (17.7%); 0 WAL file(s) added, 8 removed, 34 recycled; write=16.352 s, sync=1.316 s, total=18.952 s; sync files=62, longest=1.208 s, average=0.022 s; distance=691993 kB, estimate=749065 kB; lsn=BA/58BCBA20, redo lsn=BA/3B7C48D8
postgres_container  | 2024-11-05 13:12:22.360 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 13:12:22.360 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:12:22.361 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:12:37.072 UTC [27] LOG:  checkpoint complete: wrote 3730 buffers (22.8%); 0 WAL file(s) added, 8 removed, 25 recycled; write=6.059 s, sync=6.510 s, total=14.712 s; sync files=219, longest=1.791 s, average=0.030 s; distance=536821 kB, estimate=727841 kB; lsn=BA/82402090, redo lsn=BA/5C401D68
postgres_container  | 2024-11-05 13:12:37.073 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:12:37.073 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:12:37.073 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:12:52.332 UTC [27] LOG:  checkpoint complete: wrote 5641 buffers (34.4%); 0 WAL file(s) added, 16 removed, 30 recycled; write=8.083 s, sync=4.619 s, total=15.259 s; sync files=101, longest=3.199 s, average=0.046 s; distance=753295 kB, estimate=753295 kB; lsn=BA/AB404068, redo lsn=BA/8A3A5BB0
postgres_container  | 2024-11-05 13:12:52.332 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:12:52.332 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:12:52.332 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:13:08.203 UTC [1353] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:13:08.203 UTC [1353] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:13:21.178 UTC [27] LOG:  checkpoint complete: wrote 4118 buffers (25.1%); 0 WAL file(s) added, 19 removed, 24 recycled; write=22.525 s, sync=4.258 s, total=28.846 s; sync files=245, longest=1.356 s, average=0.018 s; distance=715620 kB, estimate=749528 kB; lsn=BA/DC4022C8, redo lsn=BA/B5E7ECD0
postgres_container  | 2024-11-05 13:13:21.179 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 13:13:21.179 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:13:21.179 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:13:35.973 UTC [27] LOG:  checkpoint complete: wrote 8347 buffers (50.9%); 0 WAL file(s) added, 18 removed, 33 recycled; write=11.961 s, sync=0.365 s, total=14.795 s; sync files=74, longest=0.305 s, average=0.005 s; distance=828817 kB, estimate=828817 kB; lsn=BB/662CA70, redo lsn=BA/E87E3258
postgres_container  | 2024-11-05 13:13:35.974 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:13:35.974 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:13:35.975 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:13:50.072 UTC [27] LOG:  checkpoint complete: wrote 24 buffers (0.1%); 0 WAL file(s) added, 10 removed, 31 recycled; write=9.588 s, sync=1.897 s, total=14.098 s; sync files=55, longest=1.217 s, average=0.035 s; distance=677278 kB, estimate=813663 kB; lsn=BB/314042A8, redo lsn=BB/11D4AD98
postgres_container  | 2024-11-05 13:13:50.072 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:13:50.072 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:13:50.072 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:14:01.519 UTC [1375] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:14:01.519 UTC [1375] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:14:15.532 UTC [27] LOG:  checkpoint complete: wrote 368 buffers (2.2%); 0 WAL file(s) added, 11 removed, 31 recycled; write=19.832 s, sync=3.254 s, total=25.460 s; sync files=245, longest=1.832 s, average=0.014 s; distance=689136 kB, estimate=801210 kB; lsn=BB/5BBE9E68, redo lsn=BB/3BE46ED8
postgres_container  | 2024-11-05 13:14:15.532 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:14:15.532 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:14:15.532 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:14:28.317 UTC [27] LOG:  checkpoint complete: wrote 8323 buffers (50.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=9.941 s, sync=0.168 s, total=12.785 s; sync files=66, longest=0.076 s, average=0.003 s; distance=701797 kB, estimate=791269 kB; lsn=BB/854001F0, redo lsn=BB/66BA06B0
postgres_container  | 2024-11-05 13:14:28.318 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:14:28.318 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:14:28.318 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:14:46.548 UTC [1397] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:14:46.548 UTC [1397] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:14:51.661 UTC [27] LOG:  checkpoint complete: wrote 3260 buffers (19.9%); 0 WAL file(s) added, 9 removed, 34 recycled; write=21.599 s, sync=0.214 s, total=23.344 s; sync files=108, longest=0.143 s, average=0.002 s; distance=692903 kB, estimate=781432 kB; lsn=BB/AE145200, redo lsn=BB/9104A460
postgres_container  | 2024-11-05 13:14:52.879 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 13:14:52.879 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:14:52.879 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:15:06.140 UTC [27] LOG:  checkpoint complete: wrote 3867 buffers (23.6%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.542 s, sync=5.007 s, total=13.261 s; sync files=226, longest=2.534 s, average=0.023 s; distance=544483 kB, estimate=757737 kB; lsn=BB/D4634DD0, redo lsn=BB/B2403338
postgres_container  | 2024-11-05 13:15:06.141 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:15:06.141 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:15:06.141 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:15:20.164 UTC [27] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.126 s, sync=2.742 s, total=14.023 s; sync files=41, longest=1.848 s, average=0.067 s; distance=737326 kB, estimate=755696 kB; lsn=BB/FE402298, redo lsn=BB/DF40ECD0
postgres_container  | 2024-11-05 13:15:20.165 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:15:20.165 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:15:20.165 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:15:35.080 UTC [1418] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:15:35.080 UTC [1418] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:15:38.335 UTC [1419] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 13:15:38.335 UTC [1419] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 13:15:38.335 UTC [1419] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:15:38.336 UTC [1419] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:15:38.342 UTC [1419] LOG:  skipping vacuum of "pg_toast_437784" --- lock not available
postgres_container  | 2024-11-05 13:15:47.820 UTC [27] LOG:  checkpoint complete: wrote 2204 buffers (13.5%); 0 WAL file(s) added, 20 removed, 23 recycled; write=21.217 s, sync=4.020 s, total=27.656 s; sync files=226, longest=1.055 s, average=0.018 s; distance=712069 kB, estimate=751334 kB; lsn=BC/324020C8, redo lsn=BC/AB70448
postgres_container  | 2024-11-05 13:15:47.821 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:15:47.821 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:15:47.821 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:16:03.129 UTC [27] LOG:  checkpoint complete: wrote 8447 buffers (51.6%); 0 WAL file(s) added, 20 removed, 32 recycled; write=10.631 s, sync=1.338 s, total=15.309 s; sync files=76, longest=1.153 s, average=0.018 s; distance=848200 kB, estimate=848200 kB; lsn=BC/5D162688, redo lsn=BC/3E7C2730
postgres_container  | 2024-11-05 13:16:03.130 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:16:03.130 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:16:03.130 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:16:16.511 UTC [27] LOG:  checkpoint complete: wrote 543 buffers (3.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=9.084 s, sync=1.653 s, total=13.382 s; sync files=38, longest=1.571 s, average=0.044 s; distance=720524 kB, estimate=835433 kB; lsn=BC/891BE360, redo lsn=BC/6A765B08
postgres_container  | 2024-11-05 13:16:16.512 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:16:16.512 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:16:16.512 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:16:25.927 UTC [1440] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:16:25.927 UTC [1440] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:16:39.927 UTC [27] LOG:  checkpoint complete: wrote 126 buffers (0.8%); 0 WAL file(s) added, 7 removed, 32 recycled; write=18.119 s, sync=2.549 s, total=23.415 s; sync files=224, longest=1.356 s, average=0.012 s; distance=636909 kB, estimate=815580 kB; lsn=BC/B08E9628, redo lsn=BC/91561150
postgres_container  | 2024-11-05 13:16:39.928 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 13:16:39.928 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:16:39.928 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:16:53.916 UTC [27] LOG:  checkpoint complete: wrote 8524 buffers (52.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=10.424 s, sync=1.089 s, total=13.989 s; sync files=98, longest=0.720 s, average=0.012 s; distance=660551 kB, estimate=800077 kB; lsn=BC/D8B6FD88, redo lsn=BC/B9A72DF8
postgres_container  | 2024-11-05 13:16:53.917 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:16:53.917 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:16:53.917 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:17:05.752 UTC [27] LOG:  checkpoint complete: wrote 6104 buffers (37.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.733 s, sync=2.451 s, total=11.836 s; sync files=46, longest=2.344 s, average=0.054 s; distance=683646 kB, estimate=788434 kB; lsn=BD/173F168, redo lsn=BC/E36128C0
postgres_container  | 2024-11-05 13:17:14.201 UTC [1462] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:17:14.201 UTC [1462] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:17:16.145 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 13:17:16.145 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:17:16.145 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:17:27.907 UTC [27] LOG:  checkpoint complete: wrote 3323 buffers (20.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.554 s, sync=2.844 s, total=11.763 s; sync files=253, longest=1.393 s, average=0.012 s; distance=538561 kB, estimate=763447 kB; lsn=BD/24601160, redo lsn=BD/4403028
postgres_container  | 2024-11-05 13:17:27.911 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 13:17:27.911 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:17:27.911 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:17:41.575 UTC [27] LOG:  checkpoint complete: wrote 5080 buffers (31.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.170 s, sync=3.569 s, total=13.664 s; sync files=46, longest=3.059 s, average=0.078 s; distance=699254 kB, estimate=757028 kB; lsn=BD/4E4146A8, redo lsn=BD/2EEE0A48
postgres_container  | 2024-11-05 13:17:41.576 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:17:41.576 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:17:41.576 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:17:58.632 UTC [1484] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:17:58.632 UTC [1484] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:18:07.995 UTC [27] LOG:  checkpoint complete: wrote 4734 buffers (28.9%); 0 WAL file(s) added, 13 removed, 29 recycled; write=23.313 s, sync=1.609 s, total=26.420 s; sync files=233, longest=0.060 s, average=0.007 s; distance=679616 kB, estimate=749286 kB; lsn=BD/7A6D5678, redo lsn=BD/58690AA0
postgres_container  | 2024-11-05 13:18:07.996 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:18:07.996 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:18:08.058 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:18:19.856 UTC [27] LOG:  checkpoint complete: wrote 5812 buffers (35.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.116 s, sync=2.602 s, total=11.861 s; sync files=96, longest=1.382 s, average=0.028 s; distance=652733 kB, estimate=739631 kB; lsn=BD/9F6B8220, redo lsn=BD/80400068
postgres_container  | 2024-11-05 13:18:19.857 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:18:19.857 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:18:19.857 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:18:32.854 UTC [27] LOG:  checkpoint complete: wrote 2554 buffers (15.6%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.308 s, sync=3.349 s, total=12.997 s; sync files=37, longest=2.439 s, average=0.091 s; distance=678097 kB, estimate=733478 kB; lsn=BD/C9400320, redo lsn=BD/A9A345B8
postgres_container  | 2024-11-05 13:18:32.855 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:18:32.855 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:18:32.855 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:18:46.513 UTC [1506] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:18:46.513 UTC [1506] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:18:51.257 UTC [1496] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:19:00.485 UTC [27] LOG:  checkpoint complete: wrote 2132 buffers (13.0%); 0 WAL file(s) added, 17 removed, 25 recycled; write=22.029 s, sync=3.679 s, total=27.630 s; sync files=231, longest=1.348 s, average=0.016 s; distance=691695 kB, estimate=729299 kB; lsn=BD/F9E2BA00, redo lsn=BD/D3DB04B0
postgres_container  | 2024-11-05 13:19:00.485 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:19:00.485 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:19:00.485 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:19:14.737 UTC [27] LOG:  checkpoint complete: wrote 8412 buffers (51.3%); 0 WAL file(s) added, 18 removed, 32 recycled; write=11.646 s, sync=0.251 s, total=14.252 s; sync files=77, longest=0.124 s, average=0.004 s; distance=818105 kB, estimate=818105 kB; lsn=BE/24402400, redo lsn=BE/5C9EC50
postgres_container  | 2024-11-05 13:19:14.738 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:19:14.738 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:19:14.763 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:19:26.495 UTC [27] LOG:  checkpoint complete: wrote 794 buffers (4.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.666 s, sync=1.780 s, total=11.757 s; sync files=18, longest=1.087 s, average=0.099 s; distance=665053 kB, estimate=802800 kB; lsn=BE/4D4004A8, redo lsn=BE/2E6160F0
postgres_container  | 2024-11-05 13:19:26.496 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:19:26.496 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:19:26.496 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:19:37.023 UTC [1528] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:19:37.023 UTC [1528] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:19:39.397 UTC [1525] LOG:  skipping analyze of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:19:39.397 UTC [1525] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:19:51.877 UTC [27] LOG:  checkpoint complete: wrote 393 buffers (2.4%); 0 WAL file(s) added, 12 removed, 28 recycled; write=19.010 s, sync=4.372 s, total=25.382 s; sync files=225, longest=1.397 s, average=0.020 s; distance=654875 kB, estimate=788008 kB; lsn=BE/790BB0B0, redo lsn=BE/5659CD50
postgres_container  | 2024-11-05 13:19:51.878 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:19:51.878 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:19:51.878 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:20:06.303 UTC [27] LOG:  checkpoint complete: wrote 8447 buffers (51.6%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.862 s, sync=2.147 s, total=14.425 s; sync files=76, longest=1.711 s, average=0.029 s; distance=702350 kB, estimate=779442 kB; lsn=BE/9F7142D8, redo lsn=BE/813806D8
postgres_container  | 2024-11-05 13:20:06.303 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:20:06.303 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:20:06.303 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:20:24.409 UTC [1549] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:20:24.409 UTC [1549] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:20:31.971 UTC [27] LOG:  checkpoint complete: wrote 3132 buffers (19.1%); 0 WAL file(s) added, 15 removed, 29 recycled; write=21.453 s, sync=1.677 s, total=25.669 s; sync files=194, longest=0.067 s, average=0.009 s; distance=723286 kB, estimate=773826 kB; lsn=BE/CF400120, redo lsn=BE/AD5D6220
postgres_container  | 2024-11-05 13:20:31.972 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:20:31.972 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:20:32.033 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:20:47.429 UTC [27] LOG:  checkpoint complete: wrote 6109 buffers (37.3%); 0 WAL file(s) added, 15 removed, 30 recycled; write=9.163 s, sync=3.577 s, total=15.458 s; sync files=108, longest=1.525 s, average=0.034 s; distance=735393 kB, estimate=769983 kB; lsn=BE/FB402148, redo lsn=BE/DA3FE7C0
postgres_container  | 2024-11-05 13:20:47.430 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:20:47.430 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:20:47.430 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:21:03.294 UTC [27] LOG:  checkpoint complete: wrote 6076 buffers (37.1%); 0 WAL file(s) added, 15 removed, 31 recycled; write=10.708 s, sync=2.246 s, total=15.865 s; sync files=102, longest=0.982 s, average=0.023 s; distance=750847 kB, estimate=768069 kB; lsn=BF/28772580, redo lsn=BF/813E610
postgres_container  | 2024-11-05 13:21:03.295 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:21:03.295 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:21:03.295 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:21:13.225 UTC [1571] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:21:13.225 UTC [1571] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:21:29.766 UTC [27] LOG:  checkpoint complete: wrote 1641 buffers (10.0%); 0 WAL file(s) added, 18 removed, 26 recycled; write=19.739 s, sync=4.670 s, total=26.471 s; sync files=234, longest=1.625 s, average=0.020 s; distance=727575 kB, estimate=764020 kB; lsn=BF/5923C100, redo lsn=BF/347C4510
postgres_container  | 2024-11-05 13:21:29.767 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:21:29.767 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:21:29.767 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:21:43.679 UTC [27] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 14 removed, 32 recycled; write=8.623 s, sync=2.517 s, total=13.913 s; sync files=75, longest=2.182 s, average=0.034 s; distance=749882 kB, estimate=762606 kB; lsn=BF/8140A520, redo lsn=BF/624130E8
postgres_container  | 2024-11-05 13:21:43.679 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:21:43.679 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:21:43.679 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:21:57.899 UTC [27] LOG:  checkpoint complete: wrote 6750 buffers (41.2%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.946 s, sync=2.952 s, total=14.220 s; sync files=99, longest=2.261 s, average=0.030 s; distance=698366 kB, estimate=756182 kB; lsn=BF/ABD0BE40, redo lsn=BF/8CE12C00
postgres_container  | 2024-11-05 13:21:57.900 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:21:57.900 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:21:57.900 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:22:06.746 UTC [1593] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:22:06.746 UTC [1593] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:22:19.355 UTC [27] LOG:  checkpoint complete: wrote 146 buffers (0.9%); 0 WAL file(s) added, 2 removed, 31 recycled; write=16.349 s, sync=2.976 s, total=21.455 s; sync files=233, longest=1.880 s, average=0.013 s; distance=534936 kB, estimate=734058 kB; lsn=BF/CD38C580, redo lsn=BF/AD878CB0
postgres_container  | 2024-11-05 13:22:19.357 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:22:19.357 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:22:19.357 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:22:32.459 UTC [27] LOG:  checkpoint complete: wrote 8330 buffers (50.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.475 s, sync=2.878 s, total=13.103 s; sync files=67, longest=2.714 s, average=0.043 s; distance=653651 kB, estimate=726017 kB; lsn=BF/F4400728, redo lsn=BF/D56CD9C0
postgres_container  | 2024-11-05 13:22:32.460 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:22:32.460 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:22:32.460 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:22:47.091 UTC [27] LOG:  checkpoint complete: wrote 3145 buffers (19.2%); 0 WAL file(s) added, 11 removed, 31 recycled; write=10.568 s, sync=1.411 s, total=14.631 s; sync files=76, longest=0.286 s, average=0.019 s; distance=689669 kB, estimate=722382 kB; lsn=C0/1F43AE88, redo lsn=BF/FF84EE70
postgres_container  | 2024-11-05 13:22:53.305 UTC [1615] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:22:53.305 UTC [1615] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:22:57.171 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:22:57.171 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:22:57.171 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:23:08.952 UTC [27] LOG:  checkpoint complete: wrote 2695 buffers (16.4%); 0 WAL file(s) added, 4 removed, 29 recycled; write=5.401 s, sync=4.475 s, total=11.782 s; sync files=255, longest=1.599 s, average=0.018 s; distance=536274 kB, estimate=703771 kB; lsn=C0/42376AB0, redo lsn=C0/20403A48
postgres_container  | 2024-11-05 13:23:08.953 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 13:23:08.953 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:23:08.953 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:23:21.733 UTC [27] LOG:  checkpoint complete: wrote 5750 buffers (35.1%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.514 s, sync=1.733 s, total=12.780 s; sync files=47, longest=1.285 s, average=0.037 s; distance=703128 kB, estimate=703707 kB; lsn=C0/6A400328, redo lsn=C0/4B2A9E28
postgres_container  | 2024-11-05 13:23:21.733 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:23:21.733 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:23:21.733 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:23:39.605 UTC [1637] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:23:39.605 UTC [1637] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:23:42.436 UTC [1632] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:23:42.436 UTC [1632] CONTEXT:  while scanning block 16832 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 13:23:42.436 UTC [1632] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:23:42.436 UTC [1632] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:23:47.371 UTC [27] LOG:  checkpoint complete: wrote 2575 buffers (15.7%); 0 WAL file(s) added, 15 removed, 27 recycled; write=21.796 s, sync=2.263 s, total=25.638 s; sync files=223, longest=0.128 s, average=0.011 s; distance=693065 kB, estimate=702643 kB; lsn=C0/99400138, redo lsn=C0/7577C5B0
postgres_container  | 2024-11-05 13:23:47.372 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:23:47.372 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:23:47.372 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:24:00.762 UTC [27] LOG:  checkpoint complete: wrote 6271 buffers (38.3%); 0 WAL file(s) added, 12 removed, 31 recycled; write=9.251 s, sync=2.128 s, total=13.391 s; sync files=76, longest=0.326 s, average=0.028 s; distance=699632 kB, estimate=702342 kB; lsn=C0/C0C17C80, redo lsn=C0/A02B8618
postgres_container  | 2024-11-05 13:24:00.763 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:24:00.763 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:24:00.789 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:24:16.980 UTC [27] LOG:  checkpoint complete: wrote 2208 buffers (13.5%); 0 WAL file(s) added, 7 removed, 32 recycled; write=12.243 s, sync=1.357 s, total=16.218 s; sync files=38, longest=0.921 s, average=0.036 s; distance=648126 kB, estimate=696920 kB; lsn=C0/E6403A60, redo lsn=C0/C7BA8050
postgres_container  | 2024-11-05 13:24:16.989 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:24:16.989 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:24:16.989 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:24:31.546 UTC [1658] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:24:31.546 UTC [1658] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:24:44.159 UTC [27] LOG:  checkpoint complete: wrote 3737 buffers (22.8%); 0 WAL file(s) added, 20 removed, 22 recycled; write=20.469 s, sync=5.023 s, total=27.170 s; sync files=235, longest=1.076 s, average=0.022 s; distance=679941 kB, estimate=695222 kB; lsn=C1/1A402598, redo lsn=C0/F13A9640
postgres_container  | 2024-11-05 13:24:44.160 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:24:44.160 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:24:44.160 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:24:58.058 UTC [27] LOG:  checkpoint complete: wrote 8430 buffers (51.5%); 0 WAL file(s) added, 17 removed, 33 recycled; write=7.917 s, sync=3.491 s, total=13.899 s; sync files=91, longest=3.424 s, average=0.039 s; distance=817331 kB, estimate=817331 kB; lsn=C1/41576FA0, redo lsn=C1/231D6558
postgres_container  | 2024-11-05 13:24:58.059 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:24:58.059 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:24:58.084 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:25:10.590 UTC [27] LOG:  checkpoint complete: wrote 1238 buffers (7.6%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.537 s, sync=1.593 s, total=12.531 s; sync files=41, longest=1.567 s, average=0.039 s; distance=673952 kB, estimate=802993 kB; lsn=C1/6A4024B8, redo lsn=C1/4C3FE858
postgres_container  | 2024-11-05 13:25:10.590 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:25:10.590 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:25:10.590 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:25:19.502 UTC [1673] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-05 13:25:19.810 UTC [1686] ERROR:  relation "mimiciv_icu.icustays" does not exist at character 55
postgres_container  | 2024-11-05 13:25:19.810 UTC [1686] STATEMENT:  CREATE VIEW stage_omopcdm.icustays AS 
postgres_container  | 	SELECT * FROM  mimiciv_icu.icustays;
postgres_container  | 2024-11-05 13:25:35.484 UTC [27] LOG:  checkpoint complete: wrote 134 buffers (0.8%); 0 WAL file(s) added, 12 removed, 28 recycled; write=18.221 s, sync=4.159 s, total=24.894 s; sync files=296, longest=1.640 s, average=0.015 s; distance=656507 kB, estimate=788345 kB; lsn=C1/974103E8, redo lsn=C1/7451D770
postgres_container  | 2024-11-05 13:25:35.486 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:25:35.486 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:25:35.487 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:25:45.968 UTC [1778] LOG:  skipping analyze of "labevents" --- lock not available
postgres_container  | 2024-11-05 13:25:47.194 UTC [1778] LOG:  skipping analyze of "poe" --- lock not available
postgres_container  | 2024-11-05 13:25:47.713 UTC [1778] LOG:  skipping analyze of "chartevents" --- lock not available
postgres_container  | 2024-11-05 13:25:54.838 UTC [27] LOG:  checkpoint complete: wrote 10914 buffers (66.6%); 0 WAL file(s) added, 17 removed, 26 recycled; write=11.798 s, sync=5.183 s, total=19.352 s; sync files=211, longest=2.379 s, average=0.025 s; distance=703181 kB, estimate=779828 kB; lsn=C1/C4257680, redo lsn=C1/9F3D0CB0
postgres_container  | 2024-11-05 13:25:54.839 UTC [27] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-05 13:25:54.839 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:25:54.839 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:26:17.099 UTC [1818] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:26:17.099 UTC [1818] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:26:18.699 UTC [27] LOG:  checkpoint complete: wrote 9247 buffers (56.4%); 0 WAL file(s) added, 12 removed, 33 recycled; write=19.971 s, sync=1.319 s, total=23.860 s; sync files=209, longest=1.025 s, average=0.007 s; distance=744907 kB, estimate=776336 kB; lsn=C1/EAEAB3E8, redo lsn=C1/CCB43958
postgres_container  | 2024-11-05 13:26:18.700 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 13:26:18.700 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:26:18.700 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:26:35.503 UTC [27] LOG:  checkpoint complete: wrote 851 buffers (5.2%); 0 WAL file(s) added, 5 removed, 30 recycled; write=12.035 s, sync=2.053 s, total=16.803 s; sync files=233, longest=0.912 s, average=0.009 s; distance=573152 kB, estimate=756018 kB; lsn=C2/10623CF8, redo lsn=C1/EFAFBAE0
postgres_container  | 2024-11-05 13:26:35.504 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 13:26:35.504 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:26:35.504 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:26:36.555 UTC [1840] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:26:36.555 UTC [1840] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:26:57.449 UTC [27] LOG:  checkpoint complete: wrote 355 buffers (2.2%); 0 WAL file(s) added, 7 removed, 30 recycled; write=18.198 s, sync=1.558 s, total=21.946 s; sync files=291, longest=0.845 s, average=0.006 s; distance=606515 kB, estimate=741068 kB; lsn=C2/35C84A58, redo lsn=C2/14B48AB0
postgres_container  | 2024-11-05 13:26:57.450 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:26:57.450 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:26:57.450 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:27:16.555 UTC [27] LOG:  checkpoint complete: wrote 6799 buffers (41.5%); 0 WAL file(s) added, 13 removed, 32 recycled; write=15.716 s, sync=0.874 s, total=19.105 s; sync files=93, longest=0.312 s, average=0.010 s; distance=727717 kB, estimate=739733 kB; lsn=C2/6034FB38, redo lsn=C2/411F2230
postgres_container  | 2024-11-05 13:27:16.555 UTC [27] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-05 13:27:16.555 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:27:16.555 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:27:32.036 UTC [27] LOG:  checkpoint complete: wrote 1598 buffers (9.8%); 0 WAL file(s) added, 9 removed, 31 recycled; write=9.569 s, sync=3.601 s, total=15.481 s; sync files=36, longest=0.772 s, average=0.100 s; distance=662072 kB, estimate=731966 kB; lsn=C2/894022C0, redo lsn=C2/69880378
postgres_container  | 2024-11-05 13:27:32.036 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:27:32.036 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:27:32.036 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:27:50.678 UTC [1862] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:27:50.678 UTC [1862] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:28:04.985 UTC [27] LOG:  checkpoint complete: wrote 3980 buffers (24.3%); 0 WAL file(s) added, 11 removed, 31 recycled; write=26.876 s, sync=3.187 s, total=32.950 s; sync files=236, longest=1.061 s, average=0.014 s; distance=685688 kB, estimate=727339 kB; lsn=C2/B3AC1D48, redo lsn=C2/9361E5C0
postgres_container  | 2024-11-05 13:28:04.986 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:28:21.180 UTC [27] LOG:  checkpoint complete: wrote 9231 buffers (56.3%); 0 WAL file(s) added, 16 removed, 31 recycled; write=11.241 s, sync=1.652 s, total=16.194 s; sync files=81, longest=0.977 s, average=0.021 s; distance=774389 kB, estimate=774389 kB; lsn=C2/E2400170, redo lsn=C2/C2A5BB20
postgres_container  | 2024-11-05 13:28:21.180 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 13:28:21.180 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:28:21.180 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:28:39.838 UTC [27] LOG:  checkpoint complete: wrote 2052 buffers (12.5%); 0 WAL file(s) added, 13 removed, 28 recycled; write=12.257 s, sync=3.876 s, total=18.658 s; sync files=143, longest=1.008 s, average=0.028 s; distance=661694 kB, estimate=763119 kB; lsn=C3/E1EC398, redo lsn=C2/EB08B448
postgres_container  | 2024-11-05 13:28:39.839 UTC [27] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-05 13:28:39.839 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:28:39.839 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:28:56.782 UTC [1994] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:28:56.782 UTC [1994] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:28:57.365 UTC [1852] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:28:57.365 UTC [1852] CONTEXT:  while scanning block 18831 of relation "vocabulary.concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.vocabulary.concept_ancestor"
postgres_container  | 2024-11-05 13:29:00.249 UTC [1960] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:29:12.807 UTC [27] LOG:  checkpoint complete: wrote 7002 buffers (42.7%); 0 WAL file(s) added, 13 removed, 30 recycled; write=27.380 s, sync=3.597 s, total=32.968 s; sync files=441, longest=1.067 s, average=0.009 s; distance=707097 kB, estimate=757517 kB; lsn=C3/375E02A0, redo lsn=C3/16311AB0
postgres_container  | 2024-11-05 13:29:12.808 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:29:16.934 UTC [2022] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:29:16.934 UTC [2022] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:29:34.243 UTC [27] LOG:  checkpoint complete: wrote 7158 buffers (43.7%); 0 WAL file(s) added, 12 removed, 30 recycled; write=15.474 s, sync=3.495 s, total=21.436 s; sync files=367, longest=0.736 s, average=0.010 s; distance=694358 kB, estimate=751201 kB; lsn=C3/61E6A328, redo lsn=C3/40927628
postgres_container  | 2024-11-05 13:29:34.244 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:29:34.244 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:29:34.244 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:29:39.416 UTC [2042] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:29:39.416 UTC [2042] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:29:58.610 UTC [27] LOG:  checkpoint complete: wrote 742 buffers (4.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=17.560 s, sync=4.059 s, total=24.366 s; sync files=305, longest=2.955 s, average=0.014 s; distance=713683 kB, estimate=747449 kB; lsn=C3/8B516A30, redo lsn=C3/6C21C230
postgres_container  | 2024-11-05 13:29:58.610 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 13:29:58.610 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:29:58.611 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:30:15.267 UTC [27] LOG:  checkpoint complete: wrote 8738 buffers (53.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=10.505 s, sync=3.344 s, total=16.657 s; sync files=101, longest=3.113 s, average=0.034 s; distance=728423 kB, estimate=745547 kB; lsn=C3/B7BC49E8, redo lsn=C3/989760F0
postgres_container  | 2024-11-05 13:30:15.268 UTC [27] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-05 13:30:15.268 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:30:15.268 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:30:31.776 UTC [27] LOG:  checkpoint complete: wrote 2061 buffers (12.6%); 0 WAL file(s) added, 12 removed, 32 recycled; write=11.255 s, sync=1.896 s, total=16.509 s; sync files=38, longest=0.884 s, average=0.050 s; distance=712290 kB, estimate=742221 kB; lsn=C3/E31A4898, redo lsn=C3/C410ECA0
postgres_container  | 2024-11-05 13:30:31.776 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:30:31.776 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:30:31.776 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:30:43.958 UTC [2064] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:30:43.958 UTC [2064] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:31:01.240 UTC [27] LOG:  checkpoint complete: wrote 952 buffers (5.8%); 0 WAL file(s) added, 12 removed, 31 recycled; write=23.001 s, sync=3.898 s, total=29.464 s; sync files=235, longest=3.488 s, average=0.017 s; distance=714957 kB, estimate=739495 kB; lsn=C4/F6AA770, redo lsn=C3/EFB42230
postgres_container  | 2024-11-05 13:31:01.241 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:31:15.977 UTC [27] LOG:  checkpoint complete: wrote 8589 buffers (52.4%); 0 WAL file(s) added, 13 removed, 31 recycled; write=10.356 s, sync=1.460 s, total=14.737 s; sync files=81, longest=0.873 s, average=0.019 s; distance=721206 kB, estimate=737666 kB; lsn=C4/3B4051B0, redo lsn=C4/1BB8FBC0
postgres_container  | 2024-11-05 13:31:15.977 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:31:15.977 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:31:15.997 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:31:40.758 UTC [2086] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:31:40.758 UTC [2086] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:31:42.774 UTC [27] LOG:  checkpoint complete: wrote 4377 buffers (26.7%); 0 WAL file(s) added, 11 removed, 34 recycled; write=17.158 s, sync=4.733 s, total=26.797 s; sync files=57, longest=2.066 s, average=0.083 s; distance=729529 kB, estimate=736852 kB; lsn=C4/65AEE230, redo lsn=C4/483FE0A0
postgres_container  | 2024-11-05 13:31:42.774 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:31:42.774 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:31:42.774 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:31:56.616 UTC [27] LOG:  checkpoint complete: wrote 390 buffers (2.4%); 0 WAL file(s) added, 0 removed, 29 recycled; write=7.923 s, sync=3.802 s, total=13.842 s; sync files=229, longest=1.359 s, average=0.017 s; distance=483344 kB, estimate=711501 kB; lsn=C4/877CA3A0, redo lsn=C4/65C02400
postgres_container  | 2024-11-05 13:31:56.616 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:31:56.616 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:31:56.616 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:32:15.505 UTC [27] LOG:  checkpoint complete: wrote 8455 buffers (51.6%); 0 WAL file(s) added, 11 removed, 33 recycled; write=11.425 s, sync=0.422 s, total=18.889 s; sync files=68, longest=0.204 s, average=0.007 s; distance=709078 kB, estimate=711259 kB; lsn=C4/AF60E168, redo lsn=C4/91077EE0
postgres_container  | 2024-11-05 13:32:15.506 UTC [27] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-05 13:32:15.506 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:32:15.506 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:32:43.564 UTC [2108] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:32:43.564 UTC [2108] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] CONTEXT:  while scanning block 5439 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:32:47.615 UTC [2103] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:32:56.646 UTC [27] LOG:  checkpoint complete: wrote 3267 buffers (19.9%); 0 WAL file(s) added, 18 removed, 27 recycled; write=35.730 s, sync=3.228 s, total=41.140 s; sync files=241, longest=1.038 s, average=0.014 s; distance=749862 kB, estimate=749862 kB; lsn=C4/E24020F0, redo lsn=C4/BECC18E8
postgres_container  | 2024-11-05 13:32:57.392 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:33:21.103 UTC [27] LOG:  checkpoint complete: wrote 6438 buffers (39.3%); 0 WAL file(s) added, 16 removed, 33 recycled; write=14.674 s, sync=2.203 s, total=24.458 s; sync files=79, longest=1.744 s, average=0.028 s; distance=793841 kB, estimate=793841 kB; lsn=C5/DF84E88, redo lsn=C4/EF3FE038
postgres_container  | 2024-11-05 13:33:21.104 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:33:21.104 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:33:21.104 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:33:39.897 UTC [27] LOG:  checkpoint complete: wrote 2031 buffers (12.4%); 0 WAL file(s) added, 12 removed, 32 recycled; write=14.973 s, sync=0.894 s, total=18.794 s; sync files=38, longest=0.733 s, average=0.024 s; distance=727311 kB, estimate=787188 kB; lsn=C5/3A3B16B0, redo lsn=C5/1BA41D70
postgres_container  | 2024-11-05 13:33:39.898 UTC [27] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-05 13:33:39.898 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:33:39.907 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:33:53.220 UTC [2130] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:33:53.220 UTC [2130] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:34:08.393 UTC [27] LOG:  checkpoint complete: wrote 1366 buffers (8.3%); 0 WAL file(s) added, 16 removed, 24 recycled; write=20.593 s, sync=5.967 s, total=28.496 s; sync files=259, longest=1.530 s, average=0.024 s; distance=650035 kB, estimate=773473 kB; lsn=C5/6AF6A2B8, redo lsn=C5/4350ED48
postgres_container  | 2024-11-05 13:34:08.394 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 13:34:08.394 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:34:08.431 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:34:21.785 UTC [27] LOG:  checkpoint complete: wrote 8313 buffers (50.7%); 0 WAL file(s) added, 19 removed, 30 recycled; write=8.854 s, sync=1.955 s, total=13.389 s; sync files=89, longest=1.486 s, average=0.022 s; distance=813220 kB, estimate=813220 kB; lsn=C5/95112AB0, redo lsn=C5/74F380D0
postgres_container  | 2024-11-05 13:34:21.786 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:34:21.786 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:34:21.786 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:34:39.987 UTC [2152] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:34:39.987 UTC [2152] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:34:42.907 UTC [2147] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:34:42.907 UTC [2147] CONTEXT:  while scanning block 5370 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:34:42.908 UTC [2147] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:34:48.936 UTC [27] LOG:  checkpoint complete: wrote 2146 buffers (13.1%); 0 WAL file(s) added, 18 removed, 28 recycled; write=22.874 s, sync=2.276 s, total=27.150 s; sync files=234, longest=0.716 s, average=0.010 s; distance=742188 kB, estimate=806117 kB; lsn=C5/C5057110, redo lsn=C5/A24033B0
postgres_container  | 2024-11-05 13:34:48.936 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:34:48.936 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:34:48.936 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:35:02.764 UTC [27] LOG:  checkpoint complete: wrote 6433 buffers (39.3%); 0 WAL file(s) added, 13 removed, 33 recycled; write=9.091 s, sync=1.464 s, total=13.829 s; sync files=77, longest=1.356 s, average=0.020 s; distance=751028 kB, estimate=800608 kB; lsn=C5/EE46E3A8, redo lsn=C5/D0170680
postgres_container  | 2024-11-05 13:35:02.766 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:35:02.766 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:35:02.766 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:35:21.305 UTC [27] LOG:  checkpoint complete: wrote 2028 buffers (12.4%); 0 WAL file(s) added, 9 removed, 31 recycled; write=9.238 s, sync=4.570 s, total=18.540 s; sync files=37, longest=1.326 s, average=0.124 s; distance=668458 kB, estimate=787393 kB; lsn=C6/18400340, redo lsn=C5/F8E3AFE8
postgres_container  | 2024-11-05 13:35:21.306 UTC [27] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-05 13:35:21.306 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:35:21.306 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:35:40.556 UTC [2174] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:35:40.556 UTC [2174] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:35:45.977 UTC [2171] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:35:45.977 UTC [2171] CONTEXT:  while scanning block 4927 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:35:45.978 UTC [2171] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:35:45.989 UTC [2171] LOG:  skipping vacuum of "pg_toast_452184" --- lock not available
postgres_container  | 2024-11-05 13:36:10.173 UTC [27] LOG:  checkpoint complete: wrote 1468 buffers (9.0%); 0 WAL file(s) added, 20 removed, 23 recycled; write=34.699 s, sync=10.361 s, total=48.867 s; sync files=232, longest=1.996 s, average=0.045 s; distance=700834 kB, estimate=778737 kB; lsn=C6/4B402240, redo lsn=C6/23AA3B28
postgres_container  | 2024-11-05 13:36:10.174 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:36:34.323 UTC [27] LOG:  checkpoint complete: wrote 8444 buffers (51.5%); 0 WAL file(s) added, 19 removed, 32 recycled; write=19.560 s, sync=1.253 s, total=24.150 s; sync files=76, longest=1.039 s, average=0.017 s; distance=836161 kB, estimate=836161 kB; lsn=C6/756DC900, redo lsn=C6/56B34068
postgres_container  | 2024-11-05 13:36:34.323 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 13:36:34.323 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:36:34.324 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:36:56.706 UTC [2196] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:36:56.706 UTC [2196] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:37:05.416 UTC [27] LOG:  checkpoint complete: wrote 2540 buffers (15.5%); 0 WAL file(s) added, 20 removed, 25 recycled; write=25.337 s, sync=3.228 s, total=31.093 s; sync files=246, longest=0.417 s, average=0.014 s; distance=729903 kB, estimate=825535 kB; lsn=C6/A92C0768, redo lsn=C6/83400030
postgres_container  | 2024-11-05 13:37:05.416 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:37:20.116 UTC [27] LOG:  checkpoint complete: wrote 6661 buffers (40.7%); 0 WAL file(s) added, 19 removed, 33 recycled; write=10.121 s, sync=2.042 s, total=14.701 s; sync files=77, longest=1.955 s, average=0.027 s; distance=850875 kB, estimate=850875 kB; lsn=C6/D5638150, redo lsn=C6/B72EEC30
postgres_container  | 2024-11-05 13:37:20.117 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:37:20.117 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:37:20.117 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:37:32.195 UTC [27] LOG:  checkpoint complete: wrote 1774 buffers (10.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.433 s, sync=2.112 s, total=12.079 s; sync files=36, longest=1.355 s, average=0.059 s; distance=713678 kB, estimate=837155 kB; lsn=C7/1D03E18, redo lsn=C6/E2BE27E0
postgres_container  | 2024-11-05 13:37:32.196 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:37:32.196 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:37:32.196 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:37:43.668 UTC [2218] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:37:43.668 UTC [2218] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:37:47.976 UTC [2213] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:37:47.976 UTC [2213] CONTEXT:  while scanning block 11894 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:37:47.977 UTC [2213] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:37:47.978 UTC [2213] LOG:  skipping vacuum of "pg_toast_453299" --- lock not available
postgres_container  | 2024-11-05 13:38:00.209 UTC [27] LOG:  checkpoint complete: wrote 408 buffers (2.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=23.839 s, sync=1.647 s, total=28.013 s; sync files=239, longest=1.103 s, average=0.007 s; distance=710416 kB, estimate=824481 kB; lsn=C7/2D9E43E0, redo lsn=C7/E1A68F8
postgres_container  | 2024-11-05 13:38:00.209 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:38:00.209 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:38:00.210 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:38:16.883 UTC [27] LOG:  checkpoint complete: wrote 8419 buffers (51.4%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.953 s, sync=6.172 s, total=16.674 s; sync files=73, longest=6.070 s, average=0.085 s; distance=723389 kB, estimate=814372 kB; lsn=C7/586FABF8, redo lsn=C7/3A416090
postgres_container  | 2024-11-05 13:38:16.884 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:38:16.884 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:38:16.884 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:38:35.141 UTC [2239] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:38:35.141 UTC [2239] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:38:37.513 UTC [2240] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:38:37.514 UTC [2240] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:38:44.707 UTC [27] LOG:  checkpoint complete: wrote 3499 buffers (21.4%); 0 WAL file(s) added, 19 removed, 25 recycled; write=21.716 s, sync=3.626 s, total=27.823 s; sync files=232, longest=0.874 s, average=0.016 s; distance=720598 kB, estimate=804994 kB; lsn=C7/8C4001F0, redo lsn=C7/663CBB00
postgres_container  | 2024-11-05 13:38:44.707 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:38:44.707 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:38:44.747 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:38:59.505 UTC [27] LOG:  checkpoint complete: wrote 6420 buffers (39.2%); 0 WAL file(s) added, 18 removed, 33 recycled; write=9.275 s, sync=2.010 s, total=14.798 s; sync files=77, longest=1.905 s, average=0.027 s; distance=835785 kB, estimate=835785 kB; lsn=C7/B7498690, redo lsn=C7/993FE1C8
postgres_container  | 2024-11-05 13:38:59.505 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:38:59.505 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:38:59.574 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:39:13.956 UTC [27] LOG:  checkpoint complete: wrote 2027 buffers (12.4%); 0 WAL file(s) added, 14 removed, 32 recycled; write=7.197 s, sync=2.914 s, total=14.451 s; sync files=37, longest=1.927 s, average=0.079 s; distance=753671 kB, estimate=827574 kB; lsn=C7/E64005A0, redo lsn=C7/C7400088
postgres_container  | 2024-11-05 13:39:13.956 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:39:13.956 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:39:13.956 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:39:23.491 UTC [2261] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:39:23.491 UTC [2261] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:39:43.080 UTC [27] LOG:  checkpoint complete: wrote 217 buffers (1.3%); 0 WAL file(s) added, 13 removed, 31 recycled; write=24.000 s, sync=2.083 s, total=29.124 s; sync files=229, longest=1.486 s, average=0.010 s; distance=724783 kB, estimate=817295 kB; lsn=C8/13240108, redo lsn=C7/F37CBE10
postgres_container  | 2024-11-05 13:39:43.081 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:39:57.828 UTC [27] LOG:  checkpoint complete: wrote 8519 buffers (52.0%); 0 WAL file(s) added, 14 removed, 30 recycled; write=8.546 s, sync=3.462 s, total=14.747 s; sync files=114, longest=2.257 s, average=0.031 s; distance=720543 kB, estimate=807620 kB; lsn=C8/400B2438, redo lsn=C8/1F773B30
postgres_container  | 2024-11-05 13:39:57.828 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:39:57.828 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:39:57.828 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:40:05.729 UTC [2275] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-05 13:40:17.054 UTC [27] LOG:  checkpoint complete: wrote 4264 buffers (26.0%); 0 WAL file(s) added, 20 removed, 23 recycled; write=13.750 s, sync=3.256 s, total=19.226 s; sync files=280, longest=0.073 s, average=0.012 s; distance=701028 kB, estimate=796960 kB; lsn=C8/72368B80, redo lsn=C8/4A40CC30
postgres_container  | 2024-11-05 13:40:17.055 UTC [27] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-05 13:40:17.055 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:40:17.056 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:40:35.166 UTC [27] LOG:  checkpoint complete: wrote 7692 buffers (46.9%); 0 WAL file(s) added, 20 removed, 30 recycled; write=12.334 s, sync=3.109 s, total=18.112 s; sync files=146, longest=1.745 s, average=0.022 s; distance=816172 kB, estimate=816172 kB; lsn=C8/9D00A120, redo lsn=C8/7C117F18
postgres_container  | 2024-11-05 13:40:35.167 UTC [27] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-05 13:40:35.167 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:40:35.167 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:40:51.351 UTC [27] LOG:  checkpoint complete: wrote 9551 buffers (58.3%); 0 WAL file(s) added, 15 removed, 26 recycled; write=9.647 s, sync=4.077 s, total=16.184 s; sync files=148, longest=1.802 s, average=0.028 s; distance=686263 kB, estimate=803181 kB; lsn=C8/CA1DE348, redo lsn=C8/A5F45B88
postgres_container  | 2024-11-05 13:40:51.351 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:40:51.351 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:40:51.351 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:41:03.240 UTC [2414] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:41:03.240 UTC [2414] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:41:22.784 UTC [27] LOG:  checkpoint complete: wrote 2785 buffers (17.0%); 0 WAL file(s) added, 14 removed, 31 recycled; write=24.945 s, sync=3.573 s, total=31.433 s; sync files=333, longest=3.122 s, average=0.011 s; distance=732082 kB, estimate=796071 kB; lsn=C8/F200FB00, redo lsn=C8/D2A32738
postgres_container  | 2024-11-05 13:41:22.785 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:41:26.371 UTC [2435] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:41:26.371 UTC [2435] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:41:44.343 UTC [27] LOG:  checkpoint complete: wrote 1246 buffers (7.6%); 0 WAL file(s) added, 15 removed, 29 recycled; write=14.908 s, sync=3.937 s, total=21.558 s; sync files=285, longest=1.610 s, average=0.014 s; distance=714557 kB, estimate=787920 kB; lsn=C9/20402120, redo lsn=C8/FE401D20
postgres_container  | 2024-11-05 13:41:44.344 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:41:44.344 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:41:44.344 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:42:05.855 UTC [27] LOG:  checkpoint complete: wrote 8092 buffers (49.4%); 0 WAL file(s) added, 15 removed, 32 recycled; write=16.890 s, sync=1.053 s, total=21.512 s; sync files=81, longest=0.483 s, average=0.013 s; distance=778393 kB, estimate=786967 kB; lsn=C9/4CFF0B70, redo lsn=C9/2DC282D0
postgres_container  | 2024-11-05 13:42:05.856 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 13:42:05.856 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:42:05.856 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:42:23.246 UTC [27] LOG:  checkpoint complete: wrote 2969 buffers (18.1%); 0 WAL file(s) added, 11 removed, 32 recycled; write=13.257 s, sync=1.291 s, total=17.390 s; sync files=81, longest=0.690 s, average=0.016 s; distance=697324 kB, estimate=778003 kB; lsn=C9/77402438, redo lsn=C9/585234D0
postgres_container  | 2024-11-05 13:42:23.247 UTC [27] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-05 13:42:23.247 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:42:23.247 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:42:40.142 UTC [2458] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:42:40.142 UTC [2458] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:42:42.532 UTC [2455] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:42:42.532 UTC [2455] CONTEXT:  while scanning block 9689 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 13:42:42.532 UTC [2455] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:42:52.987 UTC [27] LOG:  checkpoint complete: wrote 4104 buffers (25.0%); 0 WAL file(s) added, 12 removed, 31 recycled; write=24.465 s, sync=2.040 s, total=29.740 s; sync files=248, longest=0.820 s, average=0.009 s; distance=706511 kB, estimate=770854 kB; lsn=C9/A34020A0, redo lsn=C9/837171E0
postgres_container  | 2024-11-05 13:42:52.987 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 13:42:52.987 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:42:52.987 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:43:07.898 UTC [27] LOG:  checkpoint complete: wrote 7764 buffers (47.4%); 0 WAL file(s) added, 14 removed, 33 recycled; write=11.372 s, sync=0.635 s, total=14.911 s; sync files=73, longest=0.341 s, average=0.009 s; distance=764156 kB, estimate=770184 kB; lsn=C9/D0F5DCB0, redo lsn=C9/B21563C8
postgres_container  | 2024-11-05 13:43:07.898 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:43:07.898 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:43:07.942 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:43:22.476 UTC [27] LOG:  checkpoint complete: wrote 2212 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=10.699 s, sync=0.819 s, total=14.579 s; sync files=39, longest=0.524 s, average=0.021 s; distance=715711 kB, estimate=764737 kB; lsn=C9/FC4022E0, redo lsn=C9/DDC46078
postgres_container  | 2024-11-05 13:43:22.477 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:43:22.477 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:43:22.477 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:43:35.430 UTC [2479] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:43:35.430 UTC [2479] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:43:51.313 UTC [27] LOG:  checkpoint complete: wrote 120 buffers (0.7%); 0 WAL file(s) added, 6 removed, 31 recycled; write=22.519 s, sync=3.879 s, total=28.837 s; sync files=235, longest=1.958 s, average=0.017 s; distance=601475 kB, estimate=748410 kB; lsn=CA/22676EC8, redo lsn=CA/27A6D70
postgres_container  | 2024-11-05 13:43:51.313 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 13:43:51.313 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:43:51.313 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:44:06.636 UTC [27] LOG:  checkpoint complete: wrote 8622 buffers (52.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.996 s, sync=1.256 s, total=15.323 s; sync files=78, longest=0.632 s, average=0.017 s; distance=694314 kB, estimate=743001 kB; lsn=CA/4B728C48, redo lsn=CA/2CDB1610
postgres_container  | 2024-11-05 13:44:06.637 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:44:06.637 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:44:06.665 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:44:27.880 UTC [2501] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:44:27.880 UTC [2501] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:44:33.950 UTC [27] LOG:  checkpoint complete: wrote 3106 buffers (19.0%); 0 WAL file(s) added, 17 removed, 28 recycled; write=23.368 s, sync=1.840 s, total=27.314 s; sync files=235, longest=0.092 s, average=0.008 s; distance=727369 kB, estimate=741438 kB; lsn=CA/7C400108, redo lsn=CA/59403C80
postgres_container  | 2024-11-05 13:44:33.951 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:44:33.951 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:44:33.951 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:44:47.592 UTC [27] LOG:  checkpoint complete: wrote 6170 buffers (37.7%); 0 WAL file(s) added, 14 removed, 31 recycled; write=8.447 s, sync=2.362 s, total=13.642 s; sync files=85, longest=1.370 s, average=0.028 s; distance=739714 kB, estimate=741265 kB; lsn=CA/A6389D58, redo lsn=CA/86664550
postgres_container  | 2024-11-05 13:44:47.592 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:44:47.592 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:44:47.592 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:45:02.910 UTC [27] LOG:  checkpoint complete: wrote 6111 buffers (37.3%); 0 WAL file(s) added, 15 removed, 30 recycled; write=9.789 s, sync=2.441 s, total=15.318 s; sync files=101, longest=1.273 s, average=0.025 s; distance=740654 kB, estimate=741204 kB; lsn=CA/D44005F8, redo lsn=CA/B39B0030
postgres_container  | 2024-11-05 13:45:02.911 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:45:02.911 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:45:02.911 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:45:15.232 UTC [2523] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:45:15.232 UTC [2523] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:45:35.783 UTC [27] LOG:  checkpoint complete: wrote 1197 buffers (7.3%); 0 WAL file(s) added, 24 removed, 22 recycled; write=20.279 s, sync=7.611 s, total=32.872 s; sync files=239, longest=1.973 s, average=0.032 s; distance=744592 kB, estimate=744592 kB; lsn=CB/A3EF1B0, redo lsn=CA/E10D4040
postgres_container  | 2024-11-05 13:45:35.783 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:46:07.040 UTC [27] LOG:  checkpoint complete: wrote 8350 buffers (51.0%); 0 WAL file(s) added, 32 removed, 26 recycled; write=21.362 s, sync=4.061 s, total=31.257 s; sync files=111, longest=0.617 s, average=0.037 s; distance=963055 kB, estimate=963055 kB; lsn=CB/404002D0, redo lsn=CB/1BD4FD18
postgres_container  | 2024-11-05 13:46:07.041 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:46:20.940 UTC [2545] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:46:20.940 UTC [2545] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:46:37.969 UTC [27] LOG:  checkpoint complete: wrote 1197 buffers (7.3%); 0 WAL file(s) added, 33 removed, 23 recycled; write=22.092 s, sync=6.245 s, total=30.928 s; sync files=259, longest=1.863 s, average=0.025 s; distance=911758 kB, estimate=957925 kB; lsn=CB/7B2A6048, redo lsn=CB/537B3740
postgres_container  | 2024-11-05 13:46:37.969 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:46:53.841 UTC [27] LOG:  checkpoint complete: wrote 8397 buffers (51.3%); 0 WAL file(s) added, 19 removed, 31 recycled; write=9.591 s, sync=3.251 s, total=15.872 s; sync files=114, longest=2.082 s, average=0.029 s; distance=815201 kB, estimate=943653 kB; lsn=CB/A5B3B460, redo lsn=CB/853CBE68
postgres_container  | 2024-11-05 13:46:53.842 UTC [27] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-05 13:46:53.842 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:46:53.842 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:47:12.459 UTC [2567] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:47:12.459 UTC [2567] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:47:21.960 UTC [27] LOG:  checkpoint complete: wrote 4437 buffers (27.1%); 0 WAL file(s) added, 19 removed, 26 recycled; write=22.649 s, sync=3.218 s, total=28.119 s; sync files=230, longest=1.270 s, average=0.014 s; distance=749573 kB, estimate=924245 kB; lsn=CB/D7400188, redo lsn=CB/B2FCD5A0
postgres_container  | 2024-11-05 13:47:21.961 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 13:47:21.961 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:47:21.961 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:47:36.133 UTC [27] LOG:  checkpoint complete: wrote 8349 buffers (51.0%); 0 WAL file(s) added, 18 removed, 32 recycled; write=9.474 s, sync=1.873 s, total=14.172 s; sync files=74, longest=1.827 s, average=0.026 s; distance=814448 kB, estimate=913265 kB; lsn=CC/3402068, redo lsn=CB/E4B298A8
postgres_container  | 2024-11-05 13:47:36.133 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:47:36.133 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:47:36.133 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:47:49.620 UTC [27] LOG:  checkpoint complete: wrote 92 buffers (0.6%); 0 WAL file(s) added, 14 removed, 30 recycled; write=10.198 s, sync=0.958 s, total=13.487 s; sync files=49, longest=0.367 s, average=0.020 s; distance=724596 kB, estimate=894398 kB; lsn=CC/31402058, redo lsn=CC/10EC6A90
postgres_container  | 2024-11-05 13:47:49.620 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:47:49.620 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:47:49.620 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:48:00.880 UTC [2589] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:48:00.880 UTC [2589] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:48:16.043 UTC [27] LOG:  checkpoint complete: wrote 419 buffers (2.6%); 0 WAL file(s) added, 15 removed, 28 recycled; write=20.165 s, sync=4.295 s, total=26.424 s; sync files=246, longest=1.395 s, average=0.018 s; distance=696260 kB, estimate=874584 kB; lsn=CC/5E400528, redo lsn=CC/3B6B7AF8
postgres_container  | 2024-11-05 13:48:16.044 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:48:16.044 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:48:16.044 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:48:29.002 UTC [27] LOG:  checkpoint complete: wrote 8315 buffers (50.8%); 0 WAL file(s) added, 14 removed, 31 recycled; write=6.679 s, sync=3.911 s, total=12.959 s; sync files=82, longest=3.354 s, average=0.048 s; distance=738224 kB, estimate=860948 kB; lsn=CC/884022C8, redo lsn=CC/687A3BE8
postgres_container  | 2024-11-05 13:48:29.003 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:48:29.003 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:48:29.004 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:48:45.984 UTC [2611] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:48:45.984 UTC [2611] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:48:51.232 UTC [2603] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:48:51.233 UTC [2603] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:48:56.875 UTC [27] LOG:  checkpoint complete: wrote 4121 buffers (25.2%); 0 WAL file(s) added, 15 removed, 28 recycled; write=23.667 s, sync=2.271 s, total=27.872 s; sync files=236, longest=0.598 s, average=0.010 s; distance=700901 kB, estimate=844944 kB; lsn=CC/B64021B0, redo lsn=CC/9341D270
postgres_container  | 2024-11-05 13:48:56.877 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:48:56.877 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:48:56.890 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:49:09.763 UTC [27] LOG:  checkpoint complete: wrote 6426 buffers (39.2%); 0 WAL file(s) added, 13 removed, 32 recycled; write=6.468 s, sync=3.840 s, total=12.887 s; sync files=77, longest=3.499 s, average=0.050 s; distance=737155 kB, estimate=834165 kB; lsn=CC/DF402150, redo lsn=CC/C03FE0C8
postgres_container  | 2024-11-05 13:49:09.764 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:49:09.764 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:49:09.797 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:49:22.235 UTC [27] LOG:  checkpoint complete: wrote 2028 buffers (12.4%); 0 WAL file(s) added, 13 removed, 31 recycled; write=8.363 s, sync=2.032 s, total=12.471 s; sync files=37, longest=1.258 s, average=0.055 s; distance=728543 kB, estimate=823603 kB; lsn=CD/C402408, redo lsn=CC/ECB76038
postgres_container  | 2024-11-05 13:49:22.235 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:49:22.235 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:49:22.236 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:49:34.468 UTC [2632] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:49:34.468 UTC [2632] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:49:37.756 UTC [2633] LOG:  skipping analyze of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-05 13:49:37.756 UTC [2633] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-05 13:49:37.756 UTC [2633] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-05 13:49:37.756 UTC [2633] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:49:37.932 UTC [2633] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:49:37.933 UTC [2633] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:49:37.933 UTC [2633] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:49:37.933 UTC [2633] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:49:49.998 UTC [27] LOG:  checkpoint complete: wrote 1213 buffers (7.4%); 0 WAL file(s) added, 19 removed, 23 recycled; write=20.841 s, sync=5.156 s, total=27.763 s; sync files=226, longest=1.636 s, average=0.023 s; distance=691028 kB, estimate=810345 kB; lsn=CD/3E4020A8, redo lsn=CD/16E4B370
postgres_container  | 2024-11-05 13:49:49.999 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:49:49.999 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:49:49.999 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:50:03.858 UTC [27] LOG:  checkpoint complete: wrote 8409 buffers (51.3%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.211 s, sync=1.552 s, total=13.860 s; sync files=74, longest=1.538 s, average=0.021 s; distance=797789 kB, estimate=809089 kB; lsn=CD/664001D8, redo lsn=CD/479627A8
postgres_container  | 2024-11-05 13:50:03.859 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:50:03.859 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:50:03.859 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:50:22.875 UTC [2654] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:50:22.875 UTC [2654] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:50:23.629 UTC [27] LOG:  checkpoint complete: wrote 1445 buffers (8.8%); 0 WAL file(s) added, 10 removed, 34 recycled; write=16.738 s, sync=1.556 s, total=19.770 s; sync files=57, longest=1.522 s, average=0.028 s; distance=721208 kB, estimate=800301 kB; lsn=CD/90843EB0, redo lsn=CD/739B0BA0
postgres_container  | 2024-11-05 13:50:25.699 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 13:50:25.699 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:50:25.699 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:50:36.237 UTC [27] LOG:  checkpoint complete: wrote 3719 buffers (22.7%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.259 s, sync=3.658 s, total=10.538 s; sync files=222, longest=2.001 s, average=0.017 s; distance=534846 kB, estimate=773756 kB; lsn=CD/B44001D8, redo lsn=CD/944004F8
postgres_container  | 2024-11-05 13:50:36.237 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 13:50:36.237 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:50:36.254 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:50:49.853 UTC [27] LOG:  checkpoint complete: wrote 4591 buffers (28.0%); 0 WAL file(s) added, 11 removed, 30 recycled; write=6.711 s, sync=4.002 s, total=13.616 s; sync files=71, longest=1.857 s, average=0.057 s; distance=671735 kB, estimate=763554 kB; lsn=CD/DE409DC8, redo lsn=CD/BD3FE3C8
postgres_container  | 2024-11-05 13:50:49.853 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:50:49.853 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:50:49.854 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:51:08.872 UTC [2676] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:51:08.872 UTC [2676] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:51:16.462 UTC [27] LOG:  checkpoint complete: wrote 6458 buffers (39.4%); 0 WAL file(s) added, 16 removed, 29 recycled; write=22.171 s, sync=2.231 s, total=26.609 s; sync files=266, longest=0.664 s, average=0.009 s; distance=740712 kB, estimate=761270 kB; lsn=CE/CE7AFC8, redo lsn=CD/EA7583D0
postgres_container  | 2024-11-05 13:51:16.463 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:51:16.463 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:51:16.463 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:51:29.375 UTC [27] LOG:  checkpoint complete: wrote 6362 buffers (38.8%); 0 WAL file(s) added, 14 removed, 33 recycled; write=8.236 s, sync=2.043 s, total=12.913 s; sync files=75, longest=1.101 s, average=0.028 s; distance=770407 kB, estimate=770407 kB; lsn=CE/375BE3F0, redo lsn=CE/197B2350
postgres_container  | 2024-11-05 13:51:29.376 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:51:29.376 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:51:29.376 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:51:41.007 UTC [27] LOG:  checkpoint complete: wrote 2024 buffers (12.4%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.143 s, sync=2.516 s, total=11.632 s; sync files=35, longest=2.289 s, average=0.072 s; distance=726581 kB, estimate=766025 kB; lsn=CE/644062B0, redo lsn=CE/45D3F7B0
postgres_container  | 2024-11-05 13:51:41.008 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:51:41.008 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:51:41.008 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:51:55.178 UTC [2698] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:51:55.178 UTC [2698] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:52:08.754 UTC [27] LOG:  checkpoint complete: wrote 1480 buffers (9.0%); 0 WAL file(s) added, 15 removed, 25 recycled; write=21.108 s, sync=4.576 s, total=27.746 s; sync files=259, longest=1.663 s, average=0.018 s; distance=648098 kB, estimate=754232 kB; lsn=CE/934001D8, redo lsn=CE/6D6280F8
postgres_container  | 2024-11-05 13:52:08.755 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:52:08.755 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:52:08.772 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:52:23.102 UTC [27] LOG:  checkpoint complete: wrote 8317 buffers (50.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.466 s, sync=1.729 s, total=14.348 s; sync files=73, longest=1.595 s, average=0.024 s; distance=798576 kB, estimate=798576 kB; lsn=CE/BD1BC090, redo lsn=CE/9E204190
postgres_container  | 2024-11-05 13:52:23.103 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:52:23.103 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:52:23.103 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:52:41.150 UTC [2720] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:52:41.150 UTC [2720] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:52:44.237 UTC [2715] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:52:44.237 UTC [2715] CONTEXT:  while scanning block 5865 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:52:44.244 UTC [2715] LOG:  skipping vacuum of "pg_toast_463740" --- lock not available
postgres_container  | 2024-11-05 13:52:48.965 UTC [27] LOG:  checkpoint complete: wrote 2535 buffers (15.5%); 0 WAL file(s) added, 16 removed, 28 recycled; write=22.312 s, sync=1.705 s, total=25.863 s; sync files=241, longest=0.075 s, average=0.008 s; distance=733568 kB, estimate=792075 kB; lsn=CE/ED99A0A0, redo lsn=CE/CAE64380
postgres_container  | 2024-11-05 13:52:48.965 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:52:48.965 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:52:48.965 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:53:02.534 UTC [27] LOG:  checkpoint complete: wrote 6235 buffers (38.1%); 0 WAL file(s) added, 13 removed, 31 recycled; write=7.790 s, sync=2.828 s, total=13.569 s; sync files=77, longest=1.455 s, average=0.037 s; distance=717040 kB, estimate=784571 kB; lsn=CF/16200128, redo lsn=CE/F6AA0700
postgres_container  | 2024-11-05 13:53:02.534 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:53:02.534 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:53:02.534 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:53:15.528 UTC [27] LOG:  checkpoint complete: wrote 1706 buffers (10.4%); 0 WAL file(s) added, 15 removed, 32 recycled; write=8.789 s, sync=2.173 s, total=12.994 s; sync files=40, longest=1.174 s, average=0.055 s; distance=763192 kB, estimate=782433 kB; lsn=CF/44CEEC40, redo lsn=CF/253EE848
postgres_container  | 2024-11-05 13:53:15.528 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:53:15.528 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:53:15.528 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:53:27.427 UTC [2741] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:53:27.427 UTC [2741] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:53:42.829 UTC [27] LOG:  checkpoint complete: wrote 1547 buffers (9.4%); 0 WAL file(s) added, 14 removed, 27 recycled; write=19.963 s, sync=4.933 s, total=27.301 s; sync files=221, longest=1.369 s, average=0.023 s; distance=674308 kB, estimate=771621 kB; lsn=CF/722AC880, redo lsn=CF/4E66FA28
postgres_container  | 2024-11-05 13:53:42.830 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:53:42.830 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:53:42.830 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:53:55.970 UTC [27] LOG:  checkpoint complete: wrote 8525 buffers (52.0%); 0 WAL file(s) added, 14 removed, 32 recycled; write=10.283 s, sync=0.326 s, total=13.140 s; sync files=100, longest=0.168 s, average=0.004 s; distance=758040 kB, estimate=770263 kB; lsn=CF/9B7DDEA8, redo lsn=CF/7CAB5B40
postgres_container  | 2024-11-05 13:53:55.970 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:53:55.970 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:53:56.011 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:54:08.476 UTC [27] LOG:  checkpoint complete: wrote 4074 buffers (24.9%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.675 s, sync=1.538 s, total=12.506 s; sync files=44, longest=1.488 s, average=0.035 s; distance=697633 kB, estimate=763000 kB; lsn=CF/C6366540, redo lsn=CF/A73FE070
postgres_container  | 2024-11-05 13:54:08.477 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:54:08.477 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:54:08.477 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:54:17.225 UTC [2763] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:54:17.225 UTC [2763] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:54:29.412 UTC [27] LOG:  checkpoint complete: wrote 163 buffers (1.0%); 0 WAL file(s) added, 2 removed, 32 recycled; write=15.861 s, sync=2.552 s, total=20.935 s; sync files=234, longest=1.334 s, average=0.011 s; distance=555727 kB, estimate=742273 kB; lsn=CF/E8FB1978, redo lsn=CF/C92B1ED0
postgres_container  | 2024-11-05 13:54:29.413 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 13:54:29.413 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:54:29.413 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:54:42.011 UTC [27] LOG:  checkpoint complete: wrote 8315 buffers (50.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.763 s, sync=2.393 s, total=12.598 s; sync files=67, longest=2.196 s, average=0.036 s; distance=694152 kB, estimate=737460 kB; lsn=D0/12440168, redo lsn=CF/F3893F40
postgres_container  | 2024-11-05 13:54:42.012 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:54:42.012 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:54:42.012 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:54:55.089 UTC [27] LOG:  checkpoint complete: wrote 4941 buffers (30.2%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.709 s, sync=3.203 s, total=13.078 s; sync files=99, longest=2.579 s, average=0.033 s; distance=676474 kB, estimate=731362 kB; lsn=D0/3AED8850, redo lsn=D0/1CD327C8
postgres_container  | 2024-11-05 13:55:03.071 UTC [2785] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:55:03.071 UTC [2785] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:55:05.389 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 13:55:05.389 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:55:05.389 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:55:15.900 UTC [27] LOG:  checkpoint complete: wrote 3763 buffers (23.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.981 s, sync=2.868 s, total=10.511 s; sync files=248, longest=1.426 s, average=0.012 s; distance=531263 kB, estimate=711352 kB; lsn=D0/5D082B68, redo lsn=D0/3D4024F8
postgres_container  | 2024-11-05 13:55:15.900 UTC [27] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-05 13:55:15.900 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:55:15.901 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:55:27.747 UTC [27] LOG:  checkpoint complete: wrote 4590 buffers (28.0%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.648 s, sync=2.831 s, total=11.847 s; sync files=28, longest=2.780 s, average=0.102 s; distance=660066 kB, estimate=706223 kB; lsn=D0/83D165F8, redo lsn=D0/6589AD78
postgres_container  | 2024-11-05 13:55:27.748 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:55:27.748 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:55:27.771 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:55:46.985 UTC [2807] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:55:46.985 UTC [2807] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:55:50.677 UTC [27] LOG:  checkpoint complete: wrote 4140 buffers (25.3%); 0 WAL file(s) added, 8 removed, 34 recycled; write=20.850 s, sync=0.565 s, total=22.930 s; sync files=101, longest=0.096 s, average=0.006 s; distance=688124 kB, estimate=704413 kB; lsn=D0/ACBB6B58, redo lsn=D0/8F89A040
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] CONTEXT:  while scanning block 18072 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:55:50.910 UTC [2799] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:55:52.070 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:55:52.070 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:55:52.070 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:56:03.285 UTC [27] LOG:  checkpoint complete: wrote 3864 buffers (23.6%); 0 WAL file(s) added, 3 removed, 30 recycled; write=4.898 s, sync=4.327 s, total=11.215 s; sync files=219, longest=2.017 s, average=0.020 s; distance=535975 kB, estimate=687569 kB; lsn=D0/D149A738, redo lsn=D0/B0403CD8
postgres_container  | 2024-11-05 13:56:03.286 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 13:56:03.286 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:56:03.286 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:56:15.854 UTC [27] LOG:  checkpoint complete: wrote 4587 buffers (28.0%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.048 s, sync=2.321 s, total=12.569 s; sync files=41, longest=1.698 s, average=0.057 s; distance=723590 kB, estimate=723590 kB; lsn=D0/FB402290, redo lsn=D0/DC6A54D8
postgres_container  | 2024-11-05 13:56:15.855 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:56:15.855 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:56:15.855 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:56:31.551 UTC [2828] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:56:31.551 UTC [2828] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:56:40.064 UTC [27] LOG:  checkpoint complete: wrote 2149 buffers (13.1%); 0 WAL file(s) added, 15 removed, 28 recycled; write=19.853 s, sync=2.444 s, total=24.209 s; sync files=220, longest=0.556 s, average=0.012 s; distance=700460 kB, estimate=721277 kB; lsn=D1/2A0D2330, redo lsn=D1/72B0710
postgres_container  | 2024-11-05 13:56:40.064 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 13:56:40.064 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:56:40.064 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:56:52.637 UTC [27] LOG:  checkpoint complete: wrote 6531 buffers (39.9%); 0 WAL file(s) added, 14 removed, 31 recycled; write=7.279 s, sync=3.053 s, total=12.573 s; sync files=93, longest=2.904 s, average=0.033 s; distance=744512 kB, estimate=744512 kB; lsn=D1/54027318, redo lsn=D1/349C08B8
postgres_container  | 2024-11-05 13:56:52.638 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:56:52.638 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:56:52.638 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:57:04.459 UTC [27] LOG:  checkpoint complete: wrote 2022 buffers (12.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.945 s, sync=0.929 s, total=11.821 s; sync files=35, longest=0.766 s, average=0.027 s; distance=707564 kB, estimate=740817 kB; lsn=D1/7E400380, redo lsn=D1/5FCBBB10
postgres_container  | 2024-11-05 13:57:04.460 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 13:57:04.460 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:57:04.460 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:57:15.354 UTC [2850] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:57:15.354 UTC [2850] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:57:30.439 UTC [27] LOG:  checkpoint complete: wrote 1164 buffers (7.1%); 0 WAL file(s) added, 19 removed, 22 recycled; write=18.588 s, sync=5.633 s, total=25.980 s; sync files=223, longest=1.710 s, average=0.026 s; distance=668381 kB, estimate=733574 kB; lsn=D1/B1031758, redo lsn=D1/889730B0
postgres_container  | 2024-11-05 13:57:30.440 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:57:30.440 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:57:30.476 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:57:45.266 UTC [27] LOG:  checkpoint complete: wrote 8315 buffers (50.8%); 0 WAL file(s) added, 19 removed, 31 recycled; write=10.534 s, sync=1.127 s, total=14.827 s; sync files=77, longest=0.636 s, average=0.015 s; distance=813611 kB, estimate=813611 kB; lsn=D1/D9F670A0, redo lsn=D1/BA3FE038
postgres_container  | 2024-11-05 13:57:45.267 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 13:57:45.267 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:57:45.281 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:58:04.781 UTC [2872] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:58:04.781 UTC [2872] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:58:12.529 UTC [27] LOG:  checkpoint complete: wrote 5000 buffers (30.5%); 0 WAL file(s) added, 18 removed, 27 recycled; write=22.157 s, sync=2.400 s, total=27.263 s; sync files=270, longest=0.487 s, average=0.009 s; distance=737280 kB, estimate=805978 kB; lsn=D2/B2EEDC8, redo lsn=D1/E73FE098
postgres_container  | 2024-11-05 13:58:12.530 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 13:58:12.530 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:58:12.559 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:58:25.893 UTC [27] LOG:  checkpoint complete: wrote 6349 buffers (38.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.256 s, sync=0.354 s, total=13.364 s; sync files=73, longest=0.187 s, average=0.005 s; distance=811112 kB, estimate=811112 kB; lsn=D2/377A4CF0, redo lsn=D2/18C18248
postgres_container  | 2024-11-05 13:58:25.893 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:58:25.893 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:58:25.893 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:58:38.302 UTC [27] LOG:  checkpoint complete: wrote 1115 buffers (6.8%); 0 WAL file(s) added, 12 removed, 33 recycled; write=8.364 s, sync=1.926 s, total=12.410 s; sync files=37, longest=1.604 s, average=0.053 s; distance=727934 kB, estimate=802794 kB; lsn=D2/63C1C3A8, redo lsn=D2/452F7DB0
postgres_container  | 2024-11-05 13:58:38.303 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 13:58:38.303 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:58:38.303 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:58:52.448 UTC [2894] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:58:52.448 UTC [2894] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:59:04.879 UTC [27] LOG:  checkpoint complete: wrote 1464 buffers (8.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=21.693 s, sync=2.418 s, total=26.576 s; sync files=256, longest=1.233 s, average=0.010 s; distance=681559 kB, estimate=790671 kB; lsn=D2/8E402630, redo lsn=D2/6EC8D9E8
postgres_container  | 2024-11-05 13:59:04.881 UTC [27] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-05 13:59:04.881 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:59:04.881 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:59:18.259 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 12 removed, 33 recycled; write=7.541 s, sync=2.947 s, total=13.378 s; sync files=77, longest=2.781 s, average=0.039 s; distance=725907 kB, estimate=784194 kB; lsn=D2/B9C09698, redo lsn=D2/9B1727F8
postgres_container  | 2024-11-05 13:59:18.259 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 13:59:18.259 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:59:18.260 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:59:29.301 UTC [27] LOG:  checkpoint complete: wrote 2836 buffers (17.3%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.257 s, sync=2.614 s, total=11.042 s; sync files=40, longest=2.469 s, average=0.066 s; distance=721758 kB, estimate=777951 kB; lsn=D2/E5324578, redo lsn=D2/C724A050
postgres_container  | 2024-11-05 13:59:37.359 UTC [2916] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 13:59:37.359 UTC [2916] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 13:59:38.885 UTC [2913] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 13:59:38.885 UTC [2913] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 13:59:38.885 UTC [2913] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 13:59:38.885 UTC [2913] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 13:59:38.885 UTC [2913] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 13:59:38.886 UTC [2913] LOG:  skipping vacuum of "pg_toast_468721" --- lock not available
postgres_container  | 2024-11-05 13:59:39.907 UTC [27] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-05 13:59:39.907 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:59:39.929 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 13:59:50.123 UTC [27] LOG:  checkpoint complete: wrote 3873 buffers (23.6%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.923 s, sync=2.671 s, total=10.217 s; sync files=256, longest=1.259 s, average=0.011 s; distance=542447 kB, estimate=754400 kB; lsn=D3/847AA60, redo lsn=D2/E8406040
postgres_container  | 2024-11-05 13:59:50.124 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 13:59:50.124 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 13:59:50.124 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:00:03.473 UTC [27] LOG:  checkpoint complete: wrote 4590 buffers (28.0%); 0 WAL file(s) added, 11 removed, 30 recycled; write=7.289 s, sync=3.356 s, total=13.349 s; sync files=41, longest=2.634 s, average=0.082 s; distance=676764 kB, estimate=746637 kB; lsn=D3/32400398, redo lsn=D3/118ED358
postgres_container  | 2024-11-05 14:00:03.474 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:00:03.474 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:00:03.474 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:00:20.112 UTC [2937] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:00:20.112 UTC [2937] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:00:27.958 UTC [27] LOG:  checkpoint complete: wrote 2232 buffers (13.6%); 0 WAL file(s) added, 18 removed, 27 recycled; write=20.121 s, sync=2.236 s, total=24.485 s; sync files=219, longest=0.493 s, average=0.011 s; distance=740852 kB, estimate=746058 kB; lsn=D3/627AE0D8, redo lsn=D3/3EC6A420
postgres_container  | 2024-11-05 14:00:27.958 UTC [27] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-05 14:00:27.958 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:00:27.979 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:00:41.516 UTC [27] LOG:  checkpoint complete: wrote 6800 buffers (41.5%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.725 s, sync=0.324 s, total=13.558 s; sync files=66, longest=0.091 s, average=0.005 s; distance=798695 kB, estimate=798695 kB; lsn=D3/8E017E38, redo lsn=D3/6F8641F8
postgres_container  | 2024-11-05 14:00:41.517 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 14:00:41.517 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:00:41.543 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:00:54.138 UTC [27] LOG:  checkpoint complete: wrote 3539 buffers (21.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.731 s, sync=1.695 s, total=12.621 s; sync files=100, longest=0.740 s, average=0.017 s; distance=680525 kB, estimate=786878 kB; lsn=D3/B84004B8, redo lsn=D3/990F7778
postgres_container  | 2024-11-05 14:00:54.138 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:00:54.138 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:00:54.138 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:01:06.346 UTC [2959] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:01:06.346 UTC [2959] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:01:21.048 UTC [27] LOG:  checkpoint complete: wrote 1439 buffers (8.8%); 0 WAL file(s) added, 12 removed, 29 recycled; write=19.664 s, sync=4.437 s, total=26.911 s; sync files=231, longest=1.416 s, average=0.020 s; distance=674850 kB, estimate=775675 kB; lsn=D3/E4F33C58, redo lsn=D3/C2400220
postgres_container  | 2024-11-05 14:01:21.049 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 14:01:21.049 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:01:21.049 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:01:34.678 UTC [27] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.767 s, sync=1.955 s, total=13.630 s; sync files=72, longest=1.863 s, average=0.028 s; distance=744210 kB, estimate=772529 kB; lsn=D4/E402138, redo lsn=D3/EFAC4CD8
postgres_container  | 2024-11-05 14:01:34.680 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:01:34.680 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:01:34.680 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:01:52.093 UTC [27] LOG:  checkpoint complete: wrote 2839 buffers (17.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.631 s, sync=3.914 s, total=17.414 s; sync files=77, longest=2.715 s, average=0.051 s; distance=721464 kB, estimate=767422 kB; lsn=D4/3A615B98, redo lsn=D4/1BB52E78
postgres_container  | 2024-11-05 14:01:54.485 UTC [2981] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:01:54.485 UTC [2981] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:01:59.841 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 14:01:59.841 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:01:59.841 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:02:10.498 UTC [27] LOG:  checkpoint complete: wrote 3887 buffers (23.7%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.263 s, sync=3.447 s, total=10.658 s; sync files=254, longest=0.943 s, average=0.014 s; distance=533102 kB, estimate=743990 kB; lsn=D4/5C746DE8, redo lsn=D4/3C3EE938
postgres_container  | 2024-11-05 14:02:10.499 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 14:02:10.499 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:02:10.499 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:02:22.732 UTC [27] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=6.512 s, sync=3.263 s, total=12.233 s; sync files=41, longest=2.676 s, average=0.080 s; distance=688189 kB, estimate=738410 kB; lsn=D4/86402090, redo lsn=D4/663FE030
postgres_container  | 2024-11-05 14:02:22.733 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 14:02:22.733 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:02:22.733 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:02:38.180 UTC [3003] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:02:38.180 UTC [3003] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:02:43.701 UTC [3000] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:02:43.701 UTC [3000] CONTEXT:  while scanning block 5685 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 14:02:44.701 UTC [3000] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:02:44.701 UTC [3000] CONTEXT:  while scanning block 4039 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 14:02:44.705 UTC [3000] LOG:  skipping vacuum of "pg_toast_470931" --- lock not available
postgres_container  | 2024-11-05 14:02:49.708 UTC [27] LOG:  checkpoint complete: wrote 2533 buffers (15.5%); 0 WAL file(s) added, 15 removed, 29 recycled; write=23.214 s, sync=2.009 s, total=26.975 s; sync files=233, longest=0.235 s, average=0.009 s; distance=719332 kB, estimate=736502 kB; lsn=D4/B4FF3838, redo lsn=D4/922772B0
postgres_container  | 2024-11-05 14:02:49.709 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 14:02:49.709 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:02:49.709 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:03:02.933 UTC [27] LOG:  checkpoint complete: wrote 6242 buffers (38.1%); 0 WAL file(s) added, 10 removed, 33 recycled; write=6.448 s, sync=3.485 s, total=13.225 s; sync files=77, longest=3.215 s, average=0.046 s; distance=708649 kB, estimate=733717 kB; lsn=D4/DB8513B0, redo lsn=D4/BD681A38
postgres_container  | 2024-11-05 14:03:02.933 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:03:02.933 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:03:02.933 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:03:16.163 UTC [27] LOG:  checkpoint complete: wrote 1891 buffers (11.5%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.526 s, sync=2.207 s, total=13.230 s; sync files=39, longest=1.667 s, average=0.057 s; distance=731521 kB, estimate=733497 kB; lsn=D5/9400800, redo lsn=D4/EA0E21A8
postgres_container  | 2024-11-05 14:03:16.164 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 14:03:16.164 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:03:16.164 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:03:28.753 UTC [3024] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:03:28.753 UTC [3024] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:03:45.649 UTC [27] LOG:  checkpoint complete: wrote 1424 buffers (8.7%); 0 WAL file(s) added, 19 removed, 24 recycled; write=20.652 s, sync=5.459 s, total=29.485 s; sync files=219, longest=1.408 s, average=0.025 s; distance=709495 kB, estimate=731097 kB; lsn=D5/3C402A20, redo lsn=D5/155BFFC8
postgres_container  | 2024-11-05 14:03:45.650 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 14:03:45.650 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:03:45.650 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:04:03.086 UTC [27] LOG:  checkpoint complete: wrote 8525 buffers (52.0%); 0 WAL file(s) added, 23 removed, 30 recycled; write=10.520 s, sync=3.043 s, total=17.437 s; sync files=115, longest=0.926 s, average=0.027 s; distance=864828 kB, estimate=864828 kB; lsn=D5/6B402550, redo lsn=D5/4A24F170
postgres_container  | 2024-11-05 14:04:03.087 UTC [27] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-05 14:04:03.087 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:04:03.087 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:04:18.764 UTC [3046] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:04:18.764 UTC [3046] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:04:31.698 UTC [27] LOG:  checkpoint complete: wrote 3582 buffers (21.9%); 0 WAL file(s) added, 28 removed, 22 recycled; write=22.265 s, sync=3.810 s, total=28.612 s; sync files=233, longest=1.350 s, average=0.017 s; distance=827826 kB, estimate=861128 kB; lsn=D5/A5068198, redo lsn=D5/7CABBC80
postgres_container  | 2024-11-05 14:04:31.699 UTC [27] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-05 14:04:31.699 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:04:31.725 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:04:46.703 UTC [27] LOG:  checkpoint complete: wrote 8336 buffers (50.9%); 0 WAL file(s) added, 23 removed, 31 recycled; write=11.332 s, sync=0.809 s, total=15.005 s; sync files=80, longest=0.295 s, average=0.011 s; distance=877833 kB, estimate=877833 kB; lsn=D5/D24CDE50, redo lsn=D5/B23FE198
postgres_container  | 2024-11-05 14:04:46.704 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 14:04:46.704 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:04:46.704 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:05:00.560 UTC [27] LOG:  checkpoint complete: wrote 5355 buffers (32.7%); 0 WAL file(s) added, 13 removed, 32 recycled; write=8.384 s, sync=3.047 s, total=13.857 s; sync files=99, longest=2.246 s, average=0.031 s; distance=739433 kB, estimate=863993 kB; lsn=D5/FE6516D0, redo lsn=D5/DF6186F0
postgres_container  | 2024-11-05 14:05:00.561 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 14:05:00.561 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:05:00.561 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:05:08.896 UTC [3068] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:05:08.896 UTC [3068] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:05:20.427 UTC [27] LOG:  checkpoint complete: wrote 238 buffers (1.5%); 0 WAL file(s) added, 2 removed, 32 recycled; write=15.846 s, sync=2.298 s, total=19.866 s; sync files=235, longest=1.222 s, average=0.010 s; distance=555600 kB, estimate=833153 kB; lsn=D6/20402110, redo lsn=D6/14AC8A8
postgres_container  | 2024-11-05 14:05:20.428 UTC [27] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-05 14:05:20.428 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:05:20.428 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:05:33.227 UTC [27] LOG:  checkpoint complete: wrote 8315 buffers (50.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.109 s, sync=1.889 s, total=12.800 s; sync files=67, longest=1.749 s, average=0.029 s; distance=659733 kB, estimate=815811 kB; lsn=D6/4874C538, redo lsn=D6/298F1E30
postgres_container  | 2024-11-05 14:05:33.228 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:05:33.228 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:05:33.228 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:05:52.619 UTC [27] LOG:  checkpoint complete: wrote 2081 buffers (12.7%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.248 s, sync=5.094 s, total=19.392 s; sync files=88, longest=1.935 s, average=0.058 s; distance=717823 kB, estimate=806013 kB; lsn=D6/730992F8, redo lsn=D6/555F1D70
postgres_container  | 2024-11-05 14:05:52.910 UTC [3090] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:05:52.910 UTC [3090] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:05:55.361 UTC [27] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-05 14:05:55.361 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:05:55.362 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:06:06.004 UTC [27] LOG:  checkpoint complete: wrote 3867 buffers (23.6%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.617 s, sync=3.086 s, total=10.643 s; sync files=238, longest=1.362 s, average=0.013 s; distance=538425 kB, estimate=779254 kB; lsn=D6/96D15880, redo lsn=D6/763C02A8
postgres_container  | 2024-11-05 14:06:06.005 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 14:06:06.005 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:06:06.005 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:06:19.243 UTC [27] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 13 removed, 31 recycled; write=7.006 s, sync=3.550 s, total=13.238 s; sync files=40, longest=2.795 s, average=0.089 s; distance=719888 kB, estimate=773317 kB; lsn=D6/C21CDC88, redo lsn=D6/A22C43E0
postgres_container  | 2024-11-05 14:06:19.244 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:06:19.244 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:06:19.244 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:06:34.981 UTC [3111] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:06:34.981 UTC [3111] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:06:44.834 UTC [27] LOG:  checkpoint complete: wrote 2768 buffers (16.9%); 0 WAL file(s) added, 18 removed, 26 recycled; write=19.975 s, sync=3.309 s, total=25.591 s; sync files=220, longest=1.147 s, average=0.016 s; distance=722230 kB, estimate=768209 kB; lsn=D6/F3AE06F0, redo lsn=D6/CE411E68
postgres_container  | 2024-11-05 14:06:44.835 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 14:06:44.835 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:06:44.835 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:06:59.461 UTC [27] LOG:  checkpoint complete: wrote 8480 buffers (51.8%); 0 WAL file(s) added, 18 removed, 33 recycled; write=9.612 s, sync=2.358 s, total=14.627 s; sync files=78, longest=2.233 s, average=0.031 s; distance=838585 kB, estimate=838585 kB; lsn=D7/1F9D42C8, redo lsn=D7/1700578
postgres_container  | 2024-11-05 14:06:59.461 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 14:06:59.461 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:06:59.543 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:07:12.035 UTC [27] LOG:  checkpoint complete: wrote 660 buffers (4.0%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.512 s, sync=1.777 s, total=12.574 s; sync files=35, longest=1.745 s, average=0.051 s; distance=717814 kB, estimate=826508 kB; lsn=D7/4B4004C0, redo lsn=D7/2D3FE148
postgres_container  | 2024-11-05 14:07:12.036 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:07:12.036 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:07:12.068 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:07:22.622 UTC [3133] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:07:22.622 UTC [3133] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:07:35.140 UTC [27] LOG:  checkpoint complete: wrote 186 buffers (1.1%); 0 WAL file(s) added, 9 removed, 31 recycled; write=18.447 s, sync=1.933 s, total=23.105 s; sync files=230, longest=1.001 s, average=0.009 s; distance=666439 kB, estimate=810501 kB; lsn=D7/75227978, redo lsn=D7/55ED0068
postgres_container  | 2024-11-05 14:07:35.140 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 14:07:35.140 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:07:35.140 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:07:48.818 UTC [27] LOG:  checkpoint complete: wrote 8282 buffers (50.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.940 s, sync=2.801 s, total=13.678 s; sync files=68, longest=2.362 s, average=0.042 s; distance=712053 kB, estimate=800656 kB; lsn=D7/A04020E8, redo lsn=D7/8162D630
postgres_container  | 2024-11-05 14:07:48.819 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:07:48.819 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:07:48.819 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:08:04.372 UTC [3155] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:08:04.372 UTC [3155] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:08:15.393 UTC [27] LOG:  checkpoint complete: wrote 2223 buffers (13.6%); 0 WAL file(s) added, 18 removed, 25 recycled; write=21.872 s, sync=2.745 s, total=26.575 s; sync files=256, longest=0.347 s, average=0.011 s; distance=714398 kB, estimate=792031 kB; lsn=D7/D2400150, redo lsn=D7/ACFD5160
postgres_container  | 2024-11-05 14:08:15.393 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 14:08:15.393 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:08:15.393 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:08:29.236 UTC [27] LOG:  checkpoint complete: wrote 6414 buffers (39.1%); 0 WAL file(s) added, 18 removed, 32 recycled; write=9.155 s, sync=2.332 s, total=13.843 s; sync files=76, longest=2.189 s, average=0.031 s; distance=804590 kB, estimate=804590 kB; lsn=D7/FD2C6FC8, redo lsn=D7/DE190B98
postgres_container  | 2024-11-05 14:08:29.236 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 14:08:29.236 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:08:29.236 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:08:41.289 UTC [27] LOG:  checkpoint complete: wrote 1328 buffers (8.1%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.478 s, sync=2.507 s, total=12.053 s; sync files=37, longest=1.410 s, average=0.068 s; distance=712485 kB, estimate=795380 kB; lsn=D8/28409378, redo lsn=D8/995A208
postgres_container  | 2024-11-05 14:08:41.289 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 14:08:41.289 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:08:41.289 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:08:54.053 UTC [3177] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:08:54.053 UTC [3177] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:09:08.097 UTC [27] LOG:  checkpoint complete: wrote 2222 buffers (13.6%); 0 WAL file(s) added, 8 removed, 31 recycled; write=22.789 s, sync=1.480 s, total=26.809 s; sync files=254, longest=0.721 s, average=0.006 s; distance=643764 kB, estimate=780218 kB; lsn=D8/5066D790, redo lsn=D8/30E07260
postgres_container  | 2024-11-05 14:09:08.098 UTC [27] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-05 14:09:08.098 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:09:08.098 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:09:20.427 UTC [27] LOG:  checkpoint complete: wrote 8330 buffers (50.8%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.287 s, sync=2.173 s, total=12.330 s; sync files=75, longest=2.097 s, average=0.029 s; distance=705892 kB, estimate=772785 kB; lsn=D8/7A67DD80, redo lsn=D8/5BF605A8
postgres_container  | 2024-11-05 14:09:20.427 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 14:09:20.427 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:09:20.445 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:09:31.322 UTC [27] LOG:  checkpoint complete: wrote 1206 buffers (7.4%); 0 WAL file(s) added, 11 removed, 33 recycled; write=6.535 s, sync=2.638 s, total=10.896 s; sync files=38, longest=2.594 s, average=0.070 s; distance=709238 kB, estimate=766431 kB; lsn=D8/A54091C8, redo lsn=D8/873FE088
postgres_container  | 2024-11-05 14:09:31.323 UTC [27] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-05 14:09:31.323 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:09:31.323 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:09:39.793 UTC [3199] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:09:39.793 UTC [3199] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:09:42.803 UTC [3196] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:09:42.803 UTC [3196] CONTEXT:  while scanning block 4281 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] CONTEXT:  while scanning block 4058 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 14:09:43.803 UTC [3196] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 14:09:43.892 UTC [3196] LOG:  skipping vacuum of "pg_toast_475907" --- lock not available
postgres_container  | 2024-11-05 14:10:02.524 UTC [27] LOG:  checkpoint complete: wrote 173 buffers (1.1%); 0 WAL file(s) added, 4 removed, 32 recycled; write=21.352 s, sync=2.708 s, total=31.201 s; sync files=240, longest=1.439 s, average=0.012 s; distance=593781 kB, estimate=749166 kB; lsn=D8/CA4001C8, redo lsn=D8/AB7DB4D0
postgres_container  | 2024-11-05 14:10:02.570 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:10:22.078 UTC [27] LOG:  checkpoint complete: wrote 8464 buffers (51.7%); 0 WAL file(s) added, 13 removed, 31 recycled; write=13.978 s, sync=1.122 s, total=19.555 s; sync files=88, longest=0.459 s, average=0.013 s; distance=716938 kB, estimate=745943 kB; lsn=D8/F7402290, redo lsn=D8/D73FE098
postgres_container  | 2024-11-05 14:10:22.079 UTC [27] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-05 14:10:22.079 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:10:22.079 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:10:46.317 UTC [3221] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:10:46.317 UTC [3221] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:10:51.284 UTC [3213] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:10:51.284 UTC [3213] CONTEXT:  while scanning block 16634 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 14:10:51.285 UTC [3213] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 14:10:58.662 UTC [27] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 19 removed, 28 recycled; write=30.911 s, sync=2.079 s, total=36.584 s; sync files=234, longest=0.411 s, average=0.009 s; distance=766645 kB, estimate=766645 kB; lsn=D9/290196E0, redo lsn=D9/60AB770
postgres_container  | 2024-11-05 14:10:58.663 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:11:13.960 UTC [27] LOG:  checkpoint complete: wrote 8400 buffers (51.3%); 0 WAL file(s) added, 17 removed, 32 recycled; write=8.840 s, sync=3.897 s, total=15.297 s; sync files=76, longest=3.333 s, average=0.052 s; distance=804838 kB, estimate=804838 kB; lsn=D9/56400108, redo lsn=D9/372A52D8
postgres_container  | 2024-11-05 14:11:13.960 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 14:11:13.960 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:11:13.960 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:11:25.508 UTC [27] LOG:  checkpoint complete: wrote 55 buffers (0.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.142 s, sync=2.730 s, total=11.548 s; sync files=17, longest=2.674 s, average=0.161 s; distance=727817 kB, estimate=797136 kB; lsn=D9/82402418, redo lsn=D9/63967AA0
postgres_container  | 2024-11-05 14:11:25.509 UTC [27] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-05 14:11:25.509 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:11:25.509 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:11:36.014 UTC [3242] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:11:36.014 UTC [3242] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:11:37.925 UTC [3243] LOG:  skipping analyze of "src_labevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 14:11:38.119 UTC [3243] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 14:11:56.237 UTC [27] LOG:  checkpoint complete: wrote 534 buffers (3.3%); 0 WAL file(s) added, 8 removed, 33 recycled; write=25.163 s, sync=2.964 s, total=30.729 s; sync files=229, longest=2.752 s, average=0.013 s; distance=666140 kB, estimate=784037 kB; lsn=D9/AA90A070, redo lsn=D9/8C3EEC78
postgres_container  | 2024-11-05 14:11:56.238 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:12:15.782 UTC [27] LOG:  checkpoint complete: wrote 8430 buffers (51.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=12.556 s, sync=1.440 s, total=19.544 s; sync files=73, longest=1.308 s, average=0.020 s; distance=691071 kB, estimate=774740 kB; lsn=D9/D53FD520, redo lsn=D9/B66CE9B0
postgres_container  | 2024-11-05 14:12:15.783 UTC [27] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-05 14:12:15.783 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:12:15.783 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:12:32.953 UTC [27] LOG:  checkpoint complete: wrote 3079 buffers (18.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=14.196 s, sync=0.590 s, total=17.170 s; sync files=41, longest=0.520 s, average=0.015 s; distance=700964 kB, estimate=767362 kB; lsn=D9/FF562438, redo lsn=D9/E1357B28
postgres_container  | 2024-11-05 14:12:39.247 UTC [3265] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:12:39.247 UTC [3265] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] CONTEXT:  while scanning block 6297 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-05 14:12:43.328 UTC [3260] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-05 14:12:44.114 UTC [27] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-05 14:12:44.114 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:12:44.114 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:12:54.875 UTC [27] LOG:  checkpoint complete: wrote 3857 buffers (23.5%); 0 WAL file(s) added, 2 removed, 31 recycled; write=5.273 s, sync=3.541 s, total=10.761 s; sync files=263, longest=1.582 s, average=0.014 s; distance=539197 kB, estimate=744546 kB; lsn=DA/22C6E408, redo lsn=DA/21E7128
postgres_container  | 2024-11-05 14:12:54.876 UTC [27] LOG:  checkpoints are occurring too frequently (10 seconds apart)
postgres_container  | 2024-11-05 14:12:54.876 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:12:54.876 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:13:08.003 UTC [27] LOG:  checkpoint complete: wrote 4586 buffers (28.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.833 s, sync=2.582 s, total=13.128 s; sync files=41, longest=2.091 s, average=0.063 s; distance=698220 kB, estimate=739913 kB; lsn=DA/4C6A3EB0, redo lsn=DA/2CBC2278
postgres_container  | 2024-11-05 14:13:08.004 UTC [27] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-05 14:13:08.004 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:13:08.004 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:13:22.419 UTC [3286] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:13:22.419 UTC [3286] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:13:33.412 UTC [27] LOG:  checkpoint complete: wrote 2862 buffers (17.5%); 0 WAL file(s) added, 16 removed, 28 recycled; write=21.617 s, sync=1.930 s, total=25.408 s; sync files=223, longest=0.465 s, average=0.009 s; distance=718826 kB, estimate=737805 kB; lsn=DA/7B5204D0, redo lsn=DA/589BCCC8
postgres_container  | 2024-11-05 14:13:33.413 UTC [27] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-05 14:13:33.413 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:13:33.413 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:13:48.995 UTC [27] LOG:  checkpoint complete: wrote 6136 buffers (37.5%); 0 WAL file(s) added, 13 removed, 31 recycled; write=10.393 s, sync=2.488 s, total=15.582 s; sync files=81, longest=1.305 s, average=0.031 s; distance=723393 kB, estimate=736363 kB; lsn=DA/A433DBF8, redo lsn=DA/84C2D168
postgres_container  | 2024-11-05 14:13:48.996 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 14:13:48.996 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:13:49.016 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:14:03.337 UTC [27] LOG:  checkpoint complete: wrote 5705 buffers (34.8%); 0 WAL file(s) added, 14 removed, 31 recycled; write=10.181 s, sync=2.075 s, total=14.342 s; sync files=103, longest=1.378 s, average=0.021 s; distance=735286 kB, estimate=736256 kB; lsn=DA/D1410BC0, redo lsn=DA/B1A3AD20
postgres_container  | 2024-11-05 14:14:03.338 UTC [27] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-05 14:14:03.338 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:14:03.338 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:14:15.904 UTC [3308] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:14:15.904 UTC [3308] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:14:26.785 UTC [27] LOG:  checkpoint complete: wrote 1783 buffers (10.9%); 0 WAL file(s) added, 11 removed, 31 recycled; write=18.826 s, sync=2.107 s, total=23.447 s; sync files=234, longest=1.209 s, average=0.009 s; distance=681808 kB, estimate=730811 kB; lsn=DA/FB4020D8, redo lsn=DA/DB40EFF0
postgres_container  | 2024-11-05 14:14:26.786 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 14:14:26.786 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:14:26.798 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:14:39.046 UTC [27] LOG:  checkpoint complete: wrote 8338 buffers (50.9%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.454 s, sync=1.549 s, total=12.261 s; sync files=68, longest=1.481 s, average=0.023 s; distance=725220 kB, estimate=730252 kB; lsn=DB/260A8C10, redo lsn=DB/78480C0
postgres_container  | 2024-11-05 14:14:39.047 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:14:39.047 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:14:39.047 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:14:52.435 UTC [27] LOG:  checkpoint complete: wrote 3499 buffers (21.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.918 s, sync=3.658 s, total=13.389 s; sync files=96, longest=2.654 s, average=0.039 s; distance=671775 kB, estimate=724404 kB; lsn=DB/5070DE08, redo lsn=DB/308500B8
postgres_container  | 2024-11-05 14:14:52.436 UTC [27] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-05 14:14:52.436 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:14:52.436 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-05 14:15:02.164 UTC [3330] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-05 14:15:02.164 UTC [3330] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-05 14:15:15.380 UTC [27] LOG:  checkpoint complete: wrote 278 buffers (1.7%); 0 WAL file(s) added, 7 removed, 30 recycled; write=17.853 s, sync=3.073 s, total=22.945 s; sync files=241, longest=1.589 s, average=0.013 s; distance=612518 kB, estimate=713216 kB; lsn=DB/75F5F8E0, redo lsn=DB/55E79A38
postgres_container  | 2024-11-05 14:15:15.381 UTC [27] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-05 14:15:15.381 UTC [27] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-05 14:15:15.381 UTC [27] LOG:  checkpoint starting: wal
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-07 11:45:17.790 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-07 11:45:17.791 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-07 11:45:17.791 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-07 11:45:17.836 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-07 11:45:18.045 UTC [29] LOG:  database system was interrupted; last known up at 2024-11-05 14:15:25 UTC
postgres_container  | 2024-11-07 11:45:19.165 UTC [29] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-07 11:45:19.319 UTC [29] LOG:  redo starts at DB/7FEB7BD0
postgres_container  | 2024-11-07 11:45:29.329 UTC [29] LOG:  redo in progress, elapsed time: 10.00 s, current LSN: DB/859FB288
postgres_container  | 2024-11-07 11:45:30.723 UTC [30] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:45:30.723 UTC [30] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:45:35.670 UTC [31] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:45:35.670 UTC [31] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:45:38.439 UTC [1] LOG:  received fast shutdown request
postgres_container  | 
postgres_container  | PostgreSQL Database directory appears to contain a database; Skipping initialization
postgres_container  | 
postgres_container  | 2024-11-07 11:46:24.714 UTC [1] LOG:  starting PostgreSQL 17.0 (Debian 17.0-1.pgdg120+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 12.2.0-14) 12.2.0, 64-bit
postgres_container  | 2024-11-07 11:46:24.715 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres_container  | 2024-11-07 11:46:24.715 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres_container  | 2024-11-07 11:46:24.761 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres_container  | 2024-11-07 11:46:24.835 UTC [28] LOG:  database system was shut down in recovery at 2024-11-07 11:45:38 UTC
postgres_container  | 2024-11-07 11:46:24.839 UTC [28] LOG:  database system was not properly shut down; automatic recovery in progress
postgres_container  | 2024-11-07 11:46:24.875 UTC [28] LOG:  redo starts at DB/7FEB7BD0
postgres_container  | 2024-11-07 11:46:26.380 UTC [29] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:46:26.380 UTC [29] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:46:32.578 UTC [30] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:46:32.578 UTC [30] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:46:35.226 UTC [28] LOG:  redo in progress, elapsed time: 10.35 s, current LSN: DB/8DA749D0
postgres_container  | 2024-11-07 11:46:40.771 UTC [31] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:46:40.771 UTC [31] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:46:44.908 UTC [28] LOG:  redo in progress, elapsed time: 20.03 s, current LSN: DB/932FB270
postgres_container  | 2024-11-07 11:46:47.563 UTC [32] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:46:47.563 UTC [32] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:46:54.894 UTC [28] LOG:  redo in progress, elapsed time: 30.01 s, current LSN: DB/992FB258
postgres_container  | 2024-11-07 11:46:58.264 UTC [33] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:46:58.264 UTC [33] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:47:03.873 UTC [34] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:47:03.873 UTC [34] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:47:04.879 UTC [28] LOG:  redo in progress, elapsed time: 40.00 s, current LSN: DB/9E61B2A0
postgres_container  | 2024-11-07 11:47:13.134 UTC [35] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:47:13.134 UTC [35] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:47:14.939 UTC [28] LOG:  redo in progress, elapsed time: 50.06 s, current LSN: DB/A391AF78
postgres_container  | 2024-11-07 11:47:19.800 UTC [28] LOG:  unexpected pageaddr DB/598AC000 in WAL segment 00000001000000DB000000A5, LSN DB/A58AC000, offset 9093120
postgres_container  | 2024-11-07 11:47:19.800 UTC [28] LOG:  redo done at DB/A58ABF78 system usage: CPU: user: 4.73 s, system: 1.42 s, elapsed: 54.92 s
postgres_container  | 2024-11-07 11:47:20.034 UTC [26] LOG:  checkpoint starting: end-of-recovery immediate wait
postgres_container  | 2024-11-07 11:47:28.547 UTC [36] FATAL:  the database system is not yet accepting connections
postgres_container  | 2024-11-07 11:47:28.547 UTC [36] DETAIL:  Consistent recovery state has not been yet reached.
postgres_container  | 2024-11-07 11:47:33.948 UTC [26] LOG:  checkpoint complete: wrote 16146 buffers (98.5%); 0 WAL file(s) added, 10 removed, 51 recycled; write=0.339 s, sync=6.881 s, total=13.958 s; sync files=44, longest=3.722 s, average=0.157 s; distance=616401 kB, estimate=616401 kB; lsn=DB/A58AC048, redo lsn=DB/A58AC048
postgres_container  | 2024-11-07 11:47:33.980 UTC [1] LOG:  database system is ready to accept connections
postgres_container  | 2024-11-07 11:49:16.092 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:49:57.093 UTC [26] LOG:  checkpoint complete: wrote 4224 buffers (25.8%); 0 WAL file(s) added, 1 removed, 32 recycled; write=36.995 s, sync=1.197 s, total=41.002 s; sync files=235, longest=0.752 s, average=0.006 s; distance=535880 kB, estimate=608349 kB; lsn=DB/E58502F0, redo lsn=DB/C63FE190
postgres_container  | 2024-11-07 11:49:57.094 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:50:16.341 UTC [26] LOG:  checkpoint complete: wrote 1594 buffers (9.7%); 0 WAL file(s) added, 7 removed, 32 recycled; write=14.410 s, sync=2.266 s, total=19.247 s; sync files=47, longest=2.047 s, average=0.049 s; distance=647515 kB, estimate=647515 kB; lsn=DC/C8A22A0, redo lsn=DB/EDC55080
postgres_container  | 2024-11-07 11:50:16.341 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-07 11:50:16.341 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:50:16.341 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:50:31.460 UTC [63] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:50:31.460 UTC [63] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:50:53.846 UTC [26] LOG:  checkpoint complete: wrote 480 buffers (2.9%); 0 WAL file(s) added, 8 removed, 31 recycled; write=30.754 s, sync=3.600 s, total=37.505 s; sync files=230, longest=1.828 s, average=0.016 s; distance=640411 kB, estimate=646805 kB; lsn=DC/3490EC30, redo lsn=DC/14DBBD98
postgres_container  | 2024-11-07 11:50:53.847 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:51:13.884 UTC [26] LOG:  checkpoint complete: wrote 5636 buffers (34.4%); 0 WAL file(s) added, 9 removed, 32 recycled; write=14.265 s, sync=2.670 s, total=20.037 s; sync files=96, longest=1.390 s, average=0.028 s; distance=666237 kB, estimate=666237 kB; lsn=DC/5C40E0E8, redo lsn=DC/3D85B410
postgres_container  | 2024-11-07 11:51:13.884 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-07 11:51:13.884 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:51:13.991 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:51:31.977 UTC [26] LOG:  checkpoint complete: wrote 4689 buffers (28.6%); 0 WAL file(s) added, 10 removed, 32 recycled; write=14.980 s, sync=0.456 s, total=18.093 s; sync files=63, longest=0.131 s, average=0.008 s; distance=683667 kB, estimate=683667 kB; lsn=DC/86402060, redo lsn=DC/67400078
postgres_container  | 2024-11-07 11:51:31.978 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 11:51:31.978 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:51:31.978 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:51:54.102 UTC [86] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:51:54.102 UTC [86] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:51:56.861 UTC [83] LOG:  skipping analyze of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 11:51:57.862 UTC [83] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 11:51:57.862 UTC [83] CONTEXT:  while scanning block 3841 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-07 11:51:57.862 UTC [83] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 11:51:57.862 UTC [83] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 11:52:11.089 UTC [26] LOG:  checkpoint complete: wrote 410 buffers (2.5%); 0 WAL file(s) added, 2 removed, 32 recycled; write=33.671 s, sync=3.762 s, total=39.112 s; sync files=231, longest=1.425 s, average=0.017 s; distance=553900 kB, estimate=670690 kB; lsn=DC/A84055A0, redo lsn=DC/890EB280
postgres_container  | 2024-11-07 11:52:11.090 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:52:23.475 UTC [26] LOG:  checkpoint complete: wrote 8324 buffers (50.8%); 0 WAL file(s) added, 6 removed, 32 recycled; write=7.342 s, sync=2.799 s, total=12.386 s; sync files=71, longest=2.660 s, average=0.040 s; distance=629255 kB, estimate=666546 kB; lsn=DC/CE1D8C40, redo lsn=DC/AF76CEA8
postgres_container  | 2024-11-07 11:52:23.479 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 11:52:23.479 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:52:23.479 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:52:36.275 UTC [26] LOG:  checkpoint complete: wrote 2727 buffers (16.6%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.373 s, sync=2.450 s, total=12.797 s; sync files=39, longest=2.218 s, average=0.063 s; distance=663231 kB, estimate=666215 kB; lsn=DC/F6400290, redo lsn=DC/D7F1CD40
postgres_container  | 2024-11-07 11:52:36.276 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 11:52:36.276 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:52:36.276 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:52:46.470 UTC [107] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:52:46.470 UTC [107] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:53:04.511 UTC [26] LOG:  checkpoint complete: wrote 92 buffers (0.6%); 0 WAL file(s) added, 13 removed, 22 recycled; write=18.730 s, sync=7.868 s, total=28.236 s; sync files=242, longest=1.771 s, average=0.033 s; distance=570339 kB, estimate=656627 kB; lsn=DD/23400178, redo lsn=DC/FAC15BD8
postgres_container  | 2024-11-07 11:53:04.512 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 11:53:04.512 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:53:04.512 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:53:19.905 UTC [26] LOG:  checkpoint complete: wrote 8524 buffers (52.0%); 0 WAL file(s) added, 16 removed, 31 recycled; write=11.912 s, sync=1.042 s, total=15.394 s; sync files=112, longest=0.337 s, average=0.010 s; distance=761865 kB, estimate=761865 kB; lsn=DD/49915F00, redo lsn=DD/29418168
postgres_container  | 2024-11-07 11:53:19.906 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 11:53:19.906 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:53:20.014 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:53:38.005 UTC [129] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:53:38.005 UTC [129] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:53:47.630 UTC [26] LOG:  checkpoint complete: wrote 3484 buffers (21.3%); 0 WAL file(s) added, 16 removed, 27 recycled; write=22.202 s, sync=3.265 s, total=27.724 s; sync files=226, longest=0.517 s, average=0.015 s; distance=704407 kB, estimate=756119 kB; lsn=DD/7898A130, redo lsn=DD/543FE020
postgres_container  | 2024-11-07 11:53:47.630 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 11:53:47.630 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:53:47.630 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:54:04.067 UTC [26] LOG:  checkpoint complete: wrote 6334 buffers (38.7%); 0 WAL file(s) added, 16 removed, 30 recycled; write=12.070 s, sync=2.127 s, total=16.438 s; sync files=90, longest=1.260 s, average=0.024 s; distance=759703 kB, estimate=759703 kB; lsn=DD/A3402130, redo lsn=DD/829E3E68
postgres_container  | 2024-11-07 11:54:04.068 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 11:54:04.068 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:54:04.068 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:54:20.177 UTC [26] LOG:  checkpoint complete: wrote 5833 buffers (35.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=11.053 s, sync=2.388 s, total=16.110 s; sync files=104, longest=1.337 s, average=0.023 s; distance=694866 kB, estimate=753219 kB; lsn=DD/CC9CCE88, redo lsn=DD/AD078720
postgres_container  | 2024-11-07 11:54:20.178 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 11:54:20.178 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:54:20.178 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:54:30.157 UTC [151] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:54:30.157 UTC [151] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:54:49.639 UTC [26] LOG:  checkpoint complete: wrote 1683 buffers (10.3%); 0 WAL file(s) added, 17 removed, 24 recycled; write=22.275 s, sync=4.940 s, total=29.462 s; sync files=228, longest=1.400 s, average=0.022 s; distance=687039 kB, estimate=746601 kB; lsn=DD/FD681100, redo lsn=DD/D6F68370
postgres_container  | 2024-11-07 11:54:49.641 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 11:54:49.641 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:54:49.641 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:55:06.999 UTC [26] LOG:  checkpoint complete: wrote 8316 buffers (50.8%); 0 WAL file(s) added, 18 removed, 30 recycled; write=12.214 s, sync=2.094 s, total=17.359 s; sync files=87, longest=1.029 s, average=0.025 s; distance=783089 kB, estimate=783089 kB; lsn=DE/276070F0, redo lsn=DE/6C24A80
postgres_container  | 2024-11-07 11:55:07.000 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 11:55:07.000 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:55:07.000 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:55:20.566 UTC [26] LOG:  checkpoint complete: wrote 5071 buffers (31.0%); 0 WAL file(s) added, 11 removed, 33 recycled; write=9.740 s, sync=2.414 s, total=13.566 s; sync files=103, longest=2.228 s, average=0.024 s; distance=711737 kB, estimate=775954 kB; lsn=DE/50173A08, redo lsn=DE/32333138
postgres_container  | 2024-11-07 11:55:29.459 UTC [173] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:55:29.459 UTC [173] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:55:32.154 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 11:55:32.154 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:55:32.154 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:55:45.189 UTC [26] LOG:  checkpoint complete: wrote 3798 buffers (23.2%); 0 WAL file(s) added, 4 removed, 29 recycled; write=6.262 s, sync=4.504 s, total=13.035 s; sync files=247, longest=1.554 s, average=0.019 s; distance=541513 kB, estimate=752510 kB; lsn=DE/754021B8, redo lsn=DE/534055D0
postgres_container  | 2024-11-07 11:55:45.189 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 11:55:45.189 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:55:45.189 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:55:59.467 UTC [26] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.476 s, sync=3.354 s, total=14.278 s; sync files=49, longest=2.417 s, average=0.069 s; distance=701118 kB, estimate=747371 kB; lsn=DE/9E4042B8, redo lsn=DE/7E0B4F30
postgres_container  | 2024-11-07 11:55:59.468 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 11:55:59.468 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:55:59.468 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:56:19.857 UTC [195] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:56:19.857 UTC [195] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:56:28.268 UTC [26] LOG:  checkpoint complete: wrote 7923 buffers (48.4%); 0 WAL file(s) added, 15 removed, 26 recycled; write=23.996 s, sync=2.841 s, total=28.800 s; sync files=259, longest=0.291 s, average=0.011 s; distance=678257 kB, estimate=740459 kB; lsn=DE/CC5F1DC8, redo lsn=DE/A77116D8
postgres_container  | 2024-11-07 11:56:28.270 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 11:56:28.270 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:56:28.270 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:56:42.376 UTC [26] LOG:  checkpoint complete: wrote 6149 buffers (37.5%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.836 s, sync=2.037 s, total=14.107 s; sync files=75, longest=1.837 s, average=0.028 s; distance=746389 kB, estimate=746389 kB; lsn=DE/F3575ED8, redo lsn=DE/D4FF6D30
postgres_container  | 2024-11-07 11:56:42.378 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 11:56:42.378 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:56:42.378 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:56:55.600 UTC [26] LOG:  checkpoint complete: wrote 2209 buffers (13.5%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.767 s, sync=2.966 s, total=13.223 s; sync files=39, longest=1.795 s, average=0.077 s; distance=662489 kB, estimate=737999 kB; lsn=DF/1C409AB0, redo lsn=DE/FD6ED508
postgres_container  | 2024-11-07 11:56:55.601 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 11:56:55.601 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:56:55.601 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:57:09.848 UTC [217] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:57:09.848 UTC [217] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:57:26.977 UTC [26] LOG:  checkpoint complete: wrote 3078 buffers (18.8%); 0 WAL file(s) added, 17 removed, 22 recycled; write=24.438 s, sync=5.057 s, total=31.376 s; sync files=265, longest=0.999 s, average=0.020 s; distance=643817 kB, estimate=728581 kB; lsn=DF/4D402150, redo lsn=DF/24BA7CE0
postgres_container  | 2024-11-07 11:57:26.978 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:57:41.679 UTC [26] LOG:  checkpoint complete: wrote 8326 buffers (50.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.049 s, sync=2.919 s, total=14.702 s; sync files=75, longest=2.729 s, average=0.039 s; distance=793651 kB, estimate=793651 kB; lsn=DF/74400110, redo lsn=DF/552B4C28
postgres_container  | 2024-11-07 11:57:41.681 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 11:57:41.681 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:57:41.681 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:57:55.008 UTC [26] LOG:  checkpoint complete: wrote 852 buffers (5.2%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.071 s, sync=1.520 s, total=13.328 s; sync files=39, longest=1.375 s, average=0.039 s; distance=693120 kB, estimate=783598 kB; lsn=DF/9DA30970, redo lsn=DF/7F794C78
postgres_container  | 2024-11-07 11:57:55.009 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 11:57:55.009 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:57:55.009 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:58:04.792 UTC [239] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:58:04.792 UTC [239] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:58:23.753 UTC [26] LOG:  checkpoint complete: wrote 343 buffers (2.1%); 0 WAL file(s) added, 9 removed, 29 recycled; write=21.982 s, sync=4.774 s, total=28.745 s; sync files=252, longest=2.960 s, average=0.019 s; distance=620673 kB, estimate=767306 kB; lsn=DF/C7785FC0, redo lsn=DF/A55B5350
postgres_container  | 2024-11-07 11:58:23.754 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 11:58:23.754 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:58:23.755 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:58:38.093 UTC [26] LOG:  checkpoint complete: wrote 8320 buffers (50.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.569 s, sync=2.938 s, total=14.339 s; sync files=69, longest=2.780 s, average=0.043 s; distance=700843 kB, estimate=760659 kB; lsn=DF/EE6EAC70, redo lsn=DF/D021FF80
postgres_container  | 2024-11-07 11:58:38.094 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 11:58:38.094 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:58:38.094 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:58:59.314 UTC [261] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:58:59.314 UTC [261] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:59:02.857 UTC [256] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 11:59:02.857 UTC [256] CONTEXT:  while scanning block 7530 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 11:59:03.858 UTC [256] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 11:59:03.858 UTC [256] CONTEXT:  while scanning block 4003 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 11:59:04.858 UTC [256] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 11:59:04.858 UTC [256] CONTEXT:  while scanning block 3877 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 11:59:04.872 UTC [256] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 11:59:04.872 UTC [256] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 11:59:04.872 UTC [256] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 11:59:04.878 UTC [256] LOG:  skipping vacuum of "pg_toast_490429" --- lock not available
postgres_container  | 2024-11-07 11:59:08.782 UTC [26] LOG:  checkpoint complete: wrote 4145 buffers (25.3%); 0 WAL file(s) added, 13 removed, 29 recycled; write=27.259 s, sync=1.752 s, total=30.689 s; sync files=205, longest=0.100 s, average=0.009 s; distance=694142 kB, estimate=754008 kB; lsn=E0/1C4001F8, redo lsn=DF/FA7FFA58
postgres_container  | 2024-11-07 11:59:08.783 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:59:22.850 UTC [26] LOG:  checkpoint complete: wrote 5915 buffers (36.1%); 0 WAL file(s) added, 7 removed, 33 recycled; write=10.249 s, sync=1.663 s, total=14.068 s; sync files=102, longest=1.399 s, average=0.017 s; distance=651257 kB, estimate=743733 kB; lsn=E0/40E6B598, redo lsn=E0/223FE0F0
postgres_container  | 2024-11-07 11:59:22.852 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 11:59:22.852 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:59:22.852 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:59:35.755 UTC [26] LOG:  checkpoint complete: wrote 2557 buffers (15.6%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.642 s, sync=3.028 s, total=12.904 s; sync files=39, longest=0.795 s, average=0.078 s; distance=654240 kB, estimate=734783 kB; lsn=E0/694002D0, redo lsn=E0/4A2E6378
postgres_container  | 2024-11-07 11:59:35.756 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 11:59:35.756 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 11:59:35.756 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 11:59:51.227 UTC [282] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 11:59:51.227 UTC [282] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 11:59:56.450 UTC [283] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 11:59:56.451 UTC [283] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:00:05.474 UTC [26] LOG:  checkpoint complete: wrote 2131 buffers (13.0%); 0 WAL file(s) added, 13 removed, 26 recycled; write=23.321 s, sync=4.070 s, total=29.719 s; sync files=224, longest=1.191 s, average=0.019 s; distance=652273 kB, estimate=726532 kB; lsn=E0/96402468, redo lsn=E0/71FE2B28
postgres_container  | 2024-11-07 12:00:05.475 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:00:19.723 UTC [26] LOG:  checkpoint complete: wrote 6432 buffers (39.3%); 0 WAL file(s) added, 15 removed, 32 recycled; write=9.100 s, sync=2.978 s, total=14.249 s; sync files=74, longest=2.068 s, average=0.041 s; distance=756503 kB, estimate=756503 kB; lsn=E0/BF5B68E0, redo lsn=E0/A02A8958
postgres_container  | 2024-11-07 12:00:19.725 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:00:19.725 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:00:19.725 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:00:33.270 UTC [26] LOG:  checkpoint complete: wrote 2027 buffers (12.4%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.060 s, sync=3.121 s, total=13.545 s; sync files=37, longest=1.434 s, average=0.085 s; distance=680302 kB, estimate=748883 kB; lsn=E0/E94022D0, redo lsn=E0/C9B04300
postgres_container  | 2024-11-07 12:00:33.271 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:00:33.271 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:00:33.271 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:00:44.649 UTC [304] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:00:44.649 UTC [304] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:01:02.181 UTC [26] LOG:  checkpoint complete: wrote 1298 buffers (7.9%); 0 WAL file(s) added, 17 removed, 24 recycled; write=20.039 s, sync=6.460 s, total=28.911 s; sync files=231, longest=2.012 s, average=0.028 s; distance=662429 kB, estimate=740238 kB; lsn=E1/19427690, redo lsn=E0/F21EB8F8
postgres_container  | 2024-11-07 12:01:02.182 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:01:02.182 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:01:02.182 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:01:18.200 UTC [26] LOG:  checkpoint complete: wrote 8505 buffers (51.9%); 0 WAL file(s) added, 15 removed, 33 recycled; write=12.881 s, sync=0.540 s, total=16.018 s; sync files=100, longest=0.368 s, average=0.006 s; distance=787247 kB, estimate=787247 kB; lsn=E1/407E5AB8, redo lsn=E1/222B7610
postgres_container  | 2024-11-07 12:01:18.201 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:01:18.201 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:01:18.239 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:01:31.206 UTC [26] LOG:  checkpoint complete: wrote 3143 buffers (19.2%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.578 s, sync=2.423 s, total=13.006 s; sync files=50, longest=2.102 s, average=0.049 s; distance=673050 kB, estimate=775827 kB; lsn=E1/6A0DBC60, redo lsn=E1/4B3FE030
postgres_container  | 2024-11-07 12:01:31.207 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:01:31.207 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:01:31.207 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:01:40.404 UTC [326] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:01:40.404 UTC [326] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:01:53.846 UTC [26] LOG:  checkpoint complete: wrote 169 buffers (1.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=17.742 s, sync=3.007 s, total=22.640 s; sync files=227, longest=1.462 s, average=0.014 s; distance=540844 kB, estimate=752329 kB; lsn=E1/8C41BAE0, redo lsn=E1/6C4293A0
postgres_container  | 2024-11-07 12:01:53.850 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 12:01:53.850 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:01:53.873 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:02:08.117 UTC [26] LOG:  checkpoint complete: wrote 8421 buffers (51.4%); 0 WAL file(s) added, 6 removed, 32 recycled; write=9.218 s, sync=2.623 s, total=14.267 s; sync files=96, longest=1.498 s, average=0.028 s; distance=630410 kB, estimate=740137 kB; lsn=E1/B19161D0, redo lsn=E1/92BCBD10
postgres_container  | 2024-11-07 12:02:08.118 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:02:08.118 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:02:08.118 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:02:21.556 UTC [26] LOG:  checkpoint complete: wrote 5887 buffers (35.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.544 s, sync=2.468 s, total=13.438 s; sync files=46, longest=2.075 s, average=0.054 s; distance=666855 kB, estimate=732809 kB; lsn=E1/DA4002E0, redo lsn=E1/BB705AB8
postgres_container  | 2024-11-07 12:02:21.557 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:02:21.557 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:02:21.557 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:02:28.941 UTC [348] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:02:28.941 UTC [348] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:02:44.602 UTC [26] LOG:  checkpoint complete: wrote 108 buffers (0.7%); 0 WAL file(s) added, 4 removed, 31 recycled; write=17.599 s, sync=3.294 s, total=23.046 s; sync files=235, longest=0.986 s, average=0.015 s; distance=566691 kB, estimate=716197 kB; lsn=E1/FE5D5400, redo lsn=E1/DE06E908
postgres_container  | 2024-11-07 12:02:44.603 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:02:44.603 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:02:44.604 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:02:58.772 UTC [26] LOG:  checkpoint complete: wrote 8307 buffers (50.7%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.893 s, sync=2.959 s, total=14.169 s; sync files=71, longest=2.529 s, average=0.042 s; distance=682381 kB, estimate=712815 kB; lsn=E2/27402148, redo lsn=E2/7AD1EE8
postgres_container  | 2024-11-07 12:02:58.773 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:02:58.773 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:02:58.814 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:03:13.238 UTC [26] LOG:  checkpoint complete: wrote 5247 buffers (32.0%); 0 WAL file(s) added, 7 removed, 33 recycled; write=9.856 s, sync=2.134 s, total=14.466 s; sync files=98, longest=1.931 s, average=0.022 s; distance=645680 kB, estimate=706102 kB; lsn=E2/4D545450, redo lsn=E2/2F15E058
postgres_container  | 2024-11-07 12:03:13.240 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:03:13.240 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:03:13.241 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:03:22.652 UTC [370] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:03:22.652 UTC [370] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:03:39.324 UTC [26] LOG:  checkpoint complete: wrote 254 buffers (1.6%); 0 WAL file(s) added, 9 removed, 23 recycled; write=17.719 s, sync=6.817 s, total=26.084 s; sync files=229, longest=1.777 s, average=0.030 s; distance=536334 kB, estimate=689125 kB; lsn=E2/77E1E130, redo lsn=E2/4FD21870
postgres_container  | 2024-11-07 12:03:39.325 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:03:39.325 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:03:39.325 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:03:53.858 UTC [26] LOG:  checkpoint complete: wrote 8338 buffers (50.9%); 0 WAL file(s) added, 16 removed, 30 recycled; write=8.418 s, sync=3.718 s, total=14.534 s; sync files=88, longest=2.589 s, average=0.043 s; distance=752563 kB, estimate=752563 kB; lsn=E2/9E9C5EA0, redo lsn=E2/7DC0E7B0
postgres_container  | 2024-11-07 12:03:53.859 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:03:53.859 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:03:53.859 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:04:11.403 UTC [392] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:04:11.403 UTC [392] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:04:22.108 UTC [26] LOG:  checkpoint complete: wrote 6831 buffers (41.7%); 0 WAL file(s) added, 14 removed, 28 recycled; write=23.654 s, sync=2.707 s, total=28.249 s; sync files=259, longest=0.520 s, average=0.011 s; distance=678365 kB, estimate=745144 kB; lsn=E2/CA6F0600, redo lsn=E2/A7285F50
postgres_container  | 2024-11-07 12:04:22.109 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:04:22.109 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:04:22.109 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:04:36.307 UTC [26] LOG:  checkpoint complete: wrote 6169 buffers (37.7%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.247 s, sync=3.901 s, total=14.199 s; sync files=74, longest=3.809 s, average=0.053 s; distance=698690 kB, estimate=740498 kB; lsn=E2/F068A808, redo lsn=E2/D1CD67F8
postgres_container  | 2024-11-07 12:04:36.308 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:04:36.308 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:04:36.309 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:04:52.094 UTC [26] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.773 s, sync=2.860 s, total=15.786 s; sync files=38, longest=2.157 s, average=0.076 s; distance=646310 kB, estimate=731079 kB; lsn=E3/1877E500, redo lsn=E2/F9400028
postgres_container  | 2024-11-07 12:04:52.096 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:04:52.096 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:04:52.096 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:05:14.209 UTC [414] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:05:14.209 UTC [414] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:05:33.619 UTC [26] LOG:  checkpoint complete: wrote 2389 buffers (14.6%); 0 WAL file(s) added, 17 removed, 26 recycled; write=34.605 s, sync=4.971 s, total=41.523 s; sync files=258, longest=1.125 s, average=0.020 s; distance=707509 kB, estimate=728722 kB; lsn=E3/497597C8, redo lsn=E3/246ED678
postgres_container  | 2024-11-07 12:05:33.621 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:05:48.485 UTC [26] LOG:  checkpoint complete: wrote 8329 buffers (50.8%); 0 WAL file(s) added, 12 removed, 32 recycled; write=11.778 s, sync=0.567 s, total=14.867 s; sync files=77, longest=0.340 s, average=0.008 s; distance=714480 kB, estimate=727298 kB; lsn=E3/6F400108, redo lsn=E3/500A9A00
postgres_container  | 2024-11-07 12:05:48.486 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:05:48.486 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:05:48.520 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:06:02.775 UTC [26] LOG:  checkpoint complete: wrote 68 buffers (0.4%); 0 WAL file(s) added, 8 removed, 32 recycled; write=9.739 s, sync=2.122 s, total=14.289 s; sync files=51, longest=0.895 s, average=0.042 s; distance=658777 kB, estimate=720446 kB; lsn=E3/974042C0, redo lsn=E3/78400150
postgres_container  | 2024-11-07 12:06:02.775 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:06:02.775 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:06:02.775 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:06:16.374 UTC [436] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:06:16.374 UTC [436] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:06:32.288 UTC [26] LOG:  checkpoint complete: wrote 1119 buffers (6.8%); 0 WAL file(s) added, 13 removed, 27 recycled; write=22.687 s, sync=4.448 s, total=29.513 s; sync files=247, longest=1.080 s, average=0.019 s; distance=663935 kB, estimate=714795 kB; lsn=E3/C46EDD60, redo lsn=E3/A0C5FDD8
postgres_container  | 2024-11-07 12:06:32.289 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:06:47.576 UTC [26] LOG:  checkpoint complete: wrote 8320 buffers (50.8%); 0 WAL file(s) added, 14 removed, 32 recycled; write=11.830 s, sync=0.799 s, total=15.288 s; sync files=73, longest=0.676 s, average=0.011 s; distance=752076 kB, estimate=752076 kB; lsn=E3/ED402200, redo lsn=E3/CEAD3028
postgres_container  | 2024-11-07 12:06:47.577 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:06:47.577 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:06:47.577 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:07:02.951 UTC [26] LOG:  checkpoint complete: wrote 3971 buffers (24.2%); 0 WAL file(s) added, 9 removed, 34 recycled; write=11.298 s, sync=1.188 s, total=15.374 s; sync files=72, longest=0.272 s, average=0.017 s; distance=694727 kB, estimate=746341 kB; lsn=E4/16E47B38, redo lsn=E3/F9144C68
postgres_container  | 2024-11-07 12:07:09.914 UTC [458] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:07:09.914 UTC [458] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:07:14.728 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:07:14.728 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:07:14.728 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:07:26.850 UTC [26] LOG:  checkpoint complete: wrote 3874 buffers (23.6%); 0 WAL file(s) added, 2 removed, 31 recycled; write=7.789 s, sync=2.281 s, total=12.123 s; sync files=248, longest=1.219 s, average=0.010 s; distance=541025 kB, estimate=725810 kB; lsn=E4/3A0B8188, redo lsn=E4/1A19D340
postgres_container  | 2024-11-07 12:07:26.851 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:07:26.851 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:07:26.851 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:07:40.185 UTC [26] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 7 removed, 32 recycled; write=8.068 s, sync=2.807 s, total=13.334 s; sync files=26, longest=2.594 s, average=0.108 s; distance=641542 kB, estimate=717383 kB; lsn=E4/6018E350, redo lsn=E4/4141EEE8
postgres_container  | 2024-11-07 12:07:40.186 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:07:40.186 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:07:40.186 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:07:52.895 UTC [26] LOG:  checkpoint complete: wrote 3335 buffers (20.4%); 0 WAL file(s) added, 7 removed, 33 recycled; write=10.530 s, sync=0.280 s, total=12.710 s; sync files=39, longest=0.141 s, average=0.008 s; distance=655301 kB, estimate=711175 kB; lsn=E4/8764F888, redo lsn=E4/69410360
postgres_container  | 2024-11-07 12:08:03.681 UTC [480] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:08:03.681 UTC [480] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:08:07.619 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:08:07.619 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:08:07.637 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:08:07.996 UTC [472] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:08:07.996 UTC [472] CONTEXT:  while scanning block 7593 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 12:08:07.997 UTC [472] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:08:07.997 UTC [472] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:08:07.997 UTC [472] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:08:07.997 UTC [472] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:08:07.997 UTC [472] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:08:23.554 UTC [26] LOG:  checkpoint complete: wrote 1097 buffers (6.7%); 0 WAL file(s) added, 6 removed, 27 recycled; write=9.352 s, sync=4.549 s, total=15.935 s; sync files=362, longest=1.475 s, average=0.013 s; distance=538759 kB, estimate=693933 kB; lsn=E4/ADD41160, redo lsn=E4/8A232040
postgres_container  | 2024-11-07 12:08:23.555 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:08:23.555 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:08:23.555 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:08:41.015 UTC [26] LOG:  checkpoint complete: wrote 10753 buffers (65.6%); 0 WAL file(s) added, 15 removed, 26 recycled; write=12.382 s, sync=2.644 s, total=17.461 s; sync files=161, longest=0.425 s, average=0.017 s; distance=678554 kB, estimate=692395 kB; lsn=E4/D80231F8, redo lsn=E4/B38D88E0
postgres_container  | 2024-11-07 12:08:41.016 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 12:08:41.016 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:08:41.016 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:09:04.419 UTC [618] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:09:04.419 UTC [618] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:09:06.553 UTC [26] LOG:  checkpoint complete: wrote 2382 buffers (14.5%); 0 WAL file(s) added, 13 removed, 32 recycled; write=16.375 s, sync=5.894 s, total=25.537 s; sync files=114, longest=3.390 s, average=0.052 s; distance=738556 kB, estimate=738556 kB; lsn=E4/FFC37B60, redo lsn=E4/E0A17AA0
postgres_container  | 2024-11-07 12:09:06.553 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 12:09:06.553 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:09:06.553 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-07 12:09:08.714 UTC [613] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:09:08.715 UTC [613] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:09:27.904 UTC [26] LOG:  checkpoint complete: wrote 3353 buffers (20.5%); 0 WAL file(s) added, 8 removed, 28 recycled; write=15.058 s, sync=4.099 s, total=21.351 s; sync files=304, longest=1.510 s, average=0.014 s; distance=589448 kB, estimate=723645 kB; lsn=E5/274023E8, redo lsn=E5/49B9DA8
postgres_container  | 2024-11-07 12:09:27.904 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-07 12:09:27.904 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:09:27.904 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:09:30.426 UTC [639] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:09:30.426 UTC [639] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:09:51.509 UTC [26] LOG:  checkpoint complete: wrote 5382 buffers (32.8%); 0 WAL file(s) added, 11 removed, 28 recycled; write=15.232 s, sync=5.973 s, total=23.605 s; sync files=319, longest=2.078 s, average=0.019 s; distance=630688 kB, estimate=714349 kB; lsn=E5/4E7A1C50, redo lsn=E5/2B1A2020
postgres_container  | 2024-11-07 12:09:51.510 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:09:51.510 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:09:51.510 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:10:12.171 UTC [26] LOG:  checkpoint complete: wrote 5847 buffers (35.7%); 0 WAL file(s) added, 14 removed, 31 recycled; write=16.694 s, sync=1.620 s, total=20.661 s; sync files=68, longest=0.595 s, average=0.024 s; distance=747173 kB, estimate=747173 kB; lsn=E5/78699E00, redo lsn=E5/58B4B698
postgres_container  | 2024-11-07 12:10:12.171 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-07 12:10:12.171 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:10:12.171 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:10:30.453 UTC [26] LOG:  checkpoint complete: wrote 2265 buffers (13.8%); 0 WAL file(s) added, 11 removed, 31 recycled; write=13.517 s, sync=2.492 s, total=18.283 s; sync files=42, longest=1.229 s, average=0.060 s; distance=689566 kB, estimate=741412 kB; lsn=E5/A2404AF8, redo lsn=E5/82CB2ED8
postgres_container  | 2024-11-07 12:10:30.455 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 12:10:30.455 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:10:30.455 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:10:47.843 UTC [661] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:10:47.843 UTC [661] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:11:06.623 UTC [26] LOG:  checkpoint complete: wrote 2907 buffers (17.7%); 0 WAL file(s) added, 13 removed, 28 recycled; write=28.680 s, sync=4.816 s, total=36.168 s; sync files=242, longest=1.029 s, average=0.020 s; distance=661331 kB, estimate=733404 kB; lsn=E5/CE420D58, redo lsn=E5/AB287E78
postgres_container  | 2024-11-07 12:11:06.624 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:11:23.832 UTC [26] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 14 removed, 32 recycled; write=13.590 s, sync=0.600 s, total=17.209 s; sync files=78, longest=0.250 s, average=0.008 s; distance=763839 kB, estimate=763839 kB; lsn=E5/F86653F0, redo lsn=E5/D9C77E40
postgres_container  | 2024-11-07 12:11:23.833 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 12:11:23.833 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:11:23.923 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:11:37.000 UTC [26] LOG:  checkpoint complete: wrote 3017 buffers (18.4%); 0 WAL file(s) added, 8 removed, 33 recycled; write=10.254 s, sync=0.389 s, total=13.168 s; sync files=78, longest=0.141 s, average=0.005 s; distance=663072 kB, estimate=753763 kB; lsn=E6/20EE52C0, redo lsn=E6/24000F8
postgres_container  | 2024-11-07 12:11:37.002 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:11:37.002 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:11:37.002 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:11:50.861 UTC [683] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:11:50.861 UTC [683] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:11:53.768 UTC [684] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:11:53.768 UTC [684] CONTEXT:  while scanning block 6702 of relation "stage_omopcdm.voc_concept_synonym"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_synonym"
postgres_container  | 2024-11-07 12:11:54.769 UTC [684] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:11:54.769 UTC [684] CONTEXT:  while scanning block 3851 of relation "stage_omopcdm.voc_concept_ancestor"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_ancestor"
postgres_container  | 2024-11-07 12:12:07.241 UTC [26] LOG:  checkpoint complete: wrote 72 buffers (0.4%); 0 WAL file(s) added, 8 removed, 29 recycled; write=24.162 s, sync=3.733 s, total=30.240 s; sync files=229, longest=1.185 s, average=0.017 s; distance=615804 kB, estimate=739967 kB; lsn=E6/491C8138, redo lsn=E6/27D5F338
postgres_container  | 2024-11-07 12:12:07.242 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:12:20.344 UTC [26] LOG:  checkpoint complete: wrote 6519 buffers (39.8%); 0 WAL file(s) added, 12 removed, 32 recycled; write=8.504 s, sync=2.321 s, total=13.103 s; sync files=90, longest=1.719 s, average=0.026 s; distance=708613 kB, estimate=736831 kB; lsn=E6/72E807F0, redo lsn=E6/53160888
postgres_container  | 2024-11-07 12:12:20.345 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:12:20.345 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:12:20.345 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:12:39.839 UTC [705] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:12:39.839 UTC [705] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:12:46.423 UTC [26] LOG:  checkpoint complete: wrote 4140 buffers (25.3%); 0 WAL file(s) added, 15 removed, 27 recycled; write=22.131 s, sync=2.120 s, total=26.079 s; sync files=225, longest=0.094 s, average=0.010 s; distance=699297 kB, estimate=733078 kB; lsn=E6/A19FCFE8, redo lsn=E6/7DC48DD0
postgres_container  | 2024-11-07 12:12:46.424 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:12:46.424 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:12:46.424 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:13:00.079 UTC [26] LOG:  checkpoint complete: wrote 5524 buffers (33.7%); 0 WAL file(s) added, 14 removed, 30 recycled; write=8.698 s, sync=2.388 s, total=13.655 s; sync files=75, longest=1.109 s, average=0.032 s; distance=716184 kB, estimate=731389 kB; lsn=E6/C9B00028, redo lsn=E6/A97AEDF0
postgres_container  | 2024-11-07 12:13:00.079 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:13:00.079 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:13:00.080 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:13:14.624 UTC [26] LOG:  checkpoint complete: wrote 5857 buffers (35.7%); 0 WAL file(s) added, 12 removed, 31 recycled; write=9.487 s, sync=2.598 s, total=14.545 s; sync files=97, longest=0.842 s, average=0.027 s; distance=705104 kB, estimate=728760 kB; lsn=E6/F4CC0300, redo lsn=E6/D48430B0
postgres_container  | 2024-11-07 12:13:14.625 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:13:14.625 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:13:14.625 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:13:29.811 UTC [727] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:13:29.811 UTC [727] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:13:43.240 UTC [26] LOG:  checkpoint complete: wrote 2986 buffers (18.2%); 0 WAL file(s) added, 20 removed, 21 recycled; write=21.113 s, sync=5.338 s, total=28.615 s; sync files=237, longest=1.396 s, average=0.023 s; distance=677602 kB, estimate=723644 kB; lsn=E7/27156030, redo lsn=E6/FDDFBAB8
postgres_container  | 2024-11-07 12:13:43.241 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:13:43.241 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:13:43.241 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:13:58.434 UTC [26] LOG:  checkpoint complete: wrote 8360 buffers (51.0%); 0 WAL file(s) added, 20 removed, 32 recycled; write=11.662 s, sync=0.748 s, total=15.194 s; sync files=74, longest=0.386 s, average=0.011 s; distance=839848 kB, estimate=839848 kB; lsn=E7/50B268C8, redo lsn=E7/31225D28
postgres_container  | 2024-11-07 12:13:58.435 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:13:58.435 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:13:58.435 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:14:12.444 UTC [26] LOG:  checkpoint complete: wrote 4908 buffers (30.0%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.714 s, sync=2.999 s, total=14.010 s; sync files=103, longest=2.121 s, average=0.030 s; distance=691989 kB, estimate=825062 kB; lsn=E7/7B0A96A8, redo lsn=E7/5B5EB4A0
postgres_container  | 2024-11-07 12:14:12.445 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:14:12.445 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:14:12.446 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:14:22.449 UTC [749] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:14:22.449 UTC [749] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:14:35.433 UTC [26] LOG:  checkpoint complete: wrote 278 buffers (1.7%); 0 WAL file(s) added, 2 removed, 32 recycled; write=18.534 s, sync=2.580 s, total=22.988 s; sync files=230, longest=1.357 s, average=0.012 s; distance=553244 kB, estimate=797880 kB; lsn=E7/9C71B4D0, redo lsn=E7/7D2325C8
postgres_container  | 2024-11-07 12:14:35.433 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:14:35.433 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:14:35.434 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:14:48.231 UTC [26] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.178 s, sync=3.249 s, total=12.797 s; sync files=70, longest=3.095 s, average=0.047 s; distance=661967 kB, estimate=784289 kB; lsn=E7/C435A0E0, redo lsn=E7/A58A65A0
postgres_container  | 2024-11-07 12:14:48.232 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:14:48.232 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:14:48.277 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:15:02.530 UTC [26] LOG:  checkpoint complete: wrote 3434 buffers (21.0%); 0 WAL file(s) added, 10 removed, 32 recycled; write=10.256 s, sync=1.010 s, total=14.299 s; sync files=66, longest=0.196 s, average=0.016 s; distance=683358 kB, estimate=774196 kB; lsn=E7/EEDDD880, redo lsn=E7/CF3FE0E8
postgres_container  | 2024-11-07 12:15:02.531 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:15:02.531 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:15:02.531 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:15:09.827 UTC [771] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:15:09.827 UTC [771] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:15:25.940 UTC [26] LOG:  checkpoint complete: wrote 354 buffers (2.2%); 0 WAL file(s) added, 3 removed, 28 recycled; write=17.251 s, sync=4.116 s, total=23.410 s; sync files=246, longest=1.497 s, average=0.017 s; distance=518506 kB, estimate=748627 kB; lsn=E8/114002A0, redo lsn=E7/EEE58C30
postgres_container  | 2024-11-07 12:15:25.941 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:15:25.941 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:15:25.941 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:15:40.840 UTC [26] LOG:  checkpoint complete: wrote 8327 buffers (50.8%); 0 WAL file(s) added, 13 removed, 31 recycled; write=9.098 s, sync=3.058 s, total=14.900 s; sync files=83, longest=2.302 s, average=0.037 s; distance=708677 kB, estimate=744632 kB; lsn=E8/3A6C40A8, redo lsn=E8/1A26A038
postgres_container  | 2024-11-07 12:15:40.841 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:15:40.841 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:15:40.841 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:15:58.286 UTC [793] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:15:58.286 UTC [793] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:16:04.876 UTC [788] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:16:04.877 UTC [788] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:16:04.885 UTC [788] LOG:  skipping vacuum of "pg_toast_501487" --- lock not available
postgres_container  | 2024-11-07 12:16:10.750 UTC [26] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 17 removed, 26 recycled; write=25.311 s, sync=2.201 s, total=29.909 s; sync files=239, longest=0.156 s, average=0.010 s; distance=718073 kB, estimate=741976 kB; lsn=E8/6A380308, redo lsn=E8/45FA8778
postgres_container  | 2024-11-07 12:16:10.751 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:16:24.914 UTC [26] LOG:  checkpoint complete: wrote 6455 buffers (39.4%); 0 WAL file(s) added, 15 removed, 32 recycled; write=11.284 s, sync=0.297 s, total=14.164 s; sync files=75, longest=0.084 s, average=0.004 s; distance=756334 kB, estimate=756334 kB; lsn=E8/9307A4C8, redo lsn=E8/742441F8
postgres_container  | 2024-11-07 12:16:24.914 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:16:24.914 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:16:24.914 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:16:38.025 UTC [26] LOG:  checkpoint complete: wrote 2027 buffers (12.4%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.706 s, sync=1.862 s, total=13.111 s; sync files=36, longest=1.206 s, average=0.052 s; distance=709381 kB, estimate=751639 kB; lsn=E8/BDA38680, redo lsn=E8/9F7059E0
postgres_container  | 2024-11-07 12:16:38.026 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:16:38.026 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:16:38.026 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:16:52.165 UTC [815] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:16:52.165 UTC [815] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:16:53.994 UTC [812] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:16:54.994 UTC [812] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:16:54.994 UTC [812] CONTEXT:  while scanning block 3922 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 12:16:55.005 UTC [812] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:16:55.005 UTC [812] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:16:55.005 UTC [812] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:17:07.858 UTC [26] LOG:  checkpoint complete: wrote 1633 buffers (10.0%); 0 WAL file(s) added, 18 removed, 22 recycled; write=22.164 s, sync=5.698 s, total=29.833 s; sync files=227, longest=1.683 s, average=0.026 s; distance=659514 kB, estimate=742426 kB; lsn=E8/F06D4048, redo lsn=E8/C7B14478
postgres_container  | 2024-11-07 12:17:07.859 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:17:07.859 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:17:07.901 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:17:22.529 UTC [26] LOG:  checkpoint complete: wrote 8442 buffers (51.5%); 0 WAL file(s) added, 17 removed, 33 recycled; write=9.146 s, sync=2.518 s, total=14.671 s; sync files=78, longest=2.413 s, average=0.033 s; distance=811943 kB, estimate=811943 kB; lsn=E9/1786C050, redo lsn=E8/F93FE398
postgres_container  | 2024-11-07 12:17:22.530 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:17:22.530 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:17:22.530 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:17:34.808 UTC [26] LOG:  checkpoint complete: wrote 4144 buffers (25.3%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.546 s, sync=1.988 s, total=12.279 s; sync files=40, longest=1.905 s, average=0.050 s; distance=718083 kB, estimate=802557 kB; lsn=E9/43400298, redo lsn=E9/2513F1D8
postgres_container  | 2024-11-07 12:17:44.355 UTC [836] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:17:44.355 UTC [836] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:17:47.006 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 12:17:47.006 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:17:47.006 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:18:00.352 UTC [26] LOG:  checkpoint complete: wrote 3743 buffers (22.8%); 0 WAL file(s) added, 6 removed, 27 recycled; write=5.825 s, sync=5.423 s, total=13.346 s; sync files=250, longest=1.417 s, average=0.022 s; distance=543503 kB, estimate=776652 kB; lsn=E9/6A66E030, redo lsn=E9/46402FC8
postgres_container  | 2024-11-07 12:18:00.353 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:18:00.353 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:18:00.371 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:18:15.111 UTC [26] LOG:  checkpoint complete: wrote 8490 buffers (51.8%); 0 WAL file(s) added, 14 removed, 31 recycled; write=10.194 s, sync=2.091 s, total=14.758 s; sync files=101, longest=1.143 s, average=0.021 s; distance=737280 kB, estimate=772715 kB; lsn=E9/934020F8, redo lsn=E9/73403008
postgres_container  | 2024-11-07 12:18:15.112 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:18:15.112 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:18:15.112 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:18:32.716 UTC [858] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:18:32.716 UTC [858] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:18:42.610 UTC [26] LOG:  checkpoint complete: wrote 4130 buffers (25.2%); 0 WAL file(s) added, 14 removed, 27 recycled; write=22.150 s, sync=2.767 s, total=27.498 s; sync files=237, longest=0.620 s, average=0.012 s; distance=676824 kB, estimate=763126 kB; lsn=E9/C08B6C00, redo lsn=E9/9C8F9258
postgres_container  | 2024-11-07 12:18:42.610 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:18:42.610 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:18:42.611 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:18:57.137 UTC [26] LOG:  checkpoint complete: wrote 6359 buffers (38.8%); 0 WAL file(s) added, 16 removed, 32 recycled; write=9.315 s, sync=2.499 s, total=14.527 s; sync files=71, longest=2.239 s, average=0.036 s; distance=781489 kB, estimate=781489 kB; lsn=E9/EB0E3C08, redo lsn=E9/CC4256E8
postgres_container  | 2024-11-07 12:18:57.138 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:18:57.138 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:18:57.138 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:19:11.584 UTC [26] LOG:  checkpoint complete: wrote 5090 buffers (31.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.930 s, sync=1.062 s, total=14.447 s; sync files=101, longest=0.657 s, average=0.011 s; distance=675023 kB, estimate=770842 kB; lsn=EA/1411A308, redo lsn=E9/F5759360
postgres_container  | 2024-11-07 12:19:11.585 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:19:11.585 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:19:11.605 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:19:21.375 UTC [880] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:19:21.375 UTC [880] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:19:40.396 UTC [26] LOG:  checkpoint complete: wrote 1679 buffers (10.2%); 0 WAL file(s) added, 20 removed, 22 recycled; write=20.850 s, sync=5.785 s, total=28.811 s; sync files=237, longest=1.633 s, average=0.025 s; distance=685779 kB, estimate=762336 kB; lsn=EA/48138048, redo lsn=EA/1F50E2C0
postgres_container  | 2024-11-07 12:19:40.397 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:19:40.397 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:19:40.436 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:19:55.015 UTC [26] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 17 removed, 33 recycled; write=10.610 s, sync=1.066 s, total=14.619 s; sync files=73, longest=0.814 s, average=0.015 s; distance=818111 kB, estimate=818111 kB; lsn=EA/6FC16288, redo lsn=EA/513FE0B8
postgres_container  | 2024-11-07 12:19:55.016 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:19:55.016 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:19:55.016 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:20:08.499 UTC [26] LOG:  checkpoint complete: wrote 6540 buffers (39.9%); 0 WAL file(s) added, 9 removed, 32 recycled; write=10.070 s, sync=1.454 s, total=13.484 s; sync files=99, longest=0.589 s, average=0.015 s; distance=680600 kB, estimate=804360 kB; lsn=EA/9963C138, redo lsn=EA/7ACA4230
postgres_container  | 2024-11-07 12:20:16.704 UTC [902] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:20:16.704 UTC [902] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:20:18.752 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:20:18.752 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:20:18.752 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:20:30.304 UTC [26] LOG:  checkpoint complete: wrote 3801 buffers (23.2%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.579 s, sync=2.973 s, total=11.553 s; sync files=254, longest=1.308 s, average=0.012 s; distance=528167 kB, estimate=776741 kB; lsn=EA/BB53AD10, redo lsn=EA/9B06E108
postgres_container  | 2024-11-07 12:20:30.305 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:20:30.305 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:20:30.305 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:20:43.043 UTC [26] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 10 removed, 31 recycled; write=6.774 s, sync=3.563 s, total=12.739 s; sync files=40, longest=3.272 s, average=0.090 s; distance=680970 kB, estimate=767164 kB; lsn=EA/E4118030, redo lsn=EA/C4970BC0
postgres_container  | 2024-11-07 12:20:43.044 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:20:43.044 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:20:43.044 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:21:01.711 UTC [924] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:21:01.711 UTC [924] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping analyze of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:21:05.991 UTC [916] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:21:10.089 UTC [26] LOG:  checkpoint complete: wrote 3333 buffers (20.3%); 0 WAL file(s) added, 14 removed, 28 recycled; write=23.770 s, sync=1.735 s, total=27.045 s; sync files=228, longest=0.083 s, average=0.008 s; distance=694424 kB, estimate=759890 kB; lsn=EB/11E72300, redo lsn=EA/EEF96F88
postgres_container  | 2024-11-07 12:21:10.091 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:21:10.091 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:21:10.091 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:21:22.828 UTC [26] LOG:  checkpoint complete: wrote 6244 buffers (38.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.052 s, sync=2.197 s, total=12.737 s; sync files=83, longest=0.979 s, average=0.027 s; distance=673738 kB, estimate=751274 kB; lsn=EB/374227B0, redo lsn=EB/18189988
postgres_container  | 2024-11-07 12:21:22.829 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:21:22.829 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:21:22.829 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:21:36.273 UTC [26] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.763 s, sync=3.232 s, total=13.445 s; sync files=38, longest=1.497 s, average=0.086 s; distance=698243 kB, estimate=745971 kB; lsn=EB/624002E0, redo lsn=EB/42B6A740
postgres_container  | 2024-11-07 12:21:36.274 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:21:36.274 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:21:36.274 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:21:51.641 UTC [945] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:21:51.641 UTC [945] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:21:53.384 UTC [946] LOG:  skipping analyze of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-07 12:21:53.384 UTC [946] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-07 12:21:53.384 UTC [946] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-07 12:21:53.384 UTC [946] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-07 12:21:53.555 UTC [946] LOG:  skipping analyze of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:21:53.556 UTC [946] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:22:04.650 UTC [26] LOG:  checkpoint complete: wrote 2135 buffers (13.0%); 0 WAL file(s) added, 19 removed, 23 recycled; write=21.365 s, sync=4.899 s, total=28.376 s; sync files=230, longest=1.333 s, average=0.022 s; distance=680526 kB, estimate=739427 kB; lsn=EB/94400508, redo lsn=EB/6C3FE060
postgres_container  | 2024-11-07 12:22:04.651 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:22:04.651 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:22:04.652 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:22:19.066 UTC [26] LOG:  checkpoint complete: wrote 8429 buffers (51.4%); 0 WAL file(s) added, 18 removed, 33 recycled; write=8.780 s, sync=2.976 s, total=14.415 s; sync files=77, longest=2.914 s, average=0.039 s; distance=835248 kB, estimate=835248 kB; lsn=EB/BD694C10, redo lsn=EB/9F3AA3F8
postgres_container  | 2024-11-07 12:22:19.068 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:22:19.068 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:22:19.068 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:22:31.523 UTC [26] LOG:  checkpoint complete: wrote 2053 buffers (12.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.925 s, sync=2.474 s, total=12.456 s; sync files=38, longest=1.882 s, average=0.066 s; distance=690925 kB, estimate=820816 kB; lsn=EB/E872B248, redo lsn=EB/C9665A50
postgres_container  | 2024-11-07 12:22:31.524 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:22:31.524 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:22:31.524 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:22:41.420 UTC [967] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:22:41.420 UTC [967] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:22:54.904 UTC [26] LOG:  checkpoint complete: wrote 172 buffers (1.0%); 0 WAL file(s) added, 6 removed, 31 recycled; write=18.161 s, sync=3.009 s, total=23.380 s; sync files=224, longest=1.868 s, average=0.014 s; distance=607497 kB, estimate=799484 kB; lsn=EC/E37FE80, redo lsn=EB/EE7A8090
postgres_container  | 2024-11-07 12:22:54.905 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:22:54.905 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:22:54.914 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:23:07.975 UTC [26] LOG:  checkpoint complete: wrote 8513 buffers (52.0%); 0 WAL file(s) added, 7 removed, 32 recycled; write=7.019 s, sync=3.509 s, total=13.071 s; sync files=98, longest=2.930 s, average=0.036 s; distance=633063 kB, estimate=782842 kB; lsn=EC/34236A70, redo lsn=EC/151E2030
postgres_container  | 2024-11-07 12:23:07.976 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:23:07.976 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:23:07.976 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:23:20.535 UTC [26] LOG:  checkpoint complete: wrote 3816 buffers (23.3%); 0 WAL file(s) added, 8 removed, 33 recycled; write=8.059 s, sync=2.446 s, total=12.560 s; sync files=47, longest=2.310 s, average=0.053 s; distance=677039 kB, estimate=772262 kB; lsn=EC/5C961FA8, redo lsn=EC/3E70DF90
postgres_container  | 2024-11-07 12:23:20.536 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:23:20.536 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:23:20.536 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:23:29.456 UTC [989] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:23:29.456 UTC [989] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:23:42.911 UTC [26] LOG:  checkpoint complete: wrote 203 buffers (1.2%); 0 WAL file(s) added, 4 removed, 30 recycled; write=17.249 s, sync=3.152 s, total=22.375 s; sync files=234, longest=1.445 s, average=0.014 s; distance=554058 kB, estimate=750441 kB; lsn=EC/8127C0C0, redo lsn=EC/60420AF8
postgres_container  | 2024-11-07 12:23:42.912 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 12:23:42.912 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:23:42.912 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:23:56.476 UTC [26] LOG:  checkpoint complete: wrote 8352 buffers (51.0%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.507 s, sync=3.208 s, total=13.565 s; sync files=68, longest=3.010 s, average=0.048 s; distance=670747 kB, estimate=742472 kB; lsn=EC/A80C9628, redo lsn=EC/89327948
postgres_container  | 2024-11-07 12:23:56.477 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:23:56.477 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:23:56.477 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:24:10.548 UTC [26] LOG:  checkpoint complete: wrote 4627 buffers (28.2%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.602 s, sync=1.998 s, total=14.071 s; sync files=100, longest=1.804 s, average=0.020 s; distance=675665 kB, estimate=735791 kB; lsn=EC/D1406078, redo lsn=EC/B26FC0F0
postgres_container  | 2024-11-07 12:24:18.328 UTC [1011] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:24:18.328 UTC [1011] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:24:20.137 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:24:20.137 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:24:20.163 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:24:31.960 UTC [26] LOG:  checkpoint complete: wrote 3272 buffers (20.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.827 s, sync=2.791 s, total=11.823 s; sync files=252, longest=1.289 s, average=0.012 s; distance=537639 kB, estimate=715976 kB; lsn=EC/F3CD6E80, redo lsn=EC/D34060B8
postgres_container  | 2024-11-07 12:24:31.961 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 12:24:31.961 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:24:31.961 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:24:44.514 UTC [26] LOG:  checkpoint complete: wrote 5096 buffers (31.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=6.580 s, sync=3.662 s, total=12.553 s; sync files=44, longest=3.434 s, average=0.084 s; distance=690863 kB, estimate=713465 kB; lsn=ED/1CEBFBF0, redo lsn=EC/FD6B1D38
postgres_container  | 2024-11-07 12:24:44.515 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:24:44.515 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:24:44.515 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:25:01.391 UTC [1033] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:25:01.391 UTC [1033] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:25:11.782 UTC [26] LOG:  checkpoint complete: wrote 4136 buffers (25.2%); 0 WAL file(s) added, 13 removed, 29 recycled; write=23.554 s, sync=1.972 s, total=27.268 s; sync files=213, longest=0.121 s, average=0.010 s; distance=689961 kB, estimate=711114 kB; lsn=ED/49BA0070, redo lsn=ED/2787C480
postgres_container  | 2024-11-07 12:25:11.783 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:25:11.783 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:25:11.783 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:25:24.852 UTC [26] LOG:  checkpoint complete: wrote 5926 buffers (36.2%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.749 s, sync=2.863 s, total=13.070 s; sync files=91, longest=1.178 s, average=0.032 s; distance=654776 kB, estimate=705481 kB; lsn=ED/6E405500, redo lsn=ED/4F7EA570
postgres_container  | 2024-11-07 12:25:24.853 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:25:24.853 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:25:24.853 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:25:37.847 UTC [26] LOG:  checkpoint complete: wrote 2552 buffers (15.6%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.203 s, sync=3.214 s, total=12.994 s; sync files=38, longest=1.599 s, average=0.085 s; distance=675190 kB, estimate=702452 kB; lsn=ED/98402060, redo lsn=ED/78B47E98
postgres_container  | 2024-11-07 12:25:37.848 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:25:37.848 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:25:37.874 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:25:52.377 UTC [1055] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:25:52.377 UTC [1055] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:25:56.716 UTC [1052] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:25:56.716 UTC [1052] CONTEXT:  while scanning block 5777 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 12:25:57.716 UTC [1052] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:25:57.716 UTC [1052] CONTEXT:  while scanning block 4030 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 12:25:58.717 UTC [1052] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:25:58.717 UTC [1052] CONTEXT:  while scanning block 3877 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 12:25:58.729 UTC [1052] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:25:58.729 UTC [1052] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:25:58.729 UTC [1052] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:26:08.824 UTC [26] LOG:  checkpoint complete: wrote 2169 buffers (13.2%); 0 WAL file(s) added, 17 removed, 25 recycled; write=24.355 s, sync=3.883 s, total=30.977 s; sync files=232, longest=1.246 s, average=0.017 s; distance=680680 kB, estimate=700274 kB; lsn=ED/C8402108, redo lsn=ED/A2402090
postgres_container  | 2024-11-07 12:26:08.825 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:26:22.899 UTC [26] LOG:  checkpoint complete: wrote 8422 buffers (51.4%); 0 WAL file(s) added, 17 removed, 33 recycled; write=10.424 s, sync=1.103 s, total=14.075 s; sync files=75, longest=0.957 s, average=0.015 s; distance=819206 kB, estimate=819206 kB; lsn=ED/F29F0458, redo lsn=ED/D44038F8
postgres_container  | 2024-11-07 12:26:22.899 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:26:22.899 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:26:22.899 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:26:36.026 UTC [26] LOG:  checkpoint complete: wrote 946 buffers (5.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.618 s, sync=2.226 s, total=13.127 s; sync files=39, longest=2.063 s, average=0.058 s; distance=696096 kB, estimate=806895 kB; lsn=EE/1DA07FB0, redo lsn=ED/FEBCB8F8
postgres_container  | 2024-11-07 12:26:36.027 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:26:36.027 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:26:36.027 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:26:43.799 UTC [1076] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:26:43.799 UTC [1076] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:27:01.755 UTC [26] LOG:  checkpoint complete: wrote 184 buffers (1.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=21.625 s, sync=1.719 s, total=25.729 s; sync files=245, longest=0.855 s, average=0.008 s; distance=662735 kB, estimate=792479 kB; lsn=EE/467758F8, redo lsn=EE/272FF860
postgres_container  | 2024-11-07 12:27:01.755 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 12:27:01.755 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:27:01.755 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:27:16.149 UTC [26] LOG:  checkpoint complete: wrote 8535 buffers (52.1%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.070 s, sync=2.857 s, total=14.394 s; sync files=98, longest=2.681 s, average=0.030 s; distance=685963 kB, estimate=781827 kB; lsn=EE/6FDB8FD8, redo lsn=EE/510E26D8
postgres_container  | 2024-11-07 12:27:16.150 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:27:16.150 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:27:16.150 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:27:27.903 UTC [26] LOG:  checkpoint complete: wrote 3265 buffers (19.9%); 0 WAL file(s) added, 8 removed, 34 recycled; write=8.314 s, sync=2.054 s, total=11.754 s; sync files=57, longest=1.953 s, average=0.037 s; distance=689101 kB, estimate=772554 kB; lsn=EE/98F76BE8, redo lsn=EE/7B1D5CB8
postgres_container  | 2024-11-07 12:27:35.790 UTC [1098] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:27:35.790 UTC [1098] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:27:38.369 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 12:27:38.369 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:27:38.369 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:27:51.352 UTC [26] LOG:  checkpoint complete: wrote 3796 buffers (23.2%); 0 WAL file(s) added, 6 removed, 27 recycled; write=5.951 s, sync=5.265 s, total=12.984 s; sync files=240, longest=1.338 s, average=0.022 s; distance=542911 kB, estimate=749590 kB; lsn=EE/C0685850, redo lsn=EE/9C405A40
postgres_container  | 2024-11-07 12:27:51.353 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:27:51.353 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:27:51.359 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:28:06.383 UTC [26] LOG:  checkpoint complete: wrote 4593 buffers (28.0%); 0 WAL file(s) added, 15 removed, 30 recycled; write=10.520 s, sync=1.963 s, total=15.026 s; sync files=76, longest=0.592 s, average=0.026 s; distance=735526 kB, estimate=748184 kB; lsn=EE/EAB42B00, redo lsn=EE/C924F5F0
postgres_container  | 2024-11-07 12:28:06.384 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:28:06.384 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:28:06.384 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:28:22.301 UTC [1120] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:28:22.301 UTC [1120] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:28:34.131 UTC [26] LOG:  checkpoint complete: wrote 6157 buffers (37.6%); 0 WAL file(s) added, 18 removed, 26 recycled; write=21.954 s, sync=3.665 s, total=27.748 s; sync files=252, longest=1.390 s, average=0.015 s; distance=727894 kB, estimate=746155 kB; lsn=EF/1A400B38, redo lsn=EE/F5925020
postgres_container  | 2024-11-07 12:28:34.132 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:28:34.132 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:28:34.132 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:28:48.336 UTC [26] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 17 removed, 32 recycled; write=8.725 s, sync=3.144 s, total=14.204 s; sync files=73, longest=1.993 s, average=0.044 s; distance=800156 kB, estimate=800156 kB; lsn=EF/45690910, redo lsn=EF/2668C048
postgres_container  | 2024-11-07 12:28:48.337 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:28:48.337 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:28:48.337 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:29:02.672 UTC [26] LOG:  checkpoint complete: wrote 61 buffers (0.4%); 0 WAL file(s) added, 13 removed, 30 recycled; write=9.021 s, sync=2.972 s, total=14.335 s; sync files=52, longest=1.697 s, average=0.058 s; distance=703887 kB, estimate=790529 kB; lsn=EF/72400310, redo lsn=EF/515EFE18
postgres_container  | 2024-11-07 12:29:02.672 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:29:02.672 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:29:02.672 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:29:11.622 UTC [1142] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:29:11.622 UTC [1142] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:29:30.103 UTC [26] LOG:  checkpoint complete: wrote 376 buffers (2.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=21.757 s, sync=2.732 s, total=27.431 s; sync files=252, longest=1.247 s, average=0.011 s; distance=699975 kB, estimate=781473 kB; lsn=EF/9B631C50, redo lsn=EF/7C181D90
postgres_container  | 2024-11-07 12:29:30.104 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:29:30.104 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:29:30.104 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:29:45.670 UTC [26] LOG:  checkpoint complete: wrote 8353 buffers (51.0%); 0 WAL file(s) added, 6 removed, 32 recycled; write=12.390 s, sync=0.410 s, total=15.567 s; sync files=70, longest=0.364 s, average=0.006 s; distance=637356 kB, estimate=767062 kB; lsn=EF/C1400B60, redo lsn=EF/A2FECFD0
postgres_container  | 2024-11-07 12:29:45.671 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:29:45.671 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:29:45.672 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:29:58.256 UTC [26] LOG:  checkpoint complete: wrote 2936 buffers (17.9%); 0 WAL file(s) added, 10 removed, 31 recycled; write=7.894 s, sync=2.705 s, total=12.585 s; sync files=49, longest=2.180 s, average=0.056 s; distance=671557 kB, estimate=757511 kB; lsn=EF/EB407538, redo lsn=EF/CBFBE3D8
postgres_container  | 2024-11-07 12:29:58.257 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:29:58.257 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:29:58.257 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:30:07.462 UTC [1164] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:30:07.462 UTC [1164] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:30:26.257 UTC [26] LOG:  checkpoint complete: wrote 369 buffers (2.3%); 0 WAL file(s) added, 12 removed, 23 recycled; write=19.339 s, sync=6.900 s, total=28.001 s; sync files=253, longest=1.804 s, average=0.028 s; distance=561629 kB, estimate=737923 kB; lsn=F0/16402098, redo lsn=EF/EE435878
postgres_container  | 2024-11-07 12:30:26.258 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:30:26.258 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:30:26.258 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:30:40.441 UTC [26] LOG:  checkpoint complete: wrote 8308 buffers (50.7%); 0 WAL file(s) added, 18 removed, 30 recycled; write=8.301 s, sync=3.328 s, total=14.184 s; sync files=83, longest=2.220 s, average=0.041 s; distance=793426 kB, estimate=793426 kB; lsn=F0/3F402070, redo lsn=F0/1EB0A150
postgres_container  | 2024-11-07 12:30:40.442 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:30:40.442 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:30:40.463 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:30:55.508 UTC [1186] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:30:55.508 UTC [1186] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:30:59.870 UTC [1181] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:30:59.870 UTC [1181] CONTEXT:  while scanning block 10382 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:30:59.879 UTC [1181] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:30:59.893 UTC [1181] LOG:  skipping vacuum of "pg_toast_511460" --- lock not available
postgres_container  | 2024-11-07 12:31:08.626 UTC [26] LOG:  checkpoint complete: wrote 3790 buffers (23.1%); 0 WAL file(s) added, 19 removed, 26 recycled; write=22.449 s, sync=3.417 s, total=28.184 s; sync files=233, longest=1.097 s, average=0.015 s; distance=730359 kB, estimate=787119 kB; lsn=F0/704020D0, redo lsn=F0/4B448108
postgres_container  | 2024-11-07 12:31:08.626 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:31:08.626 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:31:08.626 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:31:22.676 UTC [26] LOG:  checkpoint complete: wrote 8447 buffers (51.6%); 0 WAL file(s) added, 18 removed, 31 recycled; write=9.139 s, sync=2.514 s, total=14.050 s; sync files=79, longest=0.383 s, average=0.032 s; distance=811001 kB, estimate=811001 kB; lsn=F0/9C5F4C30, redo lsn=F0/7CC467D0
postgres_container  | 2024-11-07 12:31:22.677 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:31:22.677 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:31:22.727 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:31:34.922 UTC [26] LOG:  checkpoint complete: wrote 1046 buffers (6.4%); 0 WAL file(s) added, 11 removed, 33 recycled; write=7.152 s, sync=2.931 s, total=12.246 s; sync files=37, longest=2.847 s, average=0.080 s; distance=712414 kB, estimate=801142 kB; lsn=F0/C6640248, redo lsn=F0/A83FE0A0
postgres_container  | 2024-11-07 12:31:34.923 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:31:34.923 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:31:34.975 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:31:46.615 UTC [1207] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:31:46.615 UTC [1207] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:32:00.772 UTC [26] LOG:  checkpoint complete: wrote 312 buffers (1.9%); 0 WAL file(s) added, 12 removed, 28 recycled; write=20.181 s, sync=3.424 s, total=25.850 s; sync files=240, longest=1.210 s, average=0.015 s; distance=655359 kB, estimate=786564 kB; lsn=F0/F30F2FE0, redo lsn=F0/D03FE088
postgres_container  | 2024-11-07 12:32:00.773 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:32:00.773 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:32:00.803 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:32:15.482 UTC [26] LOG:  checkpoint complete: wrote 8526 buffers (52.0%); 0 WAL file(s) added, 12 removed, 32 recycled; write=11.365 s, sync=0.727 s, total=14.710 s; sync files=98, longest=0.330 s, average=0.008 s; distance=722364 kB, estimate=780144 kB; lsn=F1/1B03A9A8, redo lsn=F0/FC56D3A0
postgres_container  | 2024-11-07 12:32:15.483 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:32:15.483 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:32:15.485 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:32:34.731 UTC [1229] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:32:34.731 UTC [1229] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:32:34.947 UTC [26] LOG:  checkpoint complete: wrote 4364 buffers (26.6%); 0 WAL file(s) added, 8 removed, 33 recycled; write=12.727 s, sync=5.682 s, total=19.464 s; sync files=70, longest=5.518 s, average=0.082 s; distance=681572 kB, estimate=770287 kB; lsn=F1/43756840, redo lsn=F1/25F065D0
postgres_container  | 2024-11-07 12:32:37.251 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 12:32:37.251 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:32:37.252 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:32:48.598 UTC [26] LOG:  checkpoint complete: wrote 3792 buffers (23.1%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.545 s, sync=2.616 s, total=11.347 s; sync files=227, longest=1.367 s, average=0.012 s; distance=525710 kB, estimate=745829 kB; lsn=F1/6634BB98, redo lsn=F1/4606A030
postgres_container  | 2024-11-07 12:32:48.599 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 12:32:48.599 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:32:48.599 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:33:02.364 UTC [26] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 12 removed, 29 recycled; write=10.274 s, sync=1.378 s, total=13.765 s; sync files=72, longest=0.115 s, average=0.020 s; distance=686160 kB, estimate=739862 kB; lsn=F1/9158E2F8, redo lsn=F1/6FE7E050
postgres_container  | 2024-11-07 12:33:02.364 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:33:02.364 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:33:02.364 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:33:21.463 UTC [1251] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:33:21.463 UTC [1251] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:33:32.233 UTC [26] LOG:  checkpoint complete: wrote 4825 buffers (29.4%); 0 WAL file(s) added, 15 removed, 28 recycled; write=26.166 s, sync=2.020 s, total=29.870 s; sync files=257, longest=0.338 s, average=0.008 s; distance=703550 kB, estimate=736231 kB; lsn=F1/BDA54F10, redo lsn=F1/9AD8D9F0
postgres_container  | 2024-11-07 12:33:32.265 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:33:45.795 UTC [26] LOG:  checkpoint complete: wrote 6175 buffers (37.7%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.416 s, sync=2.110 s, total=13.561 s; sync files=74, longest=0.946 s, average=0.029 s; distance=692369 kB, estimate=731845 kB; lsn=F1/E4402258, redo lsn=F1/C51B2078
postgres_container  | 2024-11-07 12:33:45.797 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:33:45.797 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:33:45.797 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:33:58.586 UTC [26] LOG:  checkpoint complete: wrote 2207 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.767 s, sync=2.455 s, total=12.790 s; sync files=43, longest=1.317 s, average=0.058 s; distance=706827 kB, estimate=729343 kB; lsn=F2/F41B170, redo lsn=F1/F03F4CC0
postgres_container  | 2024-11-07 12:33:58.587 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:33:58.587 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:33:58.587 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:34:15.610 UTC [1273] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:34:15.610 UTC [1273] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:34:28.847 UTC [26] LOG:  checkpoint complete: wrote 4645 buffers (28.4%); 0 WAL file(s) added, 19 removed, 21 recycled; write=22.864 s, sync=5.344 s, total=30.260 s; sync files=263, longest=1.302 s, average=0.021 s; distance=664959 kB, estimate=722905 kB; lsn=F2/425A6AD8, redo lsn=F2/18D548E0
postgres_container  | 2024-11-07 12:34:28.848 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:34:42.955 UTC [26] LOG:  checkpoint complete: wrote 8340 buffers (50.9%); 0 WAL file(s) added, 20 removed, 31 recycled; write=8.533 s, sync=2.801 s, total=14.108 s; sync files=76, longest=0.294 s, average=0.037 s; distance=831741 kB, estimate=831741 kB; lsn=F2/6B77AB38, redo lsn=F2/4B993D38
postgres_container  | 2024-11-07 12:34:42.956 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:34:42.956 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:34:42.956 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:34:55.548 UTC [26] LOG:  checkpoint complete: wrote 2984 buffers (18.2%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.563 s, sync=3.077 s, total=12.592 s; sync files=40, longest=3.020 s, average=0.077 s; distance=721812 kB, estimate=820748 kB; lsn=F2/9640A2D0, redo lsn=F2/77A78D78
postgres_container  | 2024-11-07 12:34:55.549 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:34:55.549 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:34:55.549 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:35:02.627 UTC [1295] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:35:02.627 UTC [1295] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:35:20.846 UTC [26] LOG:  checkpoint complete: wrote 370 buffers (2.3%); 0 WAL file(s) added, 3 removed, 30 recycled; write=19.503 s, sync=3.807 s, total=25.297 s; sync files=260, longest=1.437 s, average=0.015 s; distance=542061 kB, estimate=792879 kB; lsn=F2/B9400150, redo lsn=F2/98BD4200
postgres_container  | 2024-11-07 12:35:20.846 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 12:35:20.846 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:35:20.846 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:35:34.030 UTC [26] LOG:  checkpoint complete: wrote 8313 buffers (50.7%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.364 s, sync=2.383 s, total=13.184 s; sync files=67, longest=2.243 s, average=0.036 s; distance=682719 kB, estimate=781863 kB; lsn=F2/E0649A98, redo lsn=F2/C268C0D8
postgres_container  | 2024-11-07 12:35:34.030 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:35:34.030 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:35:34.070 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:35:45.612 UTC [26] LOG:  checkpoint complete: wrote 2842 buffers (17.3%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.551 s, sync=2.546 s, total=11.582 s; sync files=41, longest=2.459 s, average=0.063 s; distance=669128 kB, estimate=770589 kB; lsn=F3/95B92C8, redo lsn=F2/EB3FE1B8
postgres_container  | 2024-11-07 12:35:45.613 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 12:35:45.613 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:35:45.613 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:35:54.513 UTC [1317] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:35:54.513 UTC [1317] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:35:56.350 UTC [1314] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:35:56.351 UTC [1314] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:35:56.365 UTC [1314] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:35:56.365 UTC [1314] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:36:08.899 UTC [26] LOG:  checkpoint complete: wrote 178 buffers (1.1%); 0 WAL file(s) added, 3 removed, 28 recycled; write=16.811 s, sync=4.386 s, total=23.286 s; sync files=234, longest=1.937 s, average=0.019 s; distance=511385 kB, estimate=744669 kB; lsn=F3/2D24B380, redo lsn=F3/A764638
postgres_container  | 2024-11-07 12:36:08.900 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:36:08.900 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:36:08.900 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:36:22.728 UTC [26] LOG:  checkpoint complete: wrote 8428 buffers (51.4%); 0 WAL file(s) added, 13 removed, 31 recycled; write=9.030 s, sync=2.325 s, total=13.828 s; sync files=90, longest=1.728 s, average=0.026 s; distance=715716 kB, estimate=741774 kB; lsn=F3/56402060, redo lsn=F3/36255978
postgres_container  | 2024-11-07 12:36:22.729 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:36:22.729 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:36:22.729 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:36:41.821 UTC [1338] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:36:41.821 UTC [1338] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:36:49.381 UTC [26] LOG:  checkpoint complete: wrote 4141 buffers (25.3%); 0 WAL file(s) added, 15 removed, 27 recycled; write=22.270 s, sync=2.538 s, total=26.653 s; sync files=224, longest=0.518 s, average=0.012 s; distance=695262 kB, estimate=737123 kB; lsn=F3/8477ACE8, redo lsn=F3/6094D1A8
postgres_container  | 2024-11-07 12:36:49.382 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:36:49.382 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:36:49.382 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:37:02.519 UTC [26] LOG:  checkpoint complete: wrote 6115 buffers (37.3%); 0 WAL file(s) added, 13 removed, 31 recycled; write=7.616 s, sync=3.051 s, total=13.137 s; sync files=78, longest=1.647 s, average=0.040 s; distance=719897 kB, estimate=735400 kB; lsn=F3/AC545DE0, redo lsn=F3/8C853850
postgres_container  | 2024-11-07 12:37:02.519 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:37:02.519 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:37:02.520 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:37:18.251 UTC [26] LOG:  checkpoint complete: wrote 6118 buffers (37.3%); 0 WAL file(s) added, 13 removed, 30 recycled; write=10.335 s, sync=2.903 s, total=15.732 s; sync files=106, longest=0.977 s, average=0.028 s; distance=710139 kB, estimate=732874 kB; lsn=F3/D8406F40, redo lsn=F3/B7DD2560
postgres_container  | 2024-11-07 12:37:18.252 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:37:18.252 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:37:18.252 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:37:28.230 UTC [1360] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:37:28.230 UTC [1360] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:37:44.163 UTC [26] LOG:  checkpoint complete: wrote 2060 buffers (12.6%); 0 WAL file(s) added, 12 removed, 31 recycled; write=21.035 s, sync=2.426 s, total=25.911 s; sync files=233, longest=1.040 s, average=0.011 s; distance=696682 kB, estimate=729255 kB; lsn=F4/2DC4078, redo lsn=F3/E262D070
postgres_container  | 2024-11-07 12:37:44.163 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:37:44.163 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:37:44.193 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:37:58.188 UTC [26] LOG:  checkpoint complete: wrote 8341 buffers (50.9%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.395 s, sync=2.055 s, total=14.025 s; sync files=74, longest=1.872 s, average=0.028 s; distance=745515 kB, estimate=745515 kB; lsn=F4/2EF0C060, redo lsn=F4/FE38050
postgres_container  | 2024-11-07 12:37:58.189 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:37:58.189 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:37:58.189 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:38:15.777 UTC [26] LOG:  checkpoint complete: wrote 2982 buffers (18.2%); 0 WAL file(s) added, 9 removed, 33 recycled; write=12.933 s, sync=2.326 s, total=17.588 s; sync files=99, longest=1.697 s, average=0.024 s; distance=673699 kB, estimate=738334 kB; lsn=F4/57AC0028, redo lsn=F4/39020E28
postgres_container  | 2024-11-07 12:38:15.777 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 12:38:15.777 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:38:15.777 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:38:26.100 UTC [1382] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:38:26.100 UTC [1382] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:38:39.992 UTC [26] LOG:  checkpoint complete: wrote 283 buffers (1.7%); 0 WAL file(s) added, 8 removed, 30 recycled; write=18.246 s, sync=3.269 s, total=24.215 s; sync files=228, longest=2.147 s, average=0.015 s; distance=634450 kB, estimate=727945 kB; lsn=F4/80343908, redo lsn=F4/5FBB5828
postgres_container  | 2024-11-07 12:38:39.993 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:38:39.993 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:38:40.033 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:38:54.526 UTC [26] LOG:  checkpoint complete: wrote 8333 buffers (50.9%); 0 WAL file(s) added, 13 removed, 31 recycled; write=11.069 s, sync=0.672 s, total=14.533 s; sync files=87, longest=0.053 s, average=0.008 s; distance=712994 kB, estimate=726450 kB; lsn=F4/AB0D3160, redo lsn=F4/8B3FE068
postgres_container  | 2024-11-07 12:38:54.527 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:38:54.527 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:38:54.527 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:39:17.887 UTC [1404] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:39:17.887 UTC [1404] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:39:24.060 UTC [26] LOG:  checkpoint complete: wrote 3832 buffers (23.4%); 0 WAL file(s) added, 12 removed, 30 recycled; write=26.281 s, sync=1.458 s, total=29.533 s; sync files=226, longest=0.065 s, average=0.007 s; distance=685582 kB, estimate=722363 kB; lsn=F4/D6E4C598, redo lsn=F4/B5181C48
postgres_container  | 2024-11-07 12:39:24.061 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:39:37.608 UTC [26] LOG:  checkpoint complete: wrote 5815 buffers (35.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.378 s, sync=1.923 s, total=13.548 s; sync files=96, longest=0.950 s, average=0.021 s; distance=657236 kB, estimate=715851 kB; lsn=F4/FC040938, redo lsn=F4/DD356D60
postgres_container  | 2024-11-07 12:39:37.608 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:39:37.608 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:39:37.608 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:39:50.271 UTC [26] LOG:  checkpoint complete: wrote 2555 buffers (15.6%); 0 WAL file(s) added, 12 removed, 31 recycled; write=7.222 s, sync=2.940 s, total=12.663 s; sync files=38, longest=1.936 s, average=0.078 s; distance=711994 kB, estimate=715465 kB; lsn=F5/28400A58, redo lsn=F5/8AA55B8
postgres_container  | 2024-11-07 12:39:50.272 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:39:50.272 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:39:50.272 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:40:03.187 UTC [1426] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:40:03.187 UTC [1426] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:40:20.820 UTC [26] LOG:  checkpoint complete: wrote 3002 buffers (18.3%); 0 WAL file(s) added, 21 removed, 21 recycled; write=23.072 s, sync=5.306 s, total=30.548 s; sync files=228, longest=1.418 s, average=0.024 s; distance=691352 kB, estimate=713054 kB; lsn=F5/5C400420, redo lsn=F5/32DCB8A0
postgres_container  | 2024-11-07 12:40:20.824 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:40:35.008 UTC [26] LOG:  checkpoint complete: wrote 8426 buffers (51.4%); 0 WAL file(s) added, 20 removed, 32 recycled; write=11.047 s, sync=0.671 s, total=14.185 s; sync files=76, longest=0.634 s, average=0.009 s; distance=848488 kB, estimate=848488 kB; lsn=F5/85402060, redo lsn=F5/66A65960
postgres_container  | 2024-11-07 12:40:35.009 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:40:35.009 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:40:35.013 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:40:47.624 UTC [26] LOG:  checkpoint complete: wrote 1035 buffers (6.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.533 s, sync=2.883 s, total=12.615 s; sync files=40, longest=2.541 s, average=0.073 s; distance=681569 kB, estimate=831796 kB; lsn=F5/AE5AED40, redo lsn=F5/903FE078
postgres_container  | 2024-11-07 12:40:47.624 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:40:47.624 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:40:47.624 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:40:57.457 UTC [1448] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:40:57.457 UTC [1448] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:40:59.335 UTC [1445] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:40:59.335 UTC [1445] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:40:59.335 UTC [1445] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:40:59.335 UTC [1445] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:40:59.344 UTC [1445] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:40:59.344 UTC [1445] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:40:59.344 UTC [1445] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:41:13.886 UTC [26] LOG:  checkpoint complete: wrote 179 buffers (1.1%); 0 WAL file(s) added, 13 removed, 23 recycled; write=18.061 s, sync=6.399 s, total=26.262 s; sync files=238, longest=1.711 s, average=0.027 s; distance=600662 kB, estimate=808682 kB; lsn=F5/DCC58748, redo lsn=F5/B4E93BB0
postgres_container  | 2024-11-07 12:41:13.887 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:41:13.887 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:41:13.888 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:41:28.828 UTC [26] LOG:  checkpoint complete: wrote 8430 buffers (51.5%); 0 WAL file(s) added, 18 removed, 30 recycled; write=9.134 s, sync=3.010 s, total=14.941 s; sync files=91, longest=2.180 s, average=0.034 s; distance=783980 kB, estimate=806212 kB; lsn=F6/5400340, redo lsn=F5/E4C2EE10
postgres_container  | 2024-11-07 12:41:28.829 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:41:28.829 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:41:28.829 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:41:43.856 UTC [1469] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:41:43.856 UTC [1469] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:41:57.070 UTC [26] LOG:  checkpoint complete: wrote 2158 buffers (13.2%); 0 WAL file(s) added, 19 removed, 26 recycled; write=22.187 s, sync=3.850 s, total=28.242 s; sync files=220, longest=1.225 s, average=0.018 s; distance=725667 kB, estimate=798158 kB; lsn=F6/36406090, redo lsn=F6/110D7BA0
postgres_container  | 2024-11-07 12:41:57.070 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 12:41:57.070 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:41:57.070 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:42:11.446 UTC [26] LOG:  checkpoint complete: wrote 8512 buffers (52.0%); 0 WAL file(s) added, 15 removed, 33 recycled; write=9.106 s, sync=2.956 s, total=14.376 s; sync files=92, longest=2.047 s, average=0.033 s; distance=794193 kB, estimate=797761 kB; lsn=F6/5FB42128, redo lsn=F6/4186C100
postgres_container  | 2024-11-07 12:42:11.448 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:42:11.448 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:42:11.448 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:42:24.322 UTC [26] LOG:  checkpoint complete: wrote 79 buffers (0.5%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.523 s, sync=2.915 s, total=12.875 s; sync files=17, longest=2.861 s, average=0.172 s; distance=681315 kB, estimate=786117 kB; lsn=F6/89402298, redo lsn=F6/6B1C4E98
postgres_container  | 2024-11-07 12:42:24.323 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:42:24.323 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:42:24.323 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:42:35.449 UTC [1491] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:42:35.449 UTC [1491] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:42:48.179 UTC [26] LOG:  checkpoint complete: wrote 587 buffers (3.6%); 0 WAL file(s) added, 9 removed, 32 recycled; write=19.117 s, sync=2.438 s, total=23.856 s; sync files=223, longest=1.447 s, average=0.011 s; distance=672925 kB, estimate=774797 kB; lsn=F6/B357A058, redo lsn=F6/942EC330
postgres_container  | 2024-11-07 12:42:48.180 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:42:48.180 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:42:48.180 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:43:02.121 UTC [26] LOG:  checkpoint complete: wrote 8343 buffers (50.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.034 s, sync=3.493 s, total=13.942 s; sync files=80, longest=2.894 s, average=0.044 s; distance=689254 kB, estimate=766243 kB; lsn=F6/DDE302F0, redo lsn=F6/BE405DA0
postgres_container  | 2024-11-07 12:43:02.122 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:43:02.122 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:43:02.122 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:43:16.176 UTC [26] LOG:  checkpoint complete: wrote 6348 buffers (38.7%); 0 WAL file(s) added, 10 removed, 31 recycled; write=9.640 s, sync=2.197 s, total=14.055 s; sync files=99, longest=1.743 s, average=0.023 s; distance=679477 kB, estimate=757566 kB; lsn=F7/74042D0, redo lsn=F6/E7B93468
postgres_container  | 2024-11-07 12:43:16.177 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:43:16.177 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:43:16.177 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:43:25.679 UTC [1513] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:43:25.679 UTC [1513] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:43:38.904 UTC [26] LOG:  checkpoint complete: wrote 167 buffers (1.0%); 0 WAL file(s) added, 3 removed, 32 recycled; write=17.536 s, sync=3.076 s, total=22.728 s; sync files=235, longest=1.982 s, average=0.014 s; distance=562911 kB, estimate=738101 kB; lsn=F7/29B3A8D0, redo lsn=F7/A14B0D8
postgres_container  | 2024-11-07 12:43:38.906 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 12:43:38.906 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:43:38.906 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:43:51.780 UTC [26] LOG:  checkpoint complete: wrote 8325 buffers (50.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=6.865 s, sync=3.441 s, total=12.875 s; sync files=66, longest=3.249 s, average=0.053 s; distance=677286 kB, estimate=732019 kB; lsn=F7/52400938, redo lsn=F7/336B4B90
postgres_container  | 2024-11-07 12:43:51.781 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:43:51.781 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:43:51.781 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:44:05.617 UTC [26] LOG:  checkpoint complete: wrote 2844 buffers (17.4%); 0 WAL file(s) added, 9 removed, 33 recycled; write=10.671 s, sync=1.370 s, total=13.836 s; sync files=78, longest=0.491 s, average=0.018 s; distance=687620 kB, estimate=727579 kB; lsn=F7/7BD575A8, redo lsn=F7/5D635C70
postgres_container  | 2024-11-07 12:44:12.049 UTC [1535] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:44:12.049 UTC [1535] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:44:18.323 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:44:18.323 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:44:18.323 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:44:29.270 UTC [26] LOG:  checkpoint complete: wrote 3893 buffers (23.8%); 0 WAL file(s) added, 1 removed, 32 recycled; write=7.131 s, sync=1.703 s, total=10.948 s; sync files=258, longest=0.701 s, average=0.007 s; distance=538406 kB, estimate=708662 kB; lsn=F7/9D400130, redo lsn=F7/7E3FF828
postgres_container  | 2024-11-07 12:44:29.271 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 12:44:29.271 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:44:29.271 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:44:41.728 UTC [26] LOG:  checkpoint complete: wrote 4587 buffers (28.0%); 0 WAL file(s) added, 7 removed, 33 recycled; write=7.509 s, sync=2.462 s, total=12.457 s; sync files=24, longest=2.420 s, average=0.103 s; distance=657620 kB, estimate=703558 kB; lsn=F7/C4402F98, redo lsn=F7/A6634AA0
postgres_container  | 2024-11-07 12:44:41.729 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:44:41.729 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:44:41.729 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:44:52.618 UTC [26] LOG:  checkpoint complete: wrote 2404 buffers (14.7%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.825 s, sync=1.722 s, total=10.890 s; sync files=38, longest=0.249 s, average=0.046 s; distance=669414 kB, estimate=700144 kB; lsn=F7/ED7897D8, redo lsn=F7/CF3EE2C0
postgres_container  | 2024-11-07 12:45:00.477 UTC [1557] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:45:00.477 UTC [1557] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:45:05.954 UTC [1552] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:45:05.954 UTC [1552] CONTEXT:  while scanning block 17244 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:45:05.955 UTC [1552] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:45:07.100 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:45:07.100 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:45:07.100 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:45:19.653 UTC [26] LOG:  checkpoint complete: wrote 3871 buffers (23.6%); 0 WAL file(s) added, 5 removed, 28 recycled; write=8.351 s, sync=2.173 s, total=12.553 s; sync files=264, longest=0.095 s, average=0.009 s; distance=540735 kB, estimate=684203 kB; lsn=F8/13D63B08, redo lsn=F7/F03FE0B8
postgres_container  | 2024-11-07 12:45:19.653 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:45:19.653 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:45:19.653 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:45:36.894 UTC [26] LOG:  checkpoint complete: wrote 4589 buffers (28.0%); 0 WAL file(s) added, 10 removed, 31 recycled; write=13.402 s, sync=0.835 s, total=17.241 s; sync files=41, longest=0.112 s, average=0.021 s; distance=676617 kB, estimate=683444 kB; lsn=F8/39403728, redo lsn=F8/198C0688
postgres_container  | 2024-11-07 12:45:36.894 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 12:45:36.894 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:45:36.894 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:45:55.874 UTC [1579] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:45:55.874 UTC [1579] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:45:57.751 UTC [1576] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:45:57.751 UTC [1576] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:45:58.751 UTC [1576] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:45:58.751 UTC [1576] CONTEXT:  while scanning block 4021 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:45:58.754 UTC [1576] LOG:  skipping vacuum of "pg_toast_521445" --- lock not available
postgres_container  | 2024-11-07 12:46:04.853 UTC [26] LOG:  checkpoint complete: wrote 3150 buffers (19.2%); 0 WAL file(s) added, 17 removed, 28 recycled; write=23.401 s, sync=2.408 s, total=27.959 s; sync files=231, longest=0.346 s, average=0.011 s; distance=731163 kB, estimate=731163 kB; lsn=F8/694001E0, redo lsn=F8/462C7430
postgres_container  | 2024-11-07 12:46:04.854 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:46:04.854 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:46:04.854 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:46:18.360 UTC [26] LOG:  checkpoint complete: wrote 6434 buffers (39.3%); 0 WAL file(s) added, 12 removed, 33 recycled; write=9.046 s, sync=1.962 s, total=13.506 s; sync files=77, longest=1.842 s, average=0.026 s; distance=736936 kB, estimate=736936 kB; lsn=F8/91E6E728, redo lsn=F8/732716A0
postgres_container  | 2024-11-07 12:46:18.361 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:46:18.361 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:46:18.361 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:46:31.276 UTC [26] LOG:  checkpoint complete: wrote 2030 buffers (12.4%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.237 s, sync=2.114 s, total=12.916 s; sync files=36, longest=1.224 s, average=0.059 s; distance=696830 kB, estimate=732925 kB; lsn=F8/BC402298, redo lsn=F8/9DAF0FE8
postgres_container  | 2024-11-07 12:46:31.277 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:46:31.277 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:46:31.278 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:46:44.878 UTC [1600] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:46:44.878 UTC [1600] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:46:58.593 UTC [26] LOG:  checkpoint complete: wrote 1531 buffers (9.3%); 0 WAL file(s) added, 18 removed, 23 recycled; write=20.247 s, sync=4.964 s, total=27.316 s; sync files=219, longest=1.306 s, average=0.023 s; distance=676068 kB, estimate=727240 kB; lsn=F8/EE25FE58, redo lsn=F8/C6F2A058
postgres_container  | 2024-11-07 12:46:58.593 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:46:58.593 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:46:58.594 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:47:14.140 UTC [26] LOG:  checkpoint complete: wrote 8532 buffers (52.1%); 0 WAL file(s) added, 16 removed, 32 recycled; write=11.785 s, sync=0.816 s, total=15.547 s; sync files=100, longest=0.581 s, average=0.009 s; distance=774365 kB, estimate=774365 kB; lsn=F9/1525BAD8, redo lsn=F8/F6361758
postgres_container  | 2024-11-07 12:47:14.141 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:47:14.141 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:47:14.142 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:47:26.624 UTC [26] LOG:  checkpoint complete: wrote 4715 buffers (28.8%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.908 s, sync=2.554 s, total=12.483 s; sync files=53, longest=2.216 s, average=0.049 s; distance=688840 kB, estimate=765813 kB; lsn=F9/3ED46F98, redo lsn=F9/204139C8
postgres_container  | 2024-11-07 12:47:26.625 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:47:26.625 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:47:26.625 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:47:36.022 UTC [1622] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:47:36.022 UTC [1622] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:47:49.254 UTC [26] LOG:  checkpoint complete: wrote 178 buffers (1.1%); 0 WAL file(s) added, 3 removed, 31 recycled; write=17.901 s, sync=2.570 s, total=22.630 s; sync files=227, longest=1.239 s, average=0.012 s; distance=564474 kB, estimate=745679 kB; lsn=F9/62918D48, redo lsn=F9/42B523F8
postgres_container  | 2024-11-07 12:47:49.255 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:47:49.255 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:47:49.256 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:48:04.504 UTC [26] LOG:  checkpoint complete: wrote 8350 buffers (51.0%); 0 WAL file(s) added, 13 removed, 29 recycled; write=11.464 s, sync=1.266 s, total=15.249 s; sync files=90, longest=0.227 s, average=0.015 s; distance=689187 kB, estimate=740030 kB; lsn=F9/8E02A3D8, redo lsn=F9/6CC5B070
postgres_container  | 2024-11-07 12:48:04.505 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:48:04.505 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:48:04.505 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:48:24.537 UTC [1644] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:48:24.537 UTC [1644] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:48:30.928 UTC [26] LOG:  checkpoint complete: wrote 4785 buffers (29.2%); 0 WAL file(s) added, 16 removed, 28 recycled; write=22.878 s, sync=1.809 s, total=26.424 s; sync files=257, longest=0.068 s, average=0.008 s; distance=714523 kB, estimate=737479 kB; lsn=F9/BB44B860, redo lsn=F9/98621CD0
postgres_container  | 2024-11-07 12:48:30.929 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:48:30.929 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:48:30.929 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:48:43.984 UTC [26] LOG:  checkpoint complete: wrote 6176 buffers (37.7%); 0 WAL file(s) added, 10 removed, 31 recycled; write=8.421 s, sync=2.040 s, total=13.056 s; sync files=83, longest=0.969 s, average=0.025 s; distance=678711 kB, estimate=731602 kB; lsn=F9/E14021C8, redo lsn=F9/C1CEF8F0
postgres_container  | 2024-11-07 12:48:43.986 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:48:43.986 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:48:43.986 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:48:56.906 UTC [26] LOG:  checkpoint complete: wrote 2206 buffers (13.5%); 0 WAL file(s) added, 12 removed, 32 recycled; write=6.752 s, sync=3.447 s, total=12.920 s; sync files=38, longest=2.552 s, average=0.091 s; distance=710290 kB, estimate=729471 kB; lsn=FA/C889CF0, redo lsn=F9/ED294150
postgres_container  | 2024-11-07 12:48:56.907 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:48:56.907 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:48:56.907 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:49:14.497 UTC [1666] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:49:14.497 UTC [1666] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:49:27.298 UTC [26] LOG:  checkpoint complete: wrote 5205 buffers (31.8%); 0 WAL file(s) added, 19 removed, 22 recycled; write=23.178 s, sync=4.967 s, total=30.391 s; sync files=262, longest=1.480 s, average=0.019 s; distance=675823 kB, estimate=724106 kB; lsn=FA/3F400230, redo lsn=FA/16690020
postgres_container  | 2024-11-07 12:49:27.299 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:49:43.076 UTC [26] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 18 removed, 33 recycled; write=12.633 s, sync=0.482 s, total=15.777 s; sync files=76, longest=0.347 s, average=0.007 s; distance=834996 kB, estimate=834996 kB; lsn=FA/677BE3F0, redo lsn=FA/495FD240
postgres_container  | 2024-11-07 12:49:43.077 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:49:43.077 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:49:43.077 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:49:55.460 UTC [26] LOG:  checkpoint complete: wrote 1108 buffers (6.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=7.834 s, sync=2.305 s, total=12.384 s; sync files=38, longest=1.952 s, average=0.061 s; distance=673250 kB, estimate=818821 kB; lsn=FA/91278558, redo lsn=FA/72775C00
postgres_container  | 2024-11-07 12:49:55.460 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:49:55.460 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:49:55.460 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:50:04.592 UTC [1688] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:50:04.592 UTC [1688] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:50:22.617 UTC [26] LOG:  checkpoint complete: wrote 365 buffers (2.2%); 0 WAL file(s) added, 7 removed, 30 recycled; write=20.833 s, sync=4.107 s, total=27.158 s; sync files=261, longest=2.494 s, average=0.016 s; distance=614865 kB, estimate=798426 kB; lsn=FA/B88E4E48, redo lsn=FA/97FEA298
postgres_container  | 2024-11-07 12:50:22.619 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 12:50:22.619 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:50:22.619 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:50:35.661 UTC [26] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 11 removed, 33 recycled; write=8.472 s, sync=2.095 s, total=13.042 s; sync files=70, longest=1.901 s, average=0.030 s; distance=707531 kB, estimate=789336 kB; lsn=FA/E1804588, redo lsn=FA/C32DD1A0
postgres_container  | 2024-11-07 12:50:35.661 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:50:35.661 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:50:35.698 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:50:54.656 UTC [1710] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:50:54.656 UTC [1710] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:50:56.237 UTC [26] LOG:  checkpoint complete: wrote 2742 buffers (16.7%); 0 WAL file(s) added, 7 removed, 34 recycled; write=16.392 s, sync=2.562 s, total=20.576 s; sync files=64, longest=2.388 s, average=0.041 s; distance=677651 kB, estimate=778168 kB; lsn=FB/9CA1840, redo lsn=FA/EC8A2058
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping analyze of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:50:56.769 UTC [1707] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:50:58.190 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 12:50:58.190 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:50:58.190 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:51:10.035 UTC [26] LOG:  checkpoint complete: wrote 3876 buffers (23.7%); 0 WAL file(s) added, 3 removed, 30 recycled; write=5.469 s, sync=4.228 s, total=11.846 s; sync files=239, longest=1.515 s, average=0.018 s; distance=532805 kB, estimate=753632 kB; lsn=FB/2E400120, redo lsn=FB/D0F37D0
postgres_container  | 2024-11-07 12:51:10.036 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 12:51:10.036 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:51:10.091 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:51:23.167 UTC [26] LOG:  checkpoint complete: wrote 4593 buffers (28.0%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.578 s, sync=1.896 s, total=13.132 s; sync files=42, longest=1.329 s, average=0.046 s; distance=707626 kB, estimate=749031 kB; lsn=FB/574050F8, redo lsn=FB/383FE110
postgres_container  | 2024-11-07 12:51:23.169 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:51:23.169 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:51:23.169 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:51:40.092 UTC [1731] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:51:40.092 UTC [1731] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:51:49.246 UTC [26] LOG:  checkpoint complete: wrote 3161 buffers (19.3%); 0 WAL file(s) added, 15 removed, 28 recycled; write=21.321 s, sync=2.380 s, total=26.078 s; sync files=222, longest=0.498 s, average=0.011 s; distance=700950 kB, estimate=744223 kB; lsn=FB/868E1380, redo lsn=FB/63083A88
postgres_container  | 2024-11-07 12:51:49.246 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:51:49.246 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:51:49.246 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:52:05.380 UTC [26] LOG:  checkpoint complete: wrote 6300 buffers (38.5%); 0 WAL file(s) added, 18 removed, 29 recycled; write=10.268 s, sync=3.422 s, total=16.135 s; sync files=90, longest=2.290 s, average=0.039 s; distance=781985 kB, estimate=781985 kB; lsn=FB/B46F5808, redo lsn=FB/92C2C060
postgres_container  | 2024-11-07 12:52:05.381 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 12:52:05.381 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:52:05.398 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:52:20.752 UTC [26] LOG:  checkpoint complete: wrote 5066 buffers (30.9%); 0 WAL file(s) added, 14 removed, 32 recycled; write=10.730 s, sync=2.059 s, total=15.371 s; sync files=104, longest=1.740 s, average=0.020 s; distance=745329 kB, estimate=778319 kB; lsn=FB/DF4003A8, redo lsn=FB/C0408538
postgres_container  | 2024-11-07 12:52:20.753 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:52:20.753 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:52:20.754 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:52:31.122 UTC [1753] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:52:31.122 UTC [1753] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:52:44.032 UTC [26] LOG:  checkpoint complete: wrote 617 buffers (3.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=18.662 s, sync=2.300 s, total=23.279 s; sync files=235, longest=1.148 s, average=0.010 s; distance=688193 kB, estimate=769307 kB; lsn=FC/9A209B8, redo lsn=FB/EA4189D8
postgres_container  | 2024-11-07 12:52:44.033 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:52:44.033 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:52:44.033 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:52:57.753 UTC [26] LOG:  checkpoint complete: wrote 8344 buffers (50.9%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.431 s, sync=3.771 s, total=13.720 s; sync files=68, longest=3.593 s, average=0.056 s; distance=699716 kB, estimate=762348 kB; lsn=FC/33C00B68, redo lsn=FC/14F69B68
postgres_container  | 2024-11-07 12:52:57.754 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:52:57.754 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:52:57.755 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:53:11.516 UTC [26] LOG:  checkpoint complete: wrote 4115 buffers (25.1%); 0 WAL file(s) added, 8 removed, 33 recycled; write=11.379 s, sync=0.257 s, total=13.762 s; sync files=96, longest=0.108 s, average=0.003 s; distance=658905 kB, estimate=752003 kB; lsn=FC/5BAA78E8, redo lsn=FC/3D2E0038
postgres_container  | 2024-11-07 12:53:11.516 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:53:11.516 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:53:11.516 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:53:21.030 UTC [1775] ERROR:  column "src.trace_id" must appear in the GROUP BY clause or be used in an aggregate function at character 249
postgres_container  | 2024-11-07 12:53:21.030 UTC [1775] STATEMENT:  -- -------------------------------------------------------------------
postgres_container  | 	-- lk_services_clean
postgres_container  | 	--
postgres_container  | 	-- Rule 3.
postgres_container  | 	-- SERVICES information
postgres_container  | 	-- -------------------------------------------------------------------
postgres_container  | 	
postgres_container  | 	CREATE TABLE lk_services_duplicated AS
postgres_container  | 	SELECT trace_id,
postgres_container  | 	       COUNT(*) AS row_count
postgres_container  | 	FROM src_services src
postgres_container  | 	-- GROUP BY src.trace_id
postgres_container  | 	GROUP BY src.trace_id::text
postgres_container  | 	HAVING COUNT(*) > 1
postgres_container  | 	;
postgres_container  | 2024-11-07 12:53:22.850 UTC [1785] ERROR:  relation "mimiciv_icu.procedureevents" does not exist at character 62
postgres_container  | 2024-11-07 12:53:22.850 UTC [1785] STATEMENT:  CREATE VIEW stage_omopcdm.procedureevents AS 
postgres_container  | 	SELECT * FROM  mimiciv_icu.procedureevents;
postgres_container  | 2024-11-07 12:53:37.224 UTC [26] LOG:  checkpoint complete: wrote 284 buffers (1.7%); 0 WAL file(s) added, 6 removed, 27 recycled; write=19.657 s, sync=4.022 s, total=25.708 s; sync files=321, longest=0.581 s, average=0.013 s; distance=554035 kB, estimate=732206 kB; lsn=FC/82DF8020, redo lsn=FC/5EFECDE8
postgres_container  | 2024-11-07 12:53:37.225 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:53:37.225 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:53:37.225 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:53:54.557 UTC [26] LOG:  checkpoint complete: wrote 9816 buffers (59.9%); 0 WAL file(s) added, 17 removed, 26 recycled; write=12.555 s, sync=2.362 s, total=17.332 s; sync files=192, longest=0.205 s, average=0.013 s; distance=704123 kB, estimate=729398 kB; lsn=FC/AE400310, redo lsn=FC/89F8BC58
postgres_container  | 2024-11-07 12:53:54.558 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 12:53:54.558 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:53:54.558 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:54:17.273 UTC [1917] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:54:17.273 UTC [1917] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:54:17.273 UTC [1917] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:54:20.102 UTC [26] LOG:  checkpoint complete: wrote 3406 buffers (20.8%); 0 WAL file(s) added, 14 removed, 32 recycled; write=18.613 s, sync=4.328 s, total=25.545 s; sync files=179, longest=2.873 s, average=0.025 s; distance=741961 kB, estimate=741961 kB; lsn=FC/D67A7448, redo lsn=FC/B741E0D8
postgres_container  | 2024-11-07 12:54:20.103 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 12:54:20.103 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:54:20.103 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:54:38.224 UTC [26] LOG:  checkpoint complete: wrote 6294 buffers (38.4%); 0 WAL file(s) added, 6 removed, 30 recycled; write=13.035 s, sync=3.180 s, total=18.122 s; sync files=303, longest=1.195 s, average=0.011 s; distance=588396 kB, estimate=726604 kB; lsn=FC/FCAD1D98, redo lsn=FC/DB2B9260
postgres_container  | 2024-11-07 12:54:38.225 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 12:54:38.225 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:54:38.225 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:54:39.110 UTC [1938] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:54:39.110 UTC [1938] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:54:39.110 UTC [1938] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:54:59.664 UTC [26] LOG:  checkpoint complete: wrote 378 buffers (2.3%); 0 WAL file(s) added, 8 removed, 29 recycled; write=13.478 s, sync=4.596 s, total=21.440 s; sync files=281, longest=1.290 s, average=0.017 s; distance=612807 kB, estimate=715224 kB; lsn=FD/22402160, redo lsn=FD/92B0E8
postgres_container  | 2024-11-07 12:54:59.665 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-07 12:54:59.665 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:54:59.685 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:55:19.544 UTC [26] LOG:  checkpoint complete: wrote 7253 buffers (44.3%); 0 WAL file(s) added, 12 removed, 32 recycled; write=12.444 s, sync=4.796 s, total=19.879 s; sync files=84, longest=2.887 s, average=0.058 s; distance=715602 kB, estimate=715602 kB; lsn=FD/4B398400, redo lsn=FD/2C3FF920
postgres_container  | 2024-11-07 12:55:19.545 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-07 12:55:19.545 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:55:19.545 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:55:37.332 UTC [26] LOG:  checkpoint complete: wrote 2146 buffers (13.1%); 0 WAL file(s) added, 7 removed, 32 recycled; write=10.396 s, sync=4.518 s, total=17.787 s; sync files=27, longest=3.982 s, average=0.168 s; distance=640926 kB, estimate=708134 kB; lsn=FD/72339CB0, redo lsn=FD/535E7260
postgres_container  | 2024-11-07 12:55:37.333 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 12:55:37.333 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:55:37.333 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:55:56.429 UTC [1961] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:55:56.429 UTC [1961] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:55:56.429 UTC [1961] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:56:02.117 UTC [1956] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:56:02.117 UTC [1956] CONTEXT:  while scanning block 9861 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 12:56:02.133 UTC [1956] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:56:02.133 UTC [1956] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:56:02.133 UTC [1956] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:56:14.137 UTC [26] LOG:  checkpoint complete: wrote 4886 buffers (29.8%); 0 WAL file(s) added, 17 removed, 23 recycled; write=29.197 s, sync=5.360 s, total=36.804 s; sync files=244, longest=0.892 s, average=0.022 s; distance=658372 kB, estimate=703158 kB; lsn=FD/A30B0508, redo lsn=FD/7B8D8588
postgres_container  | 2024-11-07 12:56:14.137 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:56:31.862 UTC [26] LOG:  checkpoint complete: wrote 8273 buffers (50.5%); 0 WAL file(s) added, 18 removed, 31 recycled; write=11.926 s, sync=3.205 s, total=17.725 s; sync files=84, longest=2.784 s, average=0.039 s; distance=809295 kB, estimate=809295 kB; lsn=FD/CC3BD358, redo lsn=FD/ACF2C1C0
postgres_container  | 2024-11-07 12:56:31.862 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 12:56:31.862 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:56:31.862 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:56:45.814 UTC [26] LOG:  checkpoint complete: wrote 2601 buffers (15.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=11.264 s, sync=0.465 s, total=13.953 s; sync files=54, longest=0.246 s, average=0.009 s; distance=679682 kB, estimate=796333 kB; lsn=FD/F4D5A328, redo lsn=FD/D66ECCF0
postgres_container  | 2024-11-07 12:56:45.815 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:56:45.815 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:56:45.815 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:56:56.851 UTC [1983] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:56:56.851 UTC [1983] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:56:56.851 UTC [1983] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:57:03.786 UTC [1978] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:57:03.786 UTC [1978] CONTEXT:  while scanning block 13421 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 12:57:04.787 UTC [1978] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:57:04.787 UTC [1978] CONTEXT:  while scanning block 3877 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 12:57:05.787 UTC [1978] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 12:57:05.787 UTC [1978] CONTEXT:  while scanning block 3922 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 12:57:05.796 UTC [1978] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:57:05.796 UTC [1978] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:57:05.796 UTC [1978] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:57:05.828 UTC [1978] LOG:  skipping vacuum of "pg_toast_529299" --- lock not available
postgres_container  | 2024-11-07 12:57:18.082 UTC [26] LOG:  checkpoint complete: wrote 90 buffers (0.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=26.834 s, sync=2.916 s, total=32.268 s; sync files=243, longest=1.431 s, average=0.012 s; distance=650833 kB, estimate=781783 kB; lsn=FE/1DAB2250, redo lsn=FD/FE281210
postgres_container  | 2024-11-07 12:57:18.084 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:57:31.642 UTC [26] LOG:  checkpoint complete: wrote 7661 buffers (46.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=7.687 s, sync=3.662 s, total=13.559 s; sync files=76, longest=3.482 s, average=0.049 s; distance=689723 kB, estimate=772577 kB; lsn=FE/4763ED28, redo lsn=FE/2840FFB8
postgres_container  | 2024-11-07 12:57:31.643 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:57:31.643 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:57:31.643 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:57:43.463 UTC [26] LOG:  checkpoint complete: wrote 4146 buffers (25.3%); 0 WAL file(s) added, 8 removed, 33 recycled; write=10.149 s, sync=0.175 s, total=11.821 s; sync files=45, longest=0.073 s, average=0.004 s; distance=681736 kB, estimate=763493 kB; lsn=FE/6FF96718, redo lsn=FE/51DD2158
postgres_container  | 2024-11-07 12:57:52.604 UTC [2004] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:57:52.604 UTC [2004] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:57:52.604 UTC [2004] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:57:53.969 UTC [2005] LOG:  skipping analyze of "src_labevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.969 UTC [2005] LOG:  skipping vacuum of "src_d_labitems" --- lock not available
postgres_container  | 2024-11-07 12:57:53.969 UTC [2005] LOG:  skipping analyze of "src_procedures_icd" --- lock not available
postgres_container  | 2024-11-07 12:57:53.969 UTC [2005] LOG:  skipping analyze of "src_hcpcsevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping analyze of "src_drgcodes" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_prescriptions" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 12:57:53.970 UTC [2005] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 12:57:53.982 UTC [2005] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 12:57:53.982 UTC [2005] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 12:57:53.982 UTC [2005] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 12:57:55.006 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 12:57:55.006 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:57:55.006 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:58:06.399 UTC [26] LOG:  checkpoint complete: wrote 3887 buffers (23.7%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.498 s, sync=3.045 s, total=11.394 s; sync files=253, longest=1.796 s, average=0.013 s; distance=530631 kB, estimate=740207 kB; lsn=FE/92CFE5B8, redo lsn=FE/724040D0
postgres_container  | 2024-11-07 12:58:06.400 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 12:58:06.400 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:58:06.400 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:58:19.220 UTC [26] LOG:  checkpoint complete: wrote 4587 buffers (28.0%); 0 WAL file(s) added, 9 removed, 31 recycled; write=6.681 s, sync=3.777 s, total=12.820 s; sync files=29, longest=3.580 s, average=0.131 s; distance=665944 kB, estimate=732781 kB; lsn=FE/BA4020A0, redo lsn=FE/9AE5A280
postgres_container  | 2024-11-07 12:58:19.221 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 12:58:19.221 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:58:19.221 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:58:38.753 UTC [2026] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:58:38.753 UTC [2026] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:58:38.753 UTC [2026] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:58:44.823 UTC [26] LOG:  checkpoint complete: wrote 2593 buffers (15.8%); 0 WAL file(s) added, 15 removed, 28 recycled; write=22.065 s, sync=1.569 s, total=25.603 s; sync files=215, longest=0.077 s, average=0.008 s; distance=699254 kB, estimate=729428 kB; lsn=FE/E80904D0, redo lsn=FE/C5937CB8
postgres_container  | 2024-11-07 12:58:44.824 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 12:58:44.824 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:58:44.882 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:58:58.766 UTC [26] LOG:  checkpoint complete: wrote 6110 buffers (37.3%); 0 WAL file(s) added, 10 removed, 32 recycled; write=9.059 s, sync=1.990 s, total=13.943 s; sync files=80, longest=0.835 s, average=0.025 s; distance=682777 kB, estimate=724763 kB; lsn=FF/EC36E48, redo lsn=FE/EF3FE0D0
postgres_container  | 2024-11-07 12:58:58.767 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:58:58.767 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:58:58.767 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:59:12.971 UTC [26] LOG:  checkpoint complete: wrote 5913 buffers (36.1%); 0 WAL file(s) added, 11 removed, 30 recycled; write=7.863 s, sync=3.870 s, total=14.204 s; sync files=105, longest=2.365 s, average=0.037 s; distance=680106 kB, estimate=720297 kB; lsn=FF/39B387B0, redo lsn=FF/18C28C70
postgres_container  | 2024-11-07 12:59:12.971 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 12:59:12.971 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:59:12.972 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:59:28.255 UTC [2048] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 12:59:28.255 UTC [2048] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 12:59:28.255 UTC [2048] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 12:59:40.983 UTC [26] LOG:  checkpoint complete: wrote 2624 buffers (16.0%); 0 WAL file(s) added, 21 removed, 22 recycled; write=21.008 s, sync=5.027 s, total=28.012 s; sync files=228, longest=1.319 s, average=0.023 s; distance=705937 kB, estimate=718861 kB; lsn=FF/6C403FC0, redo lsn=FF/43D8D418
postgres_container  | 2024-11-07 12:59:40.984 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 12:59:40.984 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:59:40.984 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 12:59:55.516 UTC [26] LOG:  checkpoint complete: wrote 8334 buffers (50.9%); 0 WAL file(s) added, 18 removed, 32 recycled; write=11.604 s, sync=0.431 s, total=14.533 s; sync files=75, longest=0.274 s, average=0.006 s; distance=814432 kB, estimate=814432 kB; lsn=FF/948124F0, redo lsn=FF/758E54E0
postgres_container  | 2024-11-07 12:59:55.517 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 12:59:55.517 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 12:59:55.517 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:00:09.310 UTC [26] LOG:  checkpoint complete: wrote 2640 buffers (16.1%); 0 WAL file(s) added, 9 removed, 32 recycled; write=9.112 s, sync=2.623 s, total=13.793 s; sync files=98, longest=1.917 s, average=0.027 s; distance=671515 kB, estimate=800140 kB; lsn=FF/BD402310, redo lsn=FF/9E8AC280
postgres_container  | 2024-11-07 13:00:09.310 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:00:09.310 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:00:09.310 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:00:20.025 UTC [2070] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:00:20.025 UTC [2070] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:00:20.025 UTC [2070] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:00:33.588 UTC [26] LOG:  checkpoint complete: wrote 268 buffers (1.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=18.979 s, sync=3.078 s, total=24.278 s; sync files=240, longest=1.895 s, average=0.013 s; distance=633550 kB, estimate=783481 kB; lsn=FF/E4D34CB0, redo lsn=FF/C535FD88
postgres_container  | 2024-11-07 13:00:33.589 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 13:00:33.589 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:00:33.589 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:00:46.413 UTC [26] LOG:  checkpoint complete: wrote 8347 buffers (50.9%); 0 WAL file(s) added, 8 removed, 33 recycled; write=7.258 s, sync=3.276 s, total=12.825 s; sync files=69, longest=3.200 s, average=0.048 s; distance=669417 kB, estimate=772075 kB; lsn=100/C5B3AC8, redo lsn=FF/EE11A4F0
postgres_container  | 2024-11-07 13:00:46.414 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:00:46.414 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:00:46.414 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:00:58.384 UTC [26] LOG:  checkpoint complete: wrote 2431 buffers (14.8%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.581 s, sync=2.060 s, total=11.970 s; sync files=49, longest=1.752 s, average=0.043 s; distance=686634 kB, estimate=763531 kB; lsn=100/36ECCF40, redo lsn=100/17FA4EF0
postgres_container  | 2024-11-07 13:01:07.115 UTC [2092] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:01:07.115 UTC [2092] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:01:07.115 UTC [2092] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:01:11.980 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:01:11.980 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:01:11.984 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:01:24.924 UTC [26] LOG:  checkpoint complete: wrote 3369 buffers (20.6%); 0 WAL file(s) added, 6 removed, 27 recycled; write=5.491 s, sync=5.223 s, total=12.945 s; sync files=267, longest=2.049 s, average=0.020 s; distance=528740 kB, estimate=740052 kB; lsn=100/5C400F58, redo lsn=100/383FE048
postgres_container  | 2024-11-07 13:01:24.926 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:01:24.926 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:01:24.926 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:01:38.495 UTC [26] LOG:  checkpoint complete: wrote 5079 buffers (31.0%); 0 WAL file(s) added, 15 removed, 30 recycled; write=8.278 s, sync=2.912 s, total=13.569 s; sync files=45, longest=2.060 s, average=0.065 s; distance=747607 kB, estimate=747607 kB; lsn=100/86400940, redo lsn=100/65E13CC0
postgres_container  | 2024-11-07 13:01:38.495 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:01:38.495 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:01:38.517 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:01:54.959 UTC [2114] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:01:54.959 UTC [2114] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:01:54.959 UTC [2114] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:01:59.119 UTC [2109] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:01:59.119 UTC [2109] CONTEXT:  while scanning block 20472 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 13:01:59.120 UTC [2109] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 13:01:59.120 UTC [2109] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 13:01:59.120 UTC [2109] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 13:02:06.913 UTC [26] LOG:  checkpoint complete: wrote 3433 buffers (21.0%); 0 WAL file(s) added, 16 removed, 27 recycled; write=23.220 s, sync=3.119 s, total=28.418 s; sync files=222, longest=1.222 s, average=0.015 s; distance=703081 kB, estimate=743154 kB; lsn=100/B44021B8, redo lsn=100/90CAE140
postgres_container  | 2024-11-07 13:02:06.913 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:02:06.913 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:02:06.913 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:02:20.950 UTC [26] LOG:  checkpoint complete: wrote 6442 buffers (39.3%); 0 WAL file(s) added, 16 removed, 31 recycled; write=8.736 s, sync=2.669 s, total=14.037 s; sync files=74, longest=1.797 s, average=0.037 s; distance=769785 kB, estimate=769785 kB; lsn=100/DF162E90, redo lsn=100/BFC6C8F8
postgres_container  | 2024-11-07 13:02:20.951 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:02:20.951 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:02:20.998 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:02:33.723 UTC [26] LOG:  checkpoint complete: wrote 2027 buffers (12.4%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.708 s, sync=2.676 s, total=12.772 s; sync files=37, longest=1.468 s, average=0.073 s; distance=705419 kB, estimate=763349 kB; lsn=101/933C6A0, redo lsn=100/EAD4F510
postgres_container  | 2024-11-07 13:02:33.723 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:02:33.723 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:02:33.723 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:02:46.017 UTC [2135] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:02:46.017 UTC [2135] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:02:46.017 UTC [2135] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:03:00.702 UTC [26] LOG:  checkpoint complete: wrote 1244 buffers (7.6%); 0 WAL file(s) added, 13 removed, 27 recycled; write=20.436 s, sync=4.389 s, total=26.979 s; sync files=231, longest=1.230 s, average=0.019 s; distance=649190 kB, estimate=751933 kB; lsn=101/36402128, redo lsn=101/12748EE8
postgres_container  | 2024-11-07 13:03:00.702 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:03:00.702 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:03:00.702 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:03:15.798 UTC [26] LOG:  checkpoint complete: wrote 8446 buffers (51.6%); 0 WAL file(s) added, 14 removed, 32 recycled; write=11.333 s, sync=1.135 s, total=15.096 s; sync files=99, longest=0.548 s, average=0.012 s; distance=746820 kB, estimate=751422 kB; lsn=101/5F08B290, redo lsn=101/4009A150
postgres_container  | 2024-11-07 13:03:15.799 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:03:15.799 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:03:15.799 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:03:29.076 UTC [26] LOG:  checkpoint complete: wrote 4245 buffers (25.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.036 s, sync=3.411 s, total=13.277 s; sync files=49, longest=3.223 s, average=0.070 s; distance=688339 kB, estimate=745113 kB; lsn=101/886350B0, redo lsn=101/6A0CEEC0
postgres_container  | 2024-11-07 13:03:29.077 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:03:29.077 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:03:29.077 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:03:38.274 UTC [2157] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:03:38.274 UTC [2157] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:03:38.274 UTC [2157] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:03:51.628 UTC [26] LOG:  checkpoint complete: wrote 167 buffers (1.0%); 0 WAL file(s) added, 3 removed, 31 recycled; write=17.700 s, sync=2.704 s, total=22.552 s; sync files=231, longest=1.516 s, average=0.012 s; distance=558205 kB, estimate=726423 kB; lsn=101/AC06DB30, redo lsn=101/8C1EE648
postgres_container  | 2024-11-07 13:03:51.629 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 13:03:51.629 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:03:51.629 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:04:06.053 UTC [26] LOG:  checkpoint complete: wrote 8338 buffers (50.9%); 0 WAL file(s) added, 11 removed, 30 recycled; write=7.316 s, sync=4.407 s, total=14.424 s; sync files=87, longest=3.233 s, average=0.051 s; distance=673791 kB, estimate=721159 kB; lsn=101/D6408060, redo lsn=101/B53EE510
postgres_container  | 2024-11-07 13:04:06.054 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:04:06.054 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:04:06.111 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:04:28.617 UTC [2179] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:04:28.617 UTC [2179] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:04:28.617 UTC [2179] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:04:33.352 UTC [26] LOG:  checkpoint complete: wrote 6026 buffers (36.8%); 0 WAL file(s) added, 14 removed, 30 recycled; write=24.474 s, sync=1.283 s, total=27.299 s; sync files=227, longest=0.065 s, average=0.006 s; distance=721075 kB, estimate=721151 kB; lsn=102/24001E0, redo lsn=101/E141B220
postgres_container  | 2024-11-07 13:04:33.353 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:04:33.353 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:04:33.353 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:04:44.836 UTC [26] LOG:  checkpoint complete: wrote 3998 buffers (24.4%); 0 WAL file(s) added, 8 removed, 31 recycled; write=5.654 s, sync=3.417 s, total=11.483 s; sync files=98, longest=0.605 s, average=0.035 s; distance=636023 kB, estimate=712638 kB; lsn=102/28400108, redo lsn=102/8138EE8
postgres_container  | 2024-11-07 13:04:44.837 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 13:04:44.837 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:04:44.894 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:04:58.309 UTC [26] LOG:  checkpoint complete: wrote 4435 buffers (27.1%); 0 WAL file(s) added, 12 removed, 31 recycled; write=8.637 s, sync=2.241 s, total=13.472 s; sync files=46, longest=1.044 s, average=0.049 s; distance=707348 kB, estimate=712109 kB; lsn=102/53423850, redo lsn=102/333FE168
postgres_container  | 2024-11-07 13:04:58.309 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:04:58.309 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:04:58.309 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:05:12.544 UTC [2201] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:05:12.544 UTC [2201] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:05:12.544 UTC [2201] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:05:27.770 UTC [26] LOG:  checkpoint complete: wrote 4026 buffers (24.6%); 0 WAL file(s) added, 18 removed, 23 recycled; write=23.703 s, sync=3.568 s, total=29.461 s; sync files=248, longest=1.062 s, average=0.015 s; distance=682105 kB, estimate=709109 kB; lsn=102/844000C0, redo lsn=102/5CE1C7E0
postgres_container  | 2024-11-07 13:05:27.771 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 13:05:27.771 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:05:27.771 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:05:43.174 UTC [26] LOG:  checkpoint complete: wrote 8435 buffers (51.5%); 0 WAL file(s) added, 18 removed, 32 recycled; write=12.240 s, sync=0.656 s, total=15.404 s; sync files=76, longest=0.507 s, average=0.009 s; distance=816986 kB, estimate=816986 kB; lsn=102/AD6691D8, redo lsn=102/8EBF30D8
postgres_container  | 2024-11-07 13:05:43.176 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:05:43.176 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:05:43.176 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:05:55.781 UTC [26] LOG:  checkpoint complete: wrote 1040 buffers (6.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.756 s, sync=2.396 s, total=12.605 s; sync files=37, longest=1.530 s, average=0.065 s; distance=696023 kB, estimate=804889 kB; lsn=102/D840E068, redo lsn=102/B93A8F88
postgres_container  | 2024-11-07 13:05:55.782 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:05:55.782 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:05:55.782 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:06:05.293 UTC [2223] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:06:05.293 UTC [2223] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:06:05.293 UTC [2223] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:06:27.646 UTC [26] LOG:  checkpoint complete: wrote 359 buffers (2.2%); 0 WAL file(s) added, 17 removed, 23 recycled; write=22.655 s, sync=7.054 s, total=31.864 s; sync files=261, longest=1.807 s, average=0.028 s; distance=654028 kB, estimate=789803 kB; lsn=103/9400108, redo lsn=102/E125C198
postgres_container  | 2024-11-07 13:06:27.647 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:06:41.560 UTC [26] LOG:  checkpoint complete: wrote 8328 buffers (50.8%); 0 WAL file(s) added, 19 removed, 30 recycled; write=8.621 s, sync=2.769 s, total=13.913 s; sync files=84, longest=0.585 s, average=0.033 s; distance=816306 kB, estimate=816306 kB; lsn=103/33402398, redo lsn=103/12F88BD0
postgres_container  | 2024-11-07 13:06:41.561 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:06:41.561 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:06:41.561 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:06:57.501 UTC [2245] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:06:57.501 UTC [2245] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:06:57.501 UTC [2245] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:07:00.885 UTC [2240] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:07:00.885 UTC [2240] CONTEXT:  while scanning block 8124 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] CONTEXT:  while scanning block 4012 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 13:07:01.885 UTC [2240] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 13:07:10.860 UTC [26] LOG:  checkpoint complete: wrote 4143 buffers (25.3%); 0 WAL file(s) added, 21 removed, 24 recycled; write=23.530 s, sync=3.468 s, total=29.300 s; sync files=238, longest=1.153 s, average=0.015 s; distance=723323 kB, estimate=807008 kB; lsn=103/66026470, redo lsn=103/3F1E78E0
postgres_container  | 2024-11-07 13:07:10.860 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 13:07:10.860 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:07:10.860 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:07:25.711 UTC [26] LOG:  checkpoint complete: wrote 8443 buffers (51.5%); 0 WAL file(s) added, 17 removed, 33 recycled; write=9.157 s, sync=3.169 s, total=14.851 s; sync files=76, longest=1.915 s, average=0.042 s; distance=817481 kB, estimate=817481 kB; lsn=103/8F914268, redo lsn=103/7103A040
postgres_container  | 2024-11-07 13:07:25.711 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:07:25.711 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:07:25.711 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:07:39.235 UTC [26] LOG:  checkpoint complete: wrote 498 buffers (3.0%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.965 s, sync=1.561 s, total=13.524 s; sync files=18, longest=1.531 s, average=0.087 s; distance=700996 kB, estimate=805833 kB; lsn=103/BA4002B0, redo lsn=103/9BCCB0A0
postgres_container  | 2024-11-07 13:07:39.236 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:07:39.236 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:07:39.283 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:07:48.359 UTC [2266] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:07:48.359 UTC [2266] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:07:48.359 UTC [2266] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:08:04.096 UTC [26] LOG:  checkpoint complete: wrote 178 buffers (1.1%); 0 WAL file(s) added, 13 removed, 28 recycled; write=17.808 s, sync=4.834 s, total=24.853 s; sync files=245, longest=1.582 s, average=0.020 s; distance=668291 kB, estimate=792079 kB; lsn=103/E7423060, redo lsn=103/C496C020
postgres_container  | 2024-11-07 13:08:04.097 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:08:04.097 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:08:04.097 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:08:18.024 UTC [26] LOG:  checkpoint complete: wrote 8465 buffers (51.7%); 0 WAL file(s) added, 13 removed, 31 recycled; write=9.125 s, sync=2.646 s, total=13.928 s; sync files=104, longest=2.168 s, average=0.026 s; distance=725953 kB, estimate=785466 kB; lsn=104/10B6AB40, redo lsn=103/F0E5C440
postgres_container  | 2024-11-07 13:08:18.025 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:08:18.025 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:08:18.025 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:08:35.767 UTC [2288] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:08:35.767 UTC [2288] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:08:35.767 UTC [2288] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:08:41.838 UTC [26] LOG:  checkpoint complete: wrote 2632 buffers (16.1%); 0 WAL file(s) added, 15 removed, 28 recycled; write=20.222 s, sync=1.834 s, total=23.813 s; sync files=225, longest=0.066 s, average=0.009 s; distance=697131 kB, estimate=776633 kB; lsn=104/3E400198, redo lsn=104/1B727228
postgres_container  | 2024-11-07 13:08:41.838 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 13:08:41.838 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:08:41.838 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:08:55.594 UTC [26] LOG:  checkpoint complete: wrote 6150 buffers (37.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.842 s, sync=2.537 s, total=13.757 s; sync files=69, longest=1.325 s, average=0.037 s; distance=697131 kB, estimate=768682 kB; lsn=104/65B62590, redo lsn=104/45FF2028
postgres_container  | 2024-11-07 13:08:55.596 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:08:55.596 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:08:55.596 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:09:10.314 UTC [26] LOG:  checkpoint complete: wrote 2619 buffers (16.0%); 0 WAL file(s) added, 12 removed, 31 recycled; write=10.241 s, sync=1.978 s, total=14.718 s; sync files=51, longest=0.587 s, average=0.039 s; distance=690787 kB, estimate=760893 kB; lsn=104/90401E10, redo lsn=104/7028AF30
postgres_container  | 2024-11-07 13:09:10.314 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:09:10.314 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:09:10.314 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:09:25.853 UTC [2310] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:09:25.853 UTC [2310] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:09:25.853 UTC [2310] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:09:37.998 UTC [26] LOG:  checkpoint complete: wrote 3597 buffers (22.0%); 0 WAL file(s) added, 18 removed, 23 recycled; write=21.428 s, sync=4.345 s, total=27.684 s; sync files=256, longest=0.853 s, average=0.017 s; distance=672666 kB, estimate=752070 kB; lsn=104/C1402448, redo lsn=104/99371A58
postgres_container  | 2024-11-07 13:09:37.999 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:09:37.999 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:09:37.999 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:09:52.385 UTC [26] LOG:  checkpoint complete: wrote 8342 buffers (50.9%); 0 WAL file(s) added, 16 removed, 33 recycled; write=11.496 s, sync=0.324 s, total=14.387 s; sync files=74, longest=0.219 s, average=0.005 s; distance=803482 kB, estimate=803482 kB; lsn=104/E882C130, redo lsn=104/CA4183A0
postgres_container  | 2024-11-07 13:09:52.386 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:09:52.386 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:09:52.386 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:10:06.193 UTC [26] LOG:  checkpoint complete: wrote 1845 buffers (11.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.653 s, sync=2.753 s, total=13.807 s; sync files=49, longest=1.913 s, average=0.057 s; distance=674295 kB, estimate=790563 kB; lsn=105/1222A940, redo lsn=104/F36961E0
postgres_container  | 2024-11-07 13:10:06.193 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:10:06.193 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:10:06.193 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:10:13.898 UTC [2332] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:10:13.898 UTC [2332] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:10:13.898 UTC [2332] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:10:31.806 UTC [26] LOG:  checkpoint complete: wrote 257 buffers (1.6%); 0 WAL file(s) added, 7 removed, 32 recycled; write=21.223 s, sync=1.860 s, total=25.613 s; sync files=241, longest=1.067 s, average=0.008 s; distance=632382 kB, estimate=774745 kB; lsn=105/399A0050, redo lsn=105/1A025A88
postgres_container  | 2024-11-07 13:10:31.807 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:10:31.807 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:10:31.808 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:10:46.199 UTC [26] LOG:  checkpoint complete: wrote 8473 buffers (51.7%); 0 WAL file(s) added, 10 removed, 33 recycled; write=8.256 s, sync=3.279 s, total=14.391 s; sync files=75, longest=3.138 s, average=0.044 s; distance=704826 kB, estimate=767753 kB; lsn=105/63651A08, redo lsn=105/45074498
postgres_container  | 2024-11-07 13:10:46.200 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:10:46.200 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:10:46.206 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:11:06.417 UTC [2354] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:11:06.417 UTC [2354] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:11:06.417 UTC [2354] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:11:14.071 UTC [26] LOG:  checkpoint complete: wrote 3059 buffers (18.7%); 0 WAL file(s) added, 13 removed, 29 recycled; write=24.818 s, sync=1.599 s, total=27.871 s; sync files=230, longest=0.066 s, average=0.007 s; distance=695448 kB, estimate=760523 kB; lsn=105/91402250, redo lsn=105/6F79A528
postgres_container  | 2024-11-07 13:11:14.072 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:11:14.072 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:11:14.072 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:11:26.787 UTC [26] LOG:  checkpoint complete: wrote 5885 buffers (35.9%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.172 s, sync=2.225 s, total=12.716 s; sync files=90, longest=1.288 s, average=0.025 s; distance=651276 kB, estimate=749598 kB; lsn=105/B66EF6D0, redo lsn=105/9739D6C8
postgres_container  | 2024-11-07 13:11:26.788 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:11:26.788 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:11:26.863 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:11:39.427 UTC [26] LOG:  checkpoint complete: wrote 2556 buffers (15.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.485 s, sync=2.754 s, total=12.640 s; sync files=39, longest=1.520 s, average=0.071 s; distance=704898 kB, estimate=745128 kB; lsn=105/E1C71690, redo lsn=105/C23FE050
postgres_container  | 2024-11-07 13:11:39.428 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:11:39.428 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:11:39.428 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:11:54.419 UTC [2376] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:11:54.419 UTC [2376] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:11:54.419 UTC [2376] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:11:56.769 UTC [2373] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:11:56.769 UTC [2373] CONTEXT:  while scanning block 8150 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 13:12:07.383 UTC [26] LOG:  checkpoint complete: wrote 2142 buffers (13.1%); 0 WAL file(s) added, 19 removed, 23 recycled; write=21.608 s, sync=4.223 s, total=27.955 s; sync files=233, longest=1.174 s, average=0.019 s; distance=687057 kB, estimate=739321 kB; lsn=106/1421C408, redo lsn=105/EC2F2550
postgres_container  | 2024-11-07 13:12:07.384 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:12:07.384 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:12:07.384 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:12:22.126 UTC [26] LOG:  checkpoint complete: wrote 8475 buffers (51.7%); 0 WAL file(s) added, 17 removed, 33 recycled; write=11.743 s, sync=0.417 s, total=14.743 s; sync files=76, longest=0.306 s, average=0.006 s; distance=817298 kB, estimate=817298 kB; lsn=106/3C421738, redo lsn=106/1E116F98
postgres_container  | 2024-11-07 13:12:22.127 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:12:22.127 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:12:22.127 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:12:34.935 UTC [26] LOG:  checkpoint complete: wrote 2046 buffers (12.5%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.393 s, sync=2.123 s, total=12.808 s; sync files=37, longest=1.796 s, average=0.058 s; distance=701408 kB, estimate=805709 kB; lsn=106/67C0CC48, redo lsn=106/48E0F318
postgres_container  | 2024-11-07 13:12:34.935 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:12:34.935 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:12:34.935 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:12:45.073 UTC [2397] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:12:45.073 UTC [2397] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:12:45.073 UTC [2397] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:12:59.217 UTC [26] LOG:  checkpoint complete: wrote 181 buffers (1.1%); 0 WAL file(s) added, 8 removed, 31 recycled; write=18.571 s, sync=3.472 s, total=24.283 s; sync files=228, longest=2.207 s, average=0.016 s; distance=627384 kB, estimate=787877 kB; lsn=106/8F671210, redo lsn=106/6F2BD3A8
postgres_container  | 2024-11-07 13:12:59.219 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:12:59.219 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:12:59.219 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:13:13.254 UTC [26] LOG:  checkpoint complete: wrote 8443 buffers (51.5%); 0 WAL file(s) added, 9 removed, 33 recycled; write=11.172 s, sync=0.595 s, total=14.036 s; sync files=97, longest=0.411 s, average=0.007 s; distance=686033 kB, estimate=777692 kB; lsn=106/B74030C0, redo lsn=106/990B1AB8
postgres_container  | 2024-11-07 13:13:13.255 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:13:13.255 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:13:13.256 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:13:24.645 UTC [26] LOG:  checkpoint complete: wrote 4335 buffers (26.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.557 s, sync=1.988 s, total=11.390 s; sync files=44, longest=1.799 s, average=0.046 s; distance=663575 kB, estimate=766281 kB; lsn=106/E010F4C8, redo lsn=106/C18B78E0
postgres_container  | 2024-11-07 13:13:33.193 UTC [2419] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:13:33.193 UTC [2419] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:13:33.193 UTC [2419] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:13:35.297 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 13:13:35.297 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:13:35.297 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:13:46.576 UTC [26] LOG:  checkpoint complete: wrote 3283 buffers (20.0%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.734 s, sync=2.606 s, total=11.279 s; sync files=254, longest=1.411 s, average=0.011 s; distance=535835 kB, estimate=743236 kB; lsn=107/2400248, redo lsn=106/E23FE830
postgres_container  | 2024-11-07 13:13:46.576 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 13:13:46.576 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:13:46.576 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:13:59.605 UTC [26] LOG:  checkpoint complete: wrote 5088 buffers (31.1%); 0 WAL file(s) added, 9 removed, 31 recycled; write=7.394 s, sync=3.629 s, total=13.030 s; sync files=39, longest=3.239 s, average=0.094 s; distance=662296 kB, estimate=735142 kB; lsn=107/2A400300, redo lsn=107/AAC4A98
postgres_container  | 2024-11-07 13:13:59.606 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:13:59.606 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:13:59.607 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:14:12.500 UTC [26] LOG:  checkpoint complete: wrote 5273 buffers (32.2%); 0 WAL file(s) added, 7 removed, 33 recycled; write=8.749 s, sync=2.042 s, total=12.894 s; sync files=100, longest=1.897 s, average=0.021 s; distance=644371 kB, estimate=726065 kB; lsn=107/50686568, redo lsn=107/32009890
postgres_container  | 2024-11-07 13:14:22.027 UTC [2441] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:14:22.027 UTC [2441] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:14:22.027 UTC [2441] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:14:24.082 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:14:24.082 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:14:24.082 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:14:35.094 UTC [26] LOG:  checkpoint complete: wrote 1850 buffers (11.3%); 0 WAL file(s) added, 2 removed, 31 recycled; write=6.580 s, sync=2.688 s, total=11.013 s; sync files=255, longest=1.387 s, average=0.011 s; distance=544739 kB, estimate=707932 kB; lsn=107/73B79078, redo lsn=107/53402500
postgres_container  | 2024-11-07 13:14:35.095 UTC [26] LOG:  checkpoints are occurring too frequently (11 seconds apart)
postgres_container  | 2024-11-07 13:14:35.095 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:14:35.096 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:14:48.006 UTC [26] LOG:  checkpoint complete: wrote 6515 buffers (39.8%); 0 WAL file(s) added, 8 removed, 32 recycled; write=6.890 s, sync=3.536 s, total=12.910 s; sync files=40, longest=3.464 s, average=0.089 s; distance=666177 kB, estimate=703757 kB; lsn=107/9A5D96B8, redo lsn=107/7BE92900
postgres_container  | 2024-11-07 13:14:48.007 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:14:48.007 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:14:48.008 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:15:00.539 UTC [26] LOG:  checkpoint complete: wrote 1520 buffers (9.3%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.899 s, sync=1.613 s, total=12.532 s; sync files=48, longest=1.542 s, average=0.034 s; distance=677293 kB, estimate=701110 kB; lsn=107/C35CCD58, redo lsn=107/A53FE028
postgres_container  | 2024-11-07 13:15:08.398 UTC [2463] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:15:08.398 UTC [2463] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:15:08.398 UTC [2463] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:15:13.266 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:15:13.266 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:15:13.266 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:15:25.382 UTC [26] LOG:  checkpoint complete: wrote 3680 buffers (22.5%); 0 WAL file(s) added, 3 removed, 30 recycled; write=5.691 s, sync=4.127 s, total=12.116 s; sync files=267, longest=1.436 s, average=0.016 s; distance=540708 kB, estimate=685070 kB; lsn=107/E7274118, redo lsn=107/C6407378
postgres_container  | 2024-11-07 13:15:25.383 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:15:25.383 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:15:25.383 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:15:38.288 UTC [26] LOG:  checkpoint complete: wrote 4769 buffers (29.1%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.647 s, sync=1.747 s, total=12.905 s; sync files=40, longest=1.320 s, average=0.044 s; distance=687836 kB, estimate=687836 kB; lsn=108/F40ABE0, redo lsn=107/F03BE4A8
postgres_container  | 2024-11-07 13:15:38.289 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:15:38.289 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:15:38.289 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:15:56.509 UTC [2485] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:15:56.509 UTC [2485] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:15:56.509 UTC [2485] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:15:59.738 UTC [2480] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:15:59.738 UTC [2480] CONTEXT:  while scanning block 5928 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 13:16:04.902 UTC [26] LOG:  checkpoint complete: wrote 4134 buffers (25.2%); 0 WAL file(s) added, 15 removed, 27 recycled; write=22.595 s, sync=2.221 s, total=26.614 s; sync files=234, longest=0.379 s, average=0.010 s; distance=697828 kB, estimate=697828 kB; lsn=108/3E1CC0C0, redo lsn=108/1AD37638
postgres_container  | 2024-11-07 13:16:04.903 UTC [26] LOG:  checkpoints are occurring too frequently (26 seconds apart)
postgres_container  | 2024-11-07 13:16:04.903 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:16:04.903 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:16:18.736 UTC [26] LOG:  checkpoint complete: wrote 6275 buffers (38.3%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.595 s, sync=3.705 s, total=13.833 s; sync files=78, longest=1.936 s, average=0.048 s; distance=702526 kB, estimate=702526 kB; lsn=108/64CFFF50, redo lsn=108/45B46F10
postgres_container  | 2024-11-07 13:16:18.736 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:16:18.736 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:16:18.736 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:16:31.964 UTC [26] LOG:  checkpoint complete: wrote 2208 buffers (13.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.595 s, sync=2.483 s, total=13.229 s; sync files=38, longest=1.780 s, average=0.066 s; distance=709253 kB, estimate=709253 kB; lsn=108/8FB46BB0, redo lsn=108/70FE85B8
postgres_container  | 2024-11-07 13:16:31.965 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:16:31.965 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:16:31.965 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:16:46.408 UTC [2506] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:16:46.408 UTC [2506] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:16:46.408 UTC [2506] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:16:59.223 UTC [26] LOG:  checkpoint complete: wrote 2133 buffers (13.0%); 0 WAL file(s) added, 17 removed, 24 recycled; write=20.630 s, sync=4.508 s, total=27.258 s; sync files=225, longest=1.170 s, average=0.021 s; distance=660946 kB, estimate=704422 kB; lsn=108/C0D1E208, redo lsn=108/9955CE40
postgres_container  | 2024-11-07 13:16:59.224 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:16:59.224 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:16:59.224 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:17:15.814 UTC [26] LOG:  checkpoint complete: wrote 8496 buffers (51.9%); 0 WAL file(s) added, 17 removed, 32 recycled; write=10.003 s, sync=3.912 s, total=16.591 s; sync files=99, longest=3.227 s, average=0.040 s; distance=804220 kB, estimate=804220 kB; lsn=108/E9CAFAB0, redo lsn=108/CA6BC170
postgres_container  | 2024-11-07 13:17:15.815 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:17:15.815 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:17:15.867 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:17:28.841 UTC [26] LOG:  checkpoint complete: wrote 2226 buffers (13.6%); 0 WAL file(s) added, 10 removed, 33 recycled; write=9.269 s, sync=1.641 s, total=13.026 s; sync files=50, longest=1.447 s, average=0.033 s; distance=701703 kB, estimate=793969 kB; lsn=109/13D2A040, redo lsn=108/F53FE0D0
postgres_container  | 2024-11-07 13:17:28.841 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:17:28.841 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:17:28.841 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:17:38.683 UTC [2528] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:17:38.683 UTC [2528] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:17:38.683 UTC [2528] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:17:52.137 UTC [26] LOG:  checkpoint complete: wrote 173 buffers (1.1%); 0 WAL file(s) added, 5 removed, 31 recycled; write=18.688 s, sync=2.518 s, total=23.296 s; sync files=230, longest=1.402 s, average=0.011 s; distance=595779 kB, estimate=774150 kB; lsn=109/39874150, redo lsn=109/199CED80
postgres_container  | 2024-11-07 13:17:52.138 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 13:17:52.138 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:17:52.138 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:18:07.233 UTC [26] LOG:  checkpoint complete: wrote 8323 buffers (50.8%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.652 s, sync=4.697 s, total=15.095 s; sync files=86, longest=3.734 s, average=0.055 s; distance=679559 kB, estimate=764691 kB; lsn=109/63600C70, redo lsn=109/43170AF8
postgres_container  | 2024-11-07 13:18:07.233 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:18:07.233 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:18:07.234 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:18:27.836 UTC [2550] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:18:27.836 UTC [2550] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:18:27.836 UTC [2550] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:18:32.667 UTC [26] LOG:  checkpoint complete: wrote 4440 buffers (27.1%); 0 WAL file(s) added, 14 removed, 29 recycled; write=22.523 s, sync=1.282 s, total=25.434 s; sync files=229, longest=0.068 s, average=0.006 s; distance=713368 kB, estimate=759558 kB; lsn=109/90400150, redo lsn=109/6EA16C00
postgres_container  | 2024-11-07 13:18:32.667 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:18:32.667 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:18:32.667 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:18:45.758 UTC [26] LOG:  checkpoint complete: wrote 4596 buffers (28.1%); 0 WAL file(s) added, 7 removed, 32 recycled; write=8.549 s, sync=1.881 s, total=13.091 s; sync files=98, longest=1.066 s, average=0.020 s; distance=640438 kB, estimate=747646 kB; lsn=109/B4E493F8, redo lsn=109/95B845B8
postgres_container  | 2024-11-07 13:18:45.758 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:18:45.758 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:18:45.758 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:18:58.862 UTC [26] LOG:  checkpoint complete: wrote 3856 buffers (23.5%); 0 WAL file(s) added, 13 removed, 30 recycled; write=7.889 s, sync=2.775 s, total=13.105 s; sync files=46, longest=1.049 s, average=0.061 s; distance=706009 kB, estimate=743482 kB; lsn=109/E14002C0, redo lsn=109/C0CFAAF0
postgres_container  | 2024-11-07 13:18:58.863 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:18:58.863 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:18:58.864 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:19:18.708 UTC [2572] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:19:18.708 UTC [2572] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:19:18.708 UTC [2572] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:19:29.846 UTC [26] LOG:  checkpoint complete: wrote 6190 buffers (37.8%); 0 WAL file(s) added, 17 removed, 25 recycled; write=25.102 s, sync=3.401 s, total=30.983 s; sync files=253, longest=0.994 s, average=0.014 s; distance=679022 kB, estimate=737036 kB; lsn=10A/104020C0, redo lsn=109/EA4166C8
postgres_container  | 2024-11-07 13:19:29.846 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:19:43.968 UTC [26] LOG:  checkpoint complete: wrote 8409 buffers (51.3%); 0 WAL file(s) added, 17 removed, 32 recycled; write=9.145 s, sync=2.625 s, total=14.122 s; sync files=73, longest=2.488 s, average=0.036 s; distance=812019 kB, estimate=812019 kB; lsn=10A/3A780D48, redo lsn=10A/1BD13598
postgres_container  | 2024-11-07 13:19:43.969 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:19:43.969 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:19:43.969 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:19:55.923 UTC [26] LOG:  checkpoint complete: wrote 656 buffers (4.0%); 0 WAL file(s) added, 9 removed, 33 recycled; write=7.146 s, sync=2.299 s, total=11.955 s; sync files=17, longest=2.184 s, average=0.136 s; distance=684673 kB, estimate=799285 kB; lsn=10A/638EC060, redo lsn=10A/459B3BC8
postgres_container  | 2024-11-07 13:19:55.924 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:19:55.924 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:19:55.924 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:20:05.815 UTC [2594] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:20:05.815 UTC [2594] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:20:05.815 UTC [2594] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:20:23.344 UTC [26] LOG:  checkpoint complete: wrote 539 buffers (3.3%); 0 WAL file(s) added, 9 removed, 30 recycled; write=21.495 s, sync=3.708 s, total=27.420 s; sync files=270, longest=1.808 s, average=0.014 s; distance=644539 kB, estimate=783810 kB; lsn=10A/8D400A38, redo lsn=10A/6CF22B70
postgres_container  | 2024-11-07 13:20:23.345 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:20:23.345 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:20:23.364 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:20:35.927 UTC [26] LOG:  checkpoint complete: wrote 8358 buffers (51.0%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.151 s, sync=2.111 s, total=12.582 s; sync files=74, longest=1.976 s, average=0.029 s; distance=676717 kB, estimate=773101 kB; lsn=10A/B46D13E8, redo lsn=10A/963FE118
postgres_container  | 2024-11-07 13:20:35.928 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:20:35.928 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:20:35.928 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:20:47.766 UTC [26] LOG:  checkpoint complete: wrote 2639 buffers (16.1%); 0 WAL file(s) added, 8 removed, 32 recycled; write=7.299 s, sync=2.681 s, total=11.839 s; sync files=41, longest=2.529 s, average=0.066 s; distance=659627 kB, estimate=761753 kB; lsn=10A/DD2BB538, redo lsn=10A/BE828FD0
postgres_container  | 2024-11-07 13:20:47.767 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:20:47.767 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:20:47.767 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:20:56.464 UTC [2616] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:20:56.464 UTC [2616] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:20:56.464 UTC [2616] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:20:59.092 UTC [2613] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:20:59.092 UTC [2613] CONTEXT:  while scanning block 3958 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 13:21:00.092 UTC [2613] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:21:00.092 UTC [2613] CONTEXT:  while scanning block 4039 of relation "stage_omopcdm.voc_concept"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept"
postgres_container  | 2024-11-07 13:21:01.092 UTC [2613] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:21:01.092 UTC [2613] CONTEXT:  while scanning block 3976 of relation "stage_omopcdm.voc_concept_relationship"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_relationship"
postgres_container  | 2024-11-07 13:21:01.092 UTC [2613] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 13:21:01.092 UTC [2613] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 13:21:01.093 UTC [2613] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 13:21:01.093 UTC [2613] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 13:21:12.341 UTC [26] LOG:  checkpoint complete: wrote 219 buffers (1.3%); 0 WAL file(s) added, 3 removed, 31 recycled; write=20.238 s, sync=2.160 s, total=24.574 s; sync files=237, longest=0.992 s, average=0.010 s; distance=558612 kB, estimate=741439 kB; lsn=10B/24058, redo lsn=10A/E09AE368
postgres_container  | 2024-11-07 13:21:12.342 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:21:12.342 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:21:12.342 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:21:25.389 UTC [26] LOG:  checkpoint complete: wrote 8430 buffers (51.5%); 0 WAL file(s) added, 8 removed, 32 recycled; write=8.156 s, sync=2.357 s, total=13.048 s; sync files=72, longest=2.252 s, average=0.033 s; distance=659431 kB, estimate=733239 kB; lsn=10B/27422960, redo lsn=10B/8DA8328
postgres_container  | 2024-11-07 13:21:25.390 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:21:25.390 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:21:25.421 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:21:37.023 UTC [26] LOG:  checkpoint complete: wrote 4140 buffers (25.3%); 0 WAL file(s) added, 10 removed, 33 recycled; write=7.561 s, sync=2.484 s, total=11.634 s; sync files=40, longest=2.269 s, average=0.063 s; distance=694615 kB, estimate=729376 kB; lsn=10B/515BB748, redo lsn=10B/333FE040
postgres_container  | 2024-11-07 13:21:37.024 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:21:37.024 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:21:37.024 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:21:46.220 UTC [2637] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:21:46.220 UTC [2637] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:21:46.220 UTC [2637] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:22:00.059 UTC [26] LOG:  checkpoint complete: wrote 91 buffers (0.6%); 0 WAL file(s) added, 2 removed, 29 recycled; write=17.711 s, sync=3.497 s, total=23.036 s; sync files=238, longest=1.936 s, average=0.015 s; distance=509508 kB, estimate=707389 kB; lsn=10B/74403750, redo lsn=10B/5258F438
postgres_container  | 2024-11-07 13:22:00.061 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 13:22:00.061 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:22:00.061 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:22:14.991 UTC [26] LOG:  checkpoint complete: wrote 8511 buffers (51.9%); 0 WAL file(s) added, 11 removed, 31 recycled; write=11.360 s, sync=0.899 s, total=14.931 s; sync files=98, longest=0.465 s, average=0.010 s; distance=693559 kB, estimate=706006 kB; lsn=10B/9C24E670, redo lsn=10B/7CADD210
postgres_container  | 2024-11-07 13:22:14.992 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:22:14.992 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:22:14.993 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:22:34.857 UTC [26] LOG:  checkpoint complete: wrote 4501 buffers (27.5%); 0 WAL file(s) added, 9 removed, 33 recycled; write=18.131 s, sync=0.362 s, total=19.865 s; sync files=69, longest=0.163 s, average=0.006 s; distance=690561 kB, estimate=704462 kB; lsn=10B/C4208170, redo lsn=10B/A6D3D6D0
postgres_container  | 2024-11-07 13:22:35.046 UTC [2659] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:22:35.046 UTC [2659] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:22:35.046 UTC [2659] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:22:38.801 UTC [26] LOG:  checkpoints are occurring too frequently (24 seconds apart)
postgres_container  | 2024-11-07 13:22:38.801 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:22:38.831 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:22:51.410 UTC [26] LOG:  checkpoint complete: wrote 3788 buffers (23.1%); 0 WAL file(s) added, 5 removed, 28 recycled; write=5.304 s, sync=4.928 s, total=12.610 s; sync files=230, longest=1.878 s, average=0.022 s; distance=531218 kB, estimate=687137 kB; lsn=10B/EA400178, redo lsn=10B/C74020F0
postgres_container  | 2024-11-07 13:22:51.412 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:22:51.412 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:22:51.412 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:23:06.447 UTC [26] LOG:  checkpoint complete: wrote 4590 buffers (28.0%); 0 WAL file(s) added, 15 removed, 31 recycled; write=9.461 s, sync=2.813 s, total=15.035 s; sync files=46, longest=1.636 s, average=0.062 s; distance=757424 kB, estimate=757424 kB; lsn=10C/1502FDB8, redo lsn=10B/F57AE1C8
postgres_container  | 2024-11-07 13:23:06.447 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:23:06.447 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:23:06.447 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:23:25.064 UTC [2681] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:23:25.064 UTC [2681] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:23:25.064 UTC [2681] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:23:34.685 UTC [26] LOG:  checkpoint complete: wrote 2605 buffers (15.9%); 0 WAL file(s) added, 17 removed, 26 recycled; write=23.081 s, sync=3.230 s, total=28.239 s; sync files=242, longest=1.060 s, average=0.014 s; distance=700755 kB, estimate=751757 kB; lsn=10C/454020E8, redo lsn=10C/204031A0
postgres_container  | 2024-11-07 13:23:34.686 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:23:34.686 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:23:34.686 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:23:49.683 UTC [26] LOG:  checkpoint complete: wrote 8456 buffers (51.6%); 0 WAL file(s) added, 16 removed, 32 recycled; write=9.402 s, sync=2.328 s, total=14.998 s; sync files=75, longest=2.098 s, average=0.032 s; distance=783464 kB, estimate=783464 kB; lsn=10C/6F069AF0, redo lsn=10C/5011D3E0
postgres_container  | 2024-11-07 13:23:49.683 UTC [26] LOG:  checkpoints are occurring too frequently (15 seconds apart)
postgres_container  | 2024-11-07 13:23:49.683 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:23:49.683 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:24:03.263 UTC [26] LOG:  checkpoint complete: wrote 60 buffers (0.4%); 0 WAL file(s) added, 12 removed, 32 recycled; write=7.695 s, sync=3.013 s, total=13.580 s; sync files=28, longest=1.749 s, average=0.108 s; distance=725894 kB, estimate=777707 kB; lsn=10C/9BF1DC98, redo lsn=10C/7C5FEE68
postgres_container  | 2024-11-07 13:24:03.263 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:24:03.263 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:24:03.264 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:24:13.712 UTC [2703] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:24:13.712 UTC [2703] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:24:13.712 UTC [2703] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:24:30.179 UTC [26] LOG:  checkpoint complete: wrote 223 buffers (1.4%); 0 WAL file(s) added, 14 removed, 29 recycled; write=20.209 s, sync=4.522 s, total=26.915 s; sync files=243, longest=2.249 s, average=0.019 s; distance=707703 kB, estimate=770707 kB; lsn=10C/C973BD20, redo lsn=10C/A791CB88
postgres_container  | 2024-11-07 13:24:30.180 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:24:30.180 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:24:30.180 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:24:44.606 UTC [26] LOG:  checkpoint complete: wrote 8459 buffers (51.6%); 0 WAL file(s) added, 14 removed, 30 recycled; write=9.454 s, sync=2.657 s, total=14.427 s; sync files=90, longest=1.885 s, average=0.030 s; distance=722271 kB, estimate=765863 kB; lsn=10C/F44022C0, redo lsn=10C/D3A74948
postgres_container  | 2024-11-07 13:24:44.607 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:24:44.607 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:24:44.608 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:25:00.344 UTC [2725] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:25:00.344 UTC [2725] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:25:00.344 UTC [2725] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:25:07.098 UTC [2720] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:25:07.098 UTC [2720] CONTEXT:  while scanning block 8671 of relation "stage_omopcdm.voc_concept_synonym"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.voc_concept_synonym"
postgres_container  | 2024-11-07 13:25:07.098 UTC [2720] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 13:25:07.098 UTC [2720] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 13:25:12.478 UTC [26] LOG:  checkpoint complete: wrote 4139 buffers (25.3%); 0 WAL file(s) added, 17 removed, 27 recycled; write=24.157 s, sync=1.932 s, total=27.871 s; sync files=228, longest=0.162 s, average=0.009 s; distance=719907 kB, estimate=761267 kB; lsn=10D/2314F278, redo lsn=10C/FF97D7D0
postgres_container  | 2024-11-07 13:25:12.479 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:25:12.479 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:25:12.479 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:25:26.655 UTC [26] LOG:  checkpoint complete: wrote 6234 buffers (38.0%); 0 WAL file(s) added, 13 removed, 32 recycled; write=9.680 s, sync=1.937 s, total=14.176 s; sync files=75, longest=1.792 s, average=0.026 s; distance=734174 kB, estimate=758558 kB; lsn=10D/4B3594A0, redo lsn=10D/2C675068
postgres_container  | 2024-11-07 13:25:26.656 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:25:26.656 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:25:26.656 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:25:39.634 UTC [26] LOG:  checkpoint complete: wrote 2209 buffers (13.5%); 0 WAL file(s) added, 11 removed, 31 recycled; write=8.169 s, sync=2.382 s, total=12.979 s; sync files=39, longest=1.359 s, average=0.062 s; distance=695768 kB, estimate=752279 kB; lsn=10D/7624EF88, redo lsn=10D/56DEB2F8
postgres_container  | 2024-11-07 13:25:39.638 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:25:39.638 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:25:39.638 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:25:51.856 UTC [2746] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:25:51.856 UTC [2746] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:25:51.856 UTC [2746] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping analyze of "src_microbiologyevents" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping analyze of "src_d_micro" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "src_pharmacy" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "src_procedureevents" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "voc_concept" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping vacuum of "voc_concept_relationship" --- lock not available
postgres_container  | 2024-11-07 13:25:55.548 UTC [2747] LOG:  skipping analyze of "voc_concept_class" --- lock not available
postgres_container  | 2024-11-07 13:25:55.549 UTC [2747] LOG:  skipping analyze of "voc_relationship" --- lock not available
postgres_container  | 2024-11-07 13:25:55.549 UTC [2747] LOG:  skipping vacuum of "voc_concept_synonym" --- lock not available
postgres_container  | 2024-11-07 13:25:55.549 UTC [2747] LOG:  skipping vacuum of "voc_concept_ancestor" --- lock not available
postgres_container  | 2024-11-07 13:25:55.549 UTC [2747] LOG:  skipping analyze of "cdm_person" --- lock not available
postgres_container  | 2024-11-07 13:26:07.964 UTC [26] LOG:  checkpoint complete: wrote 1594 buffers (9.7%); 0 WAL file(s) added, 18 removed, 24 recycled; write=21.093 s, sync=5.275 s, total=28.327 s; sync files=232, longest=1.664 s, average=0.023 s; distance=687127 kB, estimate=745764 kB; lsn=10D/A76BD078, redo lsn=10D/80CF1098
postgres_container  | 2024-11-07 13:26:07.965 UTC [26] LOG:  checkpoints are occurring too frequently (28 seconds apart)
postgres_container  | 2024-11-07 13:26:07.965 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:26:07.965 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:26:21.577 UTC [26] LOG:  checkpoint complete: wrote 8360 buffers (51.0%); 0 WAL file(s) added, 16 removed, 32 recycled; write=9.589 s, sync=1.623 s, total=13.612 s; sync files=77, longest=1.583 s, average=0.022 s; distance=783665 kB, estimate=783665 kB; lsn=10D/CF400690, redo lsn=10D/B0A3D6B0
postgres_container  | 2024-11-07 13:26:21.578 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:26:21.578 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:26:21.578 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:26:34.365 UTC [26] LOG:  checkpoint complete: wrote 2740 buffers (16.7%); 0 WAL file(s) added, 9 removed, 33 recycled; write=8.132 s, sync=2.543 s, total=12.787 s; sync files=39, longest=2.330 s, average=0.066 s; distance=679875 kB, estimate=773286 kB; lsn=10D/F8B23B78, redo lsn=10D/DA22E430
postgres_container  | 2024-11-07 13:26:34.366 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:26:34.366 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:26:34.366 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:26:42.105 UTC [2768] ERROR:  operator does not exist: json = text at character 966
postgres_container  | 2024-11-07 13:26:42.105 UTC [2768] HINT:  No operator matches the given name and argument types. You might need to add explicit type casts.
postgres_container  | 2024-11-07 13:26:42.105 UTC [2768] STATEMENT:  CREATE TABLE lk_services_clean AS
postgres_container  | 	SELECT src.subject_id    AS   subject_id,
postgres_container  | 	       src.hadm_id       AS   hadm_id,
postgres_container  | 	       src.transfertime  AS   start_datetime,
postgres_container  | 	       lead(src.transfertime) over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS end_datetime, src.curr_service AS curr_service,
postgres_container  | 	       src.prev_service  AS   prev_service,
postgres_container  | 	       lag(src.curr_service)  over (
postgres_container  | 	        partition BY src.subject_id, src.hadm_id
postgres_container  | 	        ORDER BY src.transfertime
postgres_container  | 	    )                                               AS lag_service,
postgres_container  | 	                                -- to double-check that the services sequence is still consistent
postgres_container  | 	    --  'services' AS unit_id,
postgres_container  | 	       src.load_table_id AS   load_table_id,
postgres_container  | 	       src.load_row_id   AS   load_row_id,
postgres_container  | 	       src.trace_id      AS   trace_id
postgres_container  | 	FROM src_services src
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_services_duplicated sd
postgres_container  | 	     ON src.trace_id = sd.trace_id
postgres_container  | 	WHERE sd.trace_id IS NULL -- remove duplicates with the exact same time of transferring
postgres_container  | 	;
postgres_container  | 2024-11-07 13:27:04.479 UTC [26] LOG:  checkpoint complete: wrote 218 buffers (1.3%); 0 WAL file(s) added, 5 removed, 29 recycled; write=25.101 s, sync=2.711 s, total=30.114 s; sync files=241, longest=1.299 s, average=0.012 s; distance=567111 kB, estimate=752669 kB; lsn=10E/1E402090, redo lsn=10D/FCC003F8
postgres_container  | 2024-11-07 13:27:04.480 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:27:18.482 UTC [26] LOG:  checkpoint complete: wrote 8506 buffers (51.9%); 0 WAL file(s) added, 13 removed, 31 recycled; write=10.539 s, sync=0.945 s, total=14.002 s; sync files=104, longest=0.230 s, average=0.010 s; distance=709863 kB, estimate=748388 kB; lsn=10E/48402078, redo lsn=10E/2813A310
postgres_container  | 2024-11-07 13:27:18.483 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:27:18.483 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:27:18.483 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:27:27.803 UTC [2780] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-07 13:27:35.678 UTC [26] LOG:  checkpoint complete: wrote 3143 buffers (19.2%); 0 WAL file(s) added, 19 removed, 24 recycled; write=11.697 s, sync=3.302 s, total=17.196 s; sync files=256, longest=0.742 s, average=0.013 s; distance=717995 kB, estimate=745349 kB; lsn=10E/7A4027C0, redo lsn=10E/53E652D8
postgres_container  | 2024-11-07 13:27:35.679 UTC [26] LOG:  checkpoints are occurring too frequently (17 seconds apart)
postgres_container  | 2024-11-07 13:27:35.679 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:27:35.680 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:27:53.038 UTC [26] LOG:  checkpoint complete: wrote 8697 buffers (53.1%); 0 WAL file(s) added, 19 removed, 29 recycled; write=12.961 s, sync=1.863 s, total=17.358 s; sync files=142, longest=0.460 s, average=0.014 s; distance=782779 kB, estimate=782779 kB; lsn=10E/A54D8140, redo lsn=10E/83AD3F98
postgres_container  | 2024-11-07 13:27:53.039 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 13:27:53.039 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:27:53.039 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:27:54.015 UTC [2887] LOG:  skipping vacuum of "d_icd_diagnoses" --- lock not available
postgres_container  | 2024-11-07 13:28:11.063 UTC [26] LOG:  checkpoint complete: wrote 9634 buffers (58.8%); 0 WAL file(s) added, 17 removed, 26 recycled; write=12.163 s, sync=3.678 s, total=18.025 s; sync files=163, longest=1.600 s, average=0.023 s; distance=696530 kB, estimate=774154 kB; lsn=10E/D3273C38, redo lsn=10E/AE308998
postgres_container  | 2024-11-07 13:28:11.064 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 13:28:11.064 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:28:11.064 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:28:26.197 UTC [2914] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:28:26.197 UTC [2914] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:28:40.762 UTC [26] LOG:  checkpoint complete: wrote 1357 buffers (8.3%); 0 WAL file(s) added, 17 removed, 29 recycled; write=24.590 s, sync=3.332 s, total=29.698 s; sync files=312, longest=1.350 s, average=0.011 s; distance=757107 kB, estimate=772449 kB; lsn=10E/FE402688, redo lsn=10E/DC665848
postgres_container  | 2024-11-07 13:28:40.763 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 13:28:40.763 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:28:40.763 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:28:40.883 UTC [2961] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:28:40.883 UTC [2961] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:28:50.995 UTC [2977] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:28:50.995 UTC [2977] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:29:01.414 UTC [26] LOG:  checkpoint complete: wrote 1937 buffers (11.8%); 0 WAL file(s) added, 13 removed, 27 recycled; write=15.966 s, sync=2.784 s, total=20.651 s; sync files=460, longest=0.531 s, average=0.007 s; distance=664853 kB, estimate=761690 kB; lsn=10F/2890FFD0, redo lsn=10F/4FAADD8
postgres_container  | 2024-11-07 13:29:01.414 UTC [26] LOG:  checkpoints are occurring too frequently (21 seconds apart)
postgres_container  | 2024-11-07 13:29:01.414 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:29:01.414 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:29:05.784 UTC [2994] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:29:05.784 UTC [2994] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:29:26.601 UTC [26] LOG:  checkpoint complete: wrote 2567 buffers (15.7%); 0 WAL file(s) added, 22 removed, 23 recycled; write=16.734 s, sync=6.295 s, total=25.187 s; sync files=290, longest=1.968 s, average=0.022 s; distance=733335 kB, estimate=758854 kB; lsn=10F/594029E8, redo lsn=10F/31BD0AC8
postgres_container  | 2024-11-07 13:29:26.601 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:29:26.601 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:29:26.602 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:29:29.126 UTC [3010] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:29:29.126 UTC [3010] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:29:49.630 UTC [26] LOG:  checkpoint complete: wrote 2822 buffers (17.2%); 0 WAL file(s) added, 19 removed, 30 recycled; write=18.576 s, sync=1.964 s, total=23.029 s; sync files=279, longest=0.681 s, average=0.008 s; distance=807072 kB, estimate=807072 kB; lsn=10F/83C27D48, redo lsn=10F/62FF8C40
postgres_container  | 2024-11-07 13:29:49.632 UTC [26] LOG:  checkpoints are occurring too frequently (23 seconds apart)
postgres_container  | 2024-11-07 13:29:49.632 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:29:49.632 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:30:09.310 UTC [26] LOG:  checkpoint complete: wrote 7213 buffers (44.0%); 0 WAL file(s) added, 14 removed, 31 recycled; write=11.456 s, sync=5.016 s, total=19.679 s; sync files=74, longest=4.672 s, average=0.068 s; distance=724815 kB, estimate=798846 kB; lsn=10F/AF4002F8, redo lsn=10F/8F3CCA80
postgres_container  | 2024-11-07 13:30:09.311 UTC [26] LOG:  checkpoints are occurring too frequently (20 seconds apart)
postgres_container  | 2024-11-07 13:30:09.311 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:30:09.311 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:30:27.473 UTC [26] LOG:  checkpoint complete: wrote 2585 buffers (15.8%); 0 WAL file(s) added, 11 removed, 31 recycled; write=10.012 s, sync=5.116 s, total=18.162 s; sync files=69, longest=3.190 s, average=0.075 s; distance=697669 kB, estimate=788728 kB; lsn=10F/D9962040, redo lsn=10F/B9D1E070
postgres_container  | 2024-11-07 13:30:27.473 UTC [26] LOG:  checkpoints are occurring too frequently (18 seconds apart)
postgres_container  | 2024-11-07 13:30:27.473 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:30:27.474 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:30:41.483 UTC [3027] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:30:41.483 UTC [3027] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:30:58.101 UTC [26] LOG:  checkpoint complete: wrote 2286 buffers (14.0%); 0 WAL file(s) added, 12 removed, 29 recycled; write=23.923 s, sync=3.531 s, total=30.628 s; sync files=221, longest=1.643 s, average=0.016 s; distance=670665 kB, estimate=776922 kB; lsn=110/4424030, redo lsn=10F/E2C107D0
postgres_container  | 2024-11-07 13:30:58.102 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:31:14.138 UTC [26] LOG:  checkpoint complete: wrote 8121 buffers (49.6%); 0 WAL file(s) added, 14 removed, 31 recycled; write=11.542 s, sync=2.098 s, total=16.036 s; sync files=80, longest=1.041 s, average=0.027 s; distance=734473 kB, estimate=772677 kB; lsn=110/2F40CB00, redo lsn=110/F952CA8
postgres_container  | 2024-11-07 13:31:14.138 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:31:14.138 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:31:14.138 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:31:28.257 UTC [26] LOG:  checkpoint complete: wrote 4219 buffers (25.8%); 0 WAL file(s) added, 10 removed, 33 recycled; write=10.294 s, sync=1.742 s, total=14.120 s; sync files=49, longest=1.649 s, average=0.036 s; distance=700560 kB, estimate=765465 kB; lsn=110/58B9A198, redo lsn=110/3A576E68
postgres_container  | 2024-11-07 13:31:28.258 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:31:28.258 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:31:28.258 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:31:40.398 UTC [3046] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:31:40.398 UTC [3046] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:31:42.030 UTC [3043] LOG:  skipping analyze of "src_d_items" --- lock not available
postgres_container  | 2024-11-07 13:31:42.030 UTC [3043] LOG:  skipping vacuum of "src_datetimeevents" --- lock not available
postgres_container  | 2024-11-07 13:31:42.030 UTC [3043] LOG:  skipping vacuum of "src_chartevents" --- lock not available
postgres_container  | 2024-11-07 13:31:53.326 UTC [26] LOG:  checkpoint complete: wrote 92 buffers (0.6%); 0 WAL file(s) added, 3 removed, 31 recycled; write=20.129 s, sync=2.963 s, total=25.069 s; sync files=228, longest=1.583 s, average=0.013 s; distance=563917 kB, estimate=745311 kB; lsn=110/7C5AF850, redo lsn=110/5CC2A640
postgres_container  | 2024-11-07 13:31:53.327 UTC [26] LOG:  checkpoints are occurring too frequently (25 seconds apart)
postgres_container  | 2024-11-07 13:31:53.327 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:31:53.328 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:32:09.652 UTC [26] LOG:  checkpoint complete: wrote 8341 buffers (50.9%); 0 WAL file(s) added, 11 removed, 31 recycled; write=7.708 s, sync=4.468 s, total=16.325 s; sync files=96, longest=3.646 s, average=0.047 s; distance=684216 kB, estimate=739201 kB; lsn=110/A6813508, redo lsn=110/86858848
postgres_container  | 2024-11-07 13:32:09.653 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:32:09.653 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:32:09.653 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:32:34.981 UTC [3065] ERROR:  relation "omopcdm.cdm_person" does not exist at character 15
postgres_container  | 2024-11-07 13:32:34.981 UTC [3065] STATEMENT:  SELECT * FROM omopcdm.cdm_person;
postgres_container  | 2024-11-07 13:32:41.860 UTC [26] LOG:  checkpoint complete: wrote 5133 buffers (31.3%); 0 WAL file(s) added, 16 removed, 28 recycled; write=28.085 s, sync=2.231 s, total=32.208 s; sync files=259, longest=0.312 s, average=0.009 s; distance=726854 kB, estimate=737966 kB; lsn=110/D5F34150, redo lsn=110/B2E2A260
postgres_container  | 2024-11-07 13:32:41.888 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:32:55.071 UTC [26] LOG:  checkpoint complete: wrote 6141 buffers (37.5%); 0 WAL file(s) added, 11 removed, 32 recycled; write=7.562 s, sync=2.753 s, total=13.210 s; sync files=75, longest=1.310 s, average=0.037 s; distance=700423 kB, estimate=734212 kB; lsn=110/FCD7A340, redo lsn=110/DDA2C140
postgres_container  | 2024-11-07 13:32:55.072 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:32:55.072 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:32:55.073 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:33:01.160 UTC [3080] LOG:  unexpected EOF on client connection with an open transaction
postgres_container  | 2024-11-07 13:33:02.192 UTC [3081] ERROR:  canceling autovacuum task
postgres_container  | 2024-11-07 13:33:02.192 UTC [3081] CONTEXT:  while scanning block 10760 of relation "stage_omopcdm.src_chartevents"
postgres_container  | 	automatic vacuum of table "postgres.stage_omopcdm.src_chartevents"
postgres_container  | 2024-11-07 13:33:11.587 UTC [26] LOG:  checkpoint complete: wrote 3498 buffers (21.4%); 0 WAL file(s) added, 16 removed, 24 recycled; write=9.550 s, sync=5.105 s, total=16.515 s; sync files=316, longest=1.099 s, average=0.017 s; distance=649594 kB, estimate=725750 kB; lsn=111/2C39B398, redo lsn=111/548A998
postgres_container  | 2024-11-07 13:33:11.588 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:33:11.588 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:33:11.588 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:33:27.169 UTC [26] LOG:  checkpoint complete: wrote 10308 buffers (62.9%); 0 WAL file(s) added, 18 removed, 28 recycled; write=11.579 s, sync=2.025 s, total=15.582 s; sync files=188, longest=0.445 s, average=0.011 s; distance=762446 kB, estimate=762446 kB; lsn=111/56AAEDD0, redo lsn=111/33D1E2D0
postgres_container  | 2024-11-07 13:33:27.179 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:33:27.179 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:33:27.180 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:33:39.633 UTC [26] LOG:  checkpoint complete: wrote 288 buffers (1.8%); 0 WAL file(s) added, 13 removed, 32 recycled; write=7.928 s, sync=2.156 s, total=12.454 s; sync files=70, longest=1.143 s, average=0.031 s; distance=738462 kB, estimate=760047 kB; lsn=111/7F739980, redo lsn=111/60E45BD8
postgres_container  | 2024-11-07 13:33:39.634 UTC [26] LOG:  checkpoints are occurring too frequently (12 seconds apart)
postgres_container  | 2024-11-07 13:33:39.634 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:33:39.634 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:33:55.957 UTC [3212] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:33:55.957 UTC [3212] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:34:10.432 UTC [26] LOG:  checkpoint complete: wrote 2534 buffers (15.5%); 0 WAL file(s) added, 12 removed, 30 recycled; write=24.945 s, sync=3.679 s, total=30.798 s; sync files=271, longest=1.643 s, average=0.014 s; distance=679559 kB, estimate=751999 kB; lsn=111/ABB60FA0, redo lsn=111/8A5E7AD8
postgres_container  | 2024-11-07 13:34:10.435 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:34:17.461 UTC [3233] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:34:17.461 UTC [3233] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:34:32.508 UTC [26] LOG:  checkpoint complete: wrote 7530 buffers (46.0%); 0 WAL file(s) added, 13 removed, 26 recycled; write=15.926 s, sync=4.232 s, total=22.076 s; sync files=348, longest=1.407 s, average=0.013 s; distance=649050 kB, estimate=741704 kB; lsn=111/D63C9AF8, redo lsn=111/B1FBE630
postgres_container  | 2024-11-07 13:34:32.509 UTC [26] LOG:  checkpoints are occurring too frequently (22 seconds apart)
postgres_container  | 2024-11-07 13:34:32.509 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:34:32.509 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:34:48.376 UTC [26] LOG:  checkpoint complete: wrote 3860 buffers (23.6%); 0 WAL file(s) added, 11 removed, 32 recycled; write=10.586 s, sync=3.379 s, total=15.867 s; sync files=100, longest=1.538 s, average=0.034 s; distance=692810 kB, estimate=736814 kB; lsn=111/FB982710, redo lsn=111/DC4510A0
postgres_container  | 2024-11-07 13:34:48.376 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:34:48.376 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:34:48.376 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:35:07.509 UTC [26] LOG:  checkpoint complete: wrote 4383 buffers (26.8%); 0 WAL file(s) added, 9 removed, 29 recycled; write=14.534 s, sync=2.437 s, total=19.133 s; sync files=69, longest=0.542 s, average=0.036 s; distance=627511 kB, estimate=725884 kB; lsn=112/24B66E28, redo lsn=112/291EDD8
postgres_container  | 2024-11-07 13:35:07.510 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-07 13:35:07.510 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:35:07.511 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:35:26.056 UTC [26] LOG:  checkpoint complete: wrote 9004 buffers (55.0%); 0 WAL file(s) added, 12 removed, 31 recycled; write=13.874 s, sync=2.568 s, total=18.545 s; sync files=102, longest=0.833 s, average=0.026 s; distance=704926 kB, estimate=723788 kB; lsn=112/4D417860, redo lsn=112/2D9869B8
postgres_container  | 2024-11-07 13:35:26.056 UTC [26] LOG:  checkpoints are occurring too frequently (19 seconds apart)
postgres_container  | 2024-11-07 13:35:26.056 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:35:26.057 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:35:35.136 UTC [3250] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:35:35.136 UTC [3250] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:35:53.951 UTC [26] LOG:  checkpoint complete: wrote 2173 buffers (13.3%); 0 WAL file(s) added, 3 removed, 30 recycled; write=23.219 s, sync=2.807 s, total=27.895 s; sync files=226, longest=1.073 s, average=0.013 s; distance=544633 kB, estimate=705873 kB; lsn=112/6F85A980, redo lsn=112/4ED64E70
postgres_container  | 2024-11-07 13:35:53.952 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:35:53.952 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:35:53.952 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:36:09.864 UTC [26] LOG:  checkpoint complete: wrote 6603 buffers (40.3%); 0 WAL file(s) added, 12 removed, 30 recycled; write=8.440 s, sync=4.950 s, total=15.912 s; sync files=97, longest=3.849 s, average=0.052 s; distance=678448 kB, estimate=703130 kB; lsn=112/99400378, redo lsn=112/783F1008
postgres_container  | 2024-11-07 13:36:09.865 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:36:09.865 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:36:09.865 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:36:24.407 UTC [26] LOG:  checkpoint complete: wrote 7191 buffers (43.9%); 0 WAL file(s) added, 9 removed, 33 recycled; write=9.993 s, sync=2.513 s, total=14.543 s; sync files=85, longest=2.036 s, average=0.030 s; distance=698631 kB, estimate=702680 kB; lsn=112/C0CCC770, redo lsn=112/A2E32D68
postgres_container  | 2024-11-07 13:36:32.433 UTC [3269] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:36:32.433 UTC [3269] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:36:38.492 UTC [26] LOG:  checkpoints are occurring too frequently (29 seconds apart)
postgres_container  | 2024-11-07 13:36:38.492 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:36:38.492 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:36:54.076 UTC [26] LOG:  checkpoint complete: wrote 3785 buffers (23.1%); 0 WAL file(s) added, 1 removed, 32 recycled; write=11.136 s, sync=2.517 s, total=15.585 s; sync files=241, longest=1.779 s, average=0.011 s; distance=528269 kB, estimate=685239 kB; lsn=112/E2FCAED0, redo lsn=112/C32161A8
postgres_container  | 2024-11-07 13:36:54.078 UTC [26] LOG:  checkpoints are occurring too frequently (16 seconds apart)
postgres_container  | 2024-11-07 13:36:54.078 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:36:54.078 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:37:08.072 UTC [26] LOG:  checkpoint complete: wrote 5463 buffers (33.3%); 0 WAL file(s) added, 9 removed, 32 recycled; write=8.482 s, sync=2.862 s, total=13.994 s; sync files=81, longest=2.316 s, average=0.036 s; distance=669696 kB, estimate=683685 kB; lsn=113/B669690, redo lsn=112/EC016320
postgres_container  | 2024-11-07 13:37:08.072 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:37:08.072 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:37:08.072 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:37:31.459 UTC [3288] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:37:31.459 UTC [3288] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:37:38.628 UTC [26] LOG:  checkpoint complete: wrote 6263 buffers (38.2%); 0 WAL file(s) added, 12 removed, 30 recycled; write=27.783 s, sync=1.231 s, total=30.556 s; sync files=217, longest=0.068 s, average=0.006 s; distance=692135 kB, estimate=692135 kB; lsn=113/37400188, redo lsn=113/164001E0
postgres_container  | 2024-11-07 13:37:38.629 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:37:51.029 UTC [26] LOG:  checkpoint complete: wrote 3854 buffers (23.5%); 0 WAL file(s) added, 7 removed, 31 recycled; write=7.654 s, sync=2.744 s, total=12.401 s; sync files=103, longest=1.275 s, average=0.027 s; distance=633556 kB, estimate=686277 kB; lsn=113/5C4001A8, redo lsn=113/3CEB5320
postgres_container  | 2024-11-07 13:37:51.030 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:37:51.030 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:37:51.054 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:38:04.444 UTC [26] LOG:  checkpoint complete: wrote 4588 buffers (28.0%); 0 WAL file(s) added, 12 removed, 29 recycled; write=6.997 s, sync=3.856 s, total=13.414 s; sync files=74, longest=2.407 s, average=0.053 s; distance=660779 kB, estimate=683727 kB; lsn=113/873FE300, redo lsn=113/65400170
postgres_container  | 2024-11-07 13:38:04.444 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:38:04.444 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:38:04.444 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:38:18.175 UTC [3307] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:38:18.175 UTC [3307] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:38:34.414 UTC [26] LOG:  checkpoint complete: wrote 4341 buffers (26.5%); 0 WAL file(s) added, 20 removed, 24 recycled; write=23.482 s, sync=3.678 s, total=29.970 s; sync files=241, longest=0.901 s, average=0.016 s; distance=720509 kB, estimate=720509 kB; lsn=113/B830E988, redo lsn=113/9139F678
postgres_container  | 2024-11-07 13:38:34.415 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:38:48.530 UTC [26] LOG:  checkpoint complete: wrote 8354 buffers (51.0%); 0 WAL file(s) added, 18 removed, 32 recycled; write=10.550 s, sync=1.193 s, total=14.115 s; sync files=73, longest=1.134 s, average=0.017 s; distance=825248 kB, estimate=825248 kB; lsn=113/E2400900, redo lsn=113/C39877A0
postgres_container  | 2024-11-07 13:38:48.531 UTC [26] LOG:  checkpoints are occurring too frequently (14 seconds apart)
postgres_container  | 2024-11-07 13:38:48.531 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:38:48.593 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:39:01.768 UTC [26] LOG:  checkpoint complete: wrote 771 buffers (4.7%); 0 WAL file(s) added, 11 removed, 32 recycled; write=8.943 s, sync=2.227 s, total=13.238 s; sync files=54, longest=1.772 s, average=0.042 s; distance=698842 kB, estimate=812607 kB; lsn=114/DB146B8, redo lsn=113/EE3FE030
postgres_container  | 2024-11-07 13:39:01.769 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:39:01.769 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:39:01.769 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:39:11.888 UTC [3326] ERROR:  syntax error at or near "SELECT" at character 14
postgres_container  | 2024-11-07 13:39:11.888 UTC [3326] STATEMENT:  INSERT INTO 
postgres_container  | 	SELECT row_number() OVER (ORDER BY random())                 AS person_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN p.gender = 'F' THEN 8532 -- FEMALE
postgres_container  | 	           WHEN p.gender = 'M' THEN 8507 -- MALE
postgres_container  | 	           ELSE 0
postgres_container  | 	           END                      AS gender_concept_id,
postgres_container  | 	       p.anchor_year                AS year_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS month_of_birth,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS day_of_birth,
postgres_container  | 	       CAST(NULL AS TIMESTAMP)      AS birth_datetime,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_concept_id,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.target_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_concept_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS location_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS provider_id,
postgres_container  | 	       CAST(NULL AS INTEGER)        AS care_site_id,
postgres_container  | 	       CAST(p.subject_id AS text) AS person_source_value,
postgres_container  | 	       p.gender                     AS gender_source_value,
postgres_container  | 	       0                            AS gender_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS race_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id <> 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS race_source_concept_id,
postgres_container  | 	       CASE
postgres_container  | 	           WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	               THEN eth.ethnicity_first
postgres_container  | 	           ELSE NULL
postgres_container  | 	           END                      AS ethnicity_source_value,
postgres_container  | 	       COALESCE(
postgres_container  | 	               CASE
postgres_container  | 	                   WHEN map_eth.target_vocabulary_id = 'Ethnicity'
postgres_container  | 	                       THEN map_eth.source_concept_id
postgres_container  | 	                   ELSE NULL
postgres_container  | 	                   END, 0)          AS ethnicity_source_concept_id,
postgres_container  | 	       --
postgres_container  | 	       'person.patients'            AS unit_id,
postgres_container  | 	       p.load_table_id              AS load_table_id,
postgres_container  | 	       p.load_row_id                AS load_row_id,
postgres_container  | 	       p.trace_id                   AS trace_id
postgres_container  | 	FROM src_patients p
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     tmp_subject_ethnicity eth
postgres_container  | 	     ON p.subject_id = eth.subject_id
postgres_container  | 	         LEFT JOIN
postgres_container  | 	     lk_pat_ethnicity_concept map_eth
postgres_container  | 	     ON eth.ethnicity_first = map_eth.source_code
postgres_container  | 	;
postgres_container  | 2024-11-07 13:39:28.911 UTC [26] LOG:  checkpoint complete: wrote 436 buffers (2.7%); 0 WAL file(s) added, 8 removed, 32 recycled; write=23.040 s, sync=1.925 s, total=27.142 s; sync files=238, longest=1.116 s, average=0.009 s; distance=657343 kB, estimate=797081 kB; lsn=114/35704CD0, redo lsn=114/165EDEE8
postgres_container  | 2024-11-07 13:39:28.912 UTC [26] LOG:  checkpoints are occurring too frequently (27 seconds apart)
postgres_container  | 2024-11-07 13:39:28.912 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:39:28.941 UTC [26] LOG:  checkpoint starting: wal
postgres_container  | 2024-11-07 13:39:41.884 UTC [26] LOG:  checkpoint complete: wrote 8331 buffers (50.8%); 0 WAL file(s) added, 10 removed, 32 recycled; write=8.293 s, sync=2.505 s, total=12.973 s; sync files=69, longest=2.378 s, average=0.037 s; distance=686152 kB, estimate=785988 kB; lsn=114/5F400200, redo lsn=114/404000B0
postgres_container  | 2024-11-07 13:39:41.885 UTC [26] LOG:  checkpoints are occurring too frequently (13 seconds apart)
postgres_container  | 2024-11-07 13:39:41.885 UTC [26] HINT:  Consider increasing the configuration parameter "max_wal_size".
postgres_container  | 2024-11-07 13:39:41.931 UTC [26] LOG:  checkpoint starting: wal
